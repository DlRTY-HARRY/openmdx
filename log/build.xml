<?xml version="1.0" encoding="iso-8859-1"?>
<!--
=======================================================================
= Name:        $Id: build.xml,v 1.4 2009/03/09 14:24:54 wfro Exp $
= Description: openMDX/Log Build File
= Revision:    $Revision: 1.4 $
= Date:        $Date: 2009/03/09 14:24:54 $
= Copyright:   (c) 2003-2008 OMEX AG
=======================================================================
=
= This software is published under the BSD license as listed below.
= 
= Copyright (c) 2004-2008, OMEX AG, Switzerland
= All rights reserved.
= 
= Redistribution and use in source and binary forms, with or without 
= modification, are permitted provided that the following conditions 
= are met:
= 
= * Redistributions of source code must retain the above copyright
=   notice, this list of conditions and the following disclaimer.
= 
= * Redistributions in binary form must reproduce the above copyright
=   notice, this list of conditions and the following disclaimer in
=   the documentation and/or other materials provided with the
=   distribution.
= 
= * Neither the name of the openMDX team nor the names of its
=   contributors may be used to endorse or promote products derived
=   from this software without specific prior written permission.
= 
= THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
= CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
= INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
= MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
= DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
= BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
= EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
= TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
= DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
= ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
= OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
= OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
= POSSIBILITY OF SUCH DAMAGE.
= 
-->
<project 
	name="openmdx-log" 
	default="-projecthelp"
	xmlns:openmdx="xri://(antlib:org.openmdx.tools.ant)"
	xmlns:antcontrib="antlib:net.sf.antcontrib"
	xmlns:jpox="http://www.jpox.org"
>
	<description>Builds the openMDX/Log component</description>
	<property name="project.specification.title" value="openMDX/Log"/>

	<!-- Slash separated platform list, the last entry being the default -->
	<property name="project.platform.list" value="jre-1.5"/>

	<!-- Included Ant Projects -->
	<import file="../ant/etc/ant/build-properties.xml"/>
	<import file="../ant/etc/ant/build-library.xml"/>

	<path id="project.lib.classpath">
		<path refid="openmdx.core.lib"/>
		<path refid="openmdx.core.bin"/>
	</path>
	<path id="project.bin.classpath">
		<path refid="project.lib.classpath"/>
		<!--
		<pathelement location="${basedir}/src/resource"/>
		-->
		<pathelement location="${build.dir}/bin"/>
		<!--
		<pathelement location="${build.dir}/src/resource"/>
		<pathelement location="${build.dir}/model/${ant.project.name}.openmdx-xmi.zip"/>
		-->
	</path>
	<patternset id="project.junit.test.case">
		<include name="org/openmdx/test/**/Test*.java"/>
	</patternset>
	<patternset id="slf4j-openmdx1.jar.content">
		<include name="org/slf4j/impl/*"/>
		<include name="org/openmdx/**"/>
	</patternset>
	
	<!-- ******************************************************************* -->
	<!-- * generate -->
	<!-- ******************************************************************* -->
	<target 
		name="generate" 
		description="Prepare projects openMDX/Log depends on" 
		depends="build-init"
	>
		<ant dir="${openmdx.home}/core" inheritAll="false" target="prepare"> 
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant>
	</target>

	<!-- ******************************************************************* -->
	<!-- * java-archives -->
	<!-- ******************************************************************* -->	
	<target 
		name="java-archives" 
		depends="deliverables-init,build"
	>
		<openmdx:archive
			destfile="${deliver.dir}/lib/slf4j-openmdx1.jar"
			format="jar"
		>
			<openmdx:archivemanifest refid="project.manifest"/>
			<openmdx:archivemanifest>
				<attribute name="Specification-Title" value="SLF4J Implementation Logging to openMDX Log"/>
				<attribute name="Implementation-Title" value="slf4j-openmdx1 for ${build.target.platform}"/>
			</openmdx:archivemanifest>
			<openmdx:archivefileset dir="${build.dir}/bin">
				<patternset refid="slf4j-openmdx1.jar.content"/>
			</openmdx:archivefileset>
		</openmdx:archive>

	</target>
	
	<!-- ******************************************************************* -->
	<!-- * web-archives -->
	<!-- ******************************************************************* -->
	<target name="web-archives" depends="deliverables-init,java-archives">
		<mkdir dir="${deliver.dir}/deployment-unit"/>
		<openmdx:archive
			format="war" 
			destfile="${deliver.dir}/deployment-unit/openmdx-log-console.war"
		>
			<openmdx:archivemanifest refid="project.manifest"/>
			<openmdx:archivemanifest>
				<attribute name="Specification-Title" value="${project.specification.title} WebAplication Log Console"/>
				<attribute name="Implementation-Title" value="openmdx-log-console for ${build.target.platform}"/>
			</openmdx:archivemanifest>
			<openmdx:archivefileset dir="src/war/openmdx-log-console.war" />
		</openmdx:archive>
		<openmdx:archive
			format="war" 
			destfile="${deliver.dir}/deployment-unit/openmdx-log-sink.war"
		>
			<openmdx:archivemanifest refid="project.manifest"/>
			<openmdx:archivemanifest>
				<attribute name="Specification-Title" value="${project.specification.title} WebAplication Log Sink"/>
				<attribute name="Implementation-Title" value="openmdx-log-sink for ${build.target.platform}"/>
			</openmdx:archivemanifest>
			<openmdx:archivefileset dir="src/war/openmdx-log-sink.war"/>
			<openmdx:archivefileset 
				prefix="WEB-INF/lib"
				dir="${deliver.dir}/lib"
			>
				<include name="openmdx-application.jar"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				prefix="WEB-INF/classes"
				dir="build/${build.target.platform}/bin"
			>
				<include name="org/openmdx/application/servlet/log/**"/>
			</openmdx:archivefileset>
		</openmdx:archive>
	</target>

	<!-- ******************************************************************* -->
	<!-- * Deliverables -->
	<!-- ******************************************************************* -->
	<target 
		name="deliverables" 
		description="Populates the project's distribution directory" 
		depends="java-archives,source-archives,web-archives"
	/>

	<!-- ******************************************************************* -->
	<!-- * test -->
	<!-- ******************************************************************* -->
	<target name="test"/>
	
	<!-- ******************************************************************* -->
	<!-- * Distribution -->
	<!-- ******************************************************************* -->
	<target 
		name="distribution" description="Creates the distribution archives" 
		depends="distribution-init,deliverables"
	>
		<openmdx:archive 
			destfile="${distribution.dir}/openmdx-${project.implementation.version}-${base.dir.name}.${build.target.platform}."
			format="${distribution.format}"
			checksum="MD5"
		>
			<openmdx:archivefileset 
				dir="${basedir}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}"
			>
				<include name="*LICENSE"/>
				<include name="README"/>
				<include name="RELEASE-NOTES"/>
				<include name="build.xml"/>
				<include name="*.properties"/>
				<include name="*.xml"/>
				<include name=".cvsignore"/>
				<include name="*.checkstyle"/>				
				<include name="etc/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}"
			>
				<include name="${build.target.platform}/${base.dir.name}/**"/>
				<include name="source-archive/${base.dir.name}/**"/>
				<include name="eclipse/${build.target.platform}/${base.dir.name}/**"/>				
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}/eclipse" 
				prefix="${project.implementation.prefix}-${project.implementation.version}"
			>
				<include name="${build.target.platform}/${base.dir.name}/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}/${base.dir.name}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}/"
			>
				<include name=".classpath"/>
				<include name=".project"/>
			</openmdx:archivefileset>			
			<openmdx:archivefilterchain>
				<patternset>
					<include name="**/.project"/>
					<include name="**/.classpath"/>
				</patternset>
				<tokenfilter>
				    <replaceregex pattern="( \(.*\))? ~ " replace=" (${project.implementation.version}) ~ "/>
				</tokenfilter>
			</openmdx:archivefilterchain>
		</openmdx:archive>		
	</target>
	
	<!-- ******************************************************************* -->
	<!-- * Java API Documentation -->
	<!-- ******************************************************************* -->
	<target 
		name="api-doc" 
		description="Generate the Java API documentation" 
		depends="api-doc-init" 
		unless="api-doc.is.up-to-date"
	>
		<mkdir dir="${build.dir}/doc/api"/>
		<javadoc 
			destdir="${build.dir}/doc/api" 
			author="true" 
			version="true" 
			locale="en" 
			use="true" 
			windowtitle="${project.specification.title} API" 
			doctitle="${project.specification.title} API ${project.specification.version}" 
			maxmemory="512m"
			excludepackagenames="org.openmdx.test.*"
		>
			<packageset dir="${basedir}/src/java"/>
			<packageset dir="${build.dir}/src/java"/>
			<classpath refid="project.bin.classpath"/>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" offline="true" packagelistLoc="${openmdx.home}/core/etc/javadoc/j2se/"/>
			<link href="http://java.sun.com/javaee/5/docs/api/" offline="true" packagelistLoc="${openmdx.home}/core/etc/javadoc/j2ee/"/>
			<link href="http://www.openmdx.org/openmdx/core/2.0/java-jre-1.5/" offline="true" packagelistLoc="${openmdx.home}/core/etc/javadoc/openmdx/"/>
			<group>
				<title>${project.specification.title} Radius</title>
				<package name="org.openmdx.security.radius.client"/>
				<package name="org.openmdx.uses.net.sourceforge.jradiusclient"/>
				<package name="org.openmdx.uses.net.sourceforge.jradiusclient.*"/>
			</group>
			<bottom>This software is published under the BSD license. Copyright &#169; 2003-${build.year}, OMEX AG, Switzerland, All rights reserved. Use is subject to &lt;a href="http://www.openmdx.org/license.htm"&gt;license terms&lt;/a&gt;.</bottom>
		</javadoc>
		<echo>
------------------------------------------------------------------------------------------------
The Java API documentation for ${project.specification.title} has been generated at 
${build.dir}/doc/api/index.html
------------------------------------------------------------------------------------------------
	    </echo>
		<mkdir dir="${deliver.dir}/doc"/>
	    <openmdx:archive
			destfile="${deliver.dir}/doc/${ant.project.name}.javadoc.zip"
			format="zip"
		>
			<openmdx:archivefileset dir="${build.dir}/doc/api">
				<include name="**"/>
			</openmdx:archivefileset>
		</openmdx:archive>
	</target>

</project>
