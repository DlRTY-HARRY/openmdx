<?xml version="1.0" encoding="iso-8859-1"?>
<!--
=======================================================================
= Name:        $Id: build.xml,v 1.17 2007/02/06 19:11:57 hburger Exp $
= Description: openmdx project raw
= Revision:    $Revision: 1.17 $
= Date:        $Date: 2007/02/06 19:11:57 $
= Copyright:   (c) 2003-2004 OMEX AG
=======================================================================
 *
 * This software is published under the BSD license
 * as listed below.
 * 
 * Copyright (c) 2004-2005, OMEX AG, Switzerland
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met:
 * 
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * 
 * * Neither the name of the openMDX team nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
-->
<project 
	name="openmdx-together" 
	default="-projecthelp"
	xmlns:openmdx="xri://(antlib:org.openmdx.tools.ant)"
	xmlns:antcontrib="antlib:net.sf.antcontrib"
	xmlns:ivy="xri://(antlib:fr.jayasoft.ivy.ant)"
>
	<description>Builds the openMDX/Plugin for Together</description>
	<property name="project.specification.title" value="openMDX/Plugin.Together"/>

	<!-- Slash separated platform list, the last entry being the default -->
	<property name="project.platform.list" value="together-6"/>

	<!-- Included Ant Projects -->
	<import file="../ant/etc/ant/build-properties.xml"/>
	<import file="../ant/etc/ant/build-library.xml"/>

	<path id="borland.together.api">
		<pathelement location="${openmdx.home}/opt/borland/together/lib/openapi.jar"/>
	</path>
	<path id="project.lib.classpath">
	    <path refid="java2.enterprise.lib"/>
	    <path refid="java2.extension.lib"/>
		<path refid="openmdx.core.lib"/>
		<path refid="borland.together.api"/>
	</path>
	<path id="project.bin.classpath">
		<path refid="project.lib.classpath"/>
		<pathelement location="${basedir}/src/resource"/>
		<pathelement location="${build.dir}/bin"/>
	</path>

	<!-- ******************************************************************* -->
	<!-- * generate -->
	<!-- ******************************************************************* -->
	<target name="generate" description="Generates the the files needed for this project" depends="build-init">
		<ant dir="${openmdx.home}/core" inheritAll="false" target="java-archives">
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant>
	</target>	
	
	<!-- ******************************************************************* -->
	<!-- * java-archives -->
	<!-- ******************************************************************* -->
	<target name="java-archives" depends="deliverables-init,build">
		<copy todir="${deliver.dir}/lib">
			<fileset dir="${basedir}">
				<include name="MANIFEST.MF"/>
			</fileset>
			<fileset dir="${openmdx.home}/java2/${build.java.platform}/enterprise/lib">
				<include name="xml-apis.jar"/>
			</fileset>
			<fileset dir="${openmdx.home}/java2/${build.java.platform}/extension/lib">
				<include name="commons-collections-extendedproperties.jar"/>
				<include name="jakarta-oro.jar"/>
				<include name="velocity.jar"/>
			</fileset>
			<fileset dir="${openmdx.home}/${build.java.platform}/core/lib">
				<include name="openmdx-kernel.jar" />
				<include name="openmdx-base.jar" />
				<include name="j2ee-apis.jar"/>
			</fileset>
		</copy>
		<openmdx:archive
			destfile="${deliver.dir}/lib/openmdx-together-plugin.jar"
			format="jar"
		>
			<openmdx:archivemanifest refid="project.manifest"/>
			<openmdx:archivemanifest>
				<attribute name="Specification-Title" value="${project.specification.title} Library together-plugin"/>
				<attribute name="Implementation-Title" value="openmdx-together-plugin for ${build.target.platform}"/>
			</openmdx:archivemanifest>
			<openmdx:archivefileset dir="${build.dir}/bin">
				<patternset id="openmdx-together-plugin.jar.content">
					<include name="org/openmdx/**"/>
				</patternset>
			</openmdx:archivefileset>
		</openmdx:archive>
	</target>

	<!-- ******************************************************************* -->
	<!-- * deliverables -->
	<!-- ******************************************************************* -->
	<target 
		name="deliverables" 
		description="Populate the project's deliverables directory" 
		depends="deliverables-init,java-archives,source-archives"
	/>

	<!-- ******************************************************************* -->
	<!-- * distribution -->
	<!-- ******************************************************************* -->
	<target 
		name="distribution" 
		description="Create the project's distribution archives" 
		depends="distribution-init,deliverables"
	>
		<openmdx:archive 
			destfile="${distribution.dir}/openmdx-${openmdx.implementation.version}-plugin.${build.target.platform}-exporter."
			format="${distribution.format}"
			checksum="MD5"
		>
			<openmdx:archivefileset 
				dir="${basedir}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}"
			>
				<include name="LICENSE"/>
				<include name="README"/>
				<include name="etc/together/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}"
			>
				<include name="${build.target.platform}/together/**"/>
			</openmdx:archivefileset>
		</openmdx:archive>
	</target>

</project>

