Distribution Name: openMDX/Core
Release Date: 2010-05-01
Implementation Version: 2.6.0

---------------------------------------------------------------------
Notes:

  This software is published under the BSD license as listed below.
  
  Copyright (c) 2004-2010, OMEX AG, Switzerland
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions 
  are met:
  
  * Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
  
  * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in
    the documentation and/or other materials provided with the
    distribution.
  
  * Neither the name of OMEX AG nor the names of the contributors
    to openMDX may be used to endorse or promote products derived
    from this software without specific prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
  
  ------------------
  
  This product includes software developed by other organizations as
  listed in the NOTICE file.

---------------------------------------------------------------------

0.    SUMMARY

      * Support for Eclipse EMF / UML2 Tools
      * REST transport for intra-JVM and inter-JVM communication
      * WbXML encoder / decoder
      * Improvements persistence manager
      * Refactoring XML importer / exporter
      * Clean up
      * Fixed bugs      
                  
==============================================================================
Version 2.6.0                                                       2010-05-01
==============================================================================

1.    NEW FEATURES
      
      CR20019135
      Support for Eclipse EMF / UML2 Tools. openMDX models migrated to EMF / 
      UML2 Tools models. The .uml files are located in src/model/emf. Eclipse EMF
      replaces RSM as primary modeling tool for openMDX based applications.  

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019124
      REST Exceptions
      
      * A REST exception's stack trace is included even if it has to be 
        prepared.
      * Resource Exceptions are logged at Level.FINE.
        Internal Server Errors are logged at Level.SEVERE.
         
      CR20019076
      JDO callbacks 
      
      * All matching implementation classes are now taken into consideration 
        for lazy instantiation and feature dispatching, not only the most and 
        least derived ones.
      * Super-classes of matching implementation classes are excluded from the 
        set of classes to be potentially instantiated.
      * Callbacks are dispatched to all classes of this set implementing the
        given callback interface.
         
      CR20019122
      REST Servlet Behaviour
      
      * The REST Servlets default MIME type is "application/xml;charset=UTF-8".
      * CREATE and UPDATE reply objects are re-fetched after auto-commit. 
      
2.1.  FIXED BUGS
      
      CR20019123
      commit() behaviour 
      
      The unit of work of a persistence manager proxy re-orders persistent-new 
      objects before propagation if necessary.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      20019090
      Remove SLF4 from openMDX/Core 

      Remove SLF4J from
      * openMDX/Core
      * openMDX/Extension

      Restrict its usage to dependent projects such us
      * openMDX Thrirtparty OpenEJB
      * openMDX Platform OpenEJB 


==============================================================================
Version 2.5.4                                                       2010-03-11
==============================================================================

1.    NEW FEATURES

      CR20019036
      HttpClient 
      
      HttpClient and HttpCookie support added.
      
      openmdx-authentication has been been added.

      CR20019014
      Subclass selection 
      
      Support for a multivalued OBJECT_INSTANCE_OF predicate.
      
      Usage:
      
            PropertyQuery query = (PropertyQuery) entityManager.newQuery(
                Property.class
            );
            PersistenceHelper.setClasses(
                query,
                IntegerProperty.class, DecimalProperty.class
            );
      
      
      CR20018984
      Entity Manager Proxy Factory 
      
      Provide an EJB independent Entity Manager Proxy Factory:
      org.openmdx.application.rest.spi.EntityManagerProxyFactory_2
      
      CR20018982 
      retainValues
      
      Support the retainValues flag.
      
      Transactional objects are
      * evicted after flush or commit if retainValues is false
      * not evicted after flush or commit if retainValues is true
       
      CR20018976
      Database: support for nested queries. Support for filter property values 
      of type org.openmdx.base.query.Filter. 
      
      CR20018820 	
      audit2
      
      Audit2 storing audit entries the same way as audit1 does.
      
      CR20018959
      Date/Time Precision
      
      The precision of timestamp fields may now be configured with the 
      dateTimePrecision option as
      * SECONDS
      * MILLISECONDS
      * MICROSECONDS (default)
      * NANOSECONDS     
      
      It is applied under the following conditions:
      * The protocol between PERSISTENCE and MODEL layer uses XML data types
      * the value refers to a time point after 1970-01-01T00:00:00Z
      * the column includes a timezone in case of write operations 
      
      CR20018955
      VirtualObjects_2
      
      The new plug-in is well known to Switch_1 as it provides virtual objects 
      on an object id base, overriding the ports configured for any matching 
      pattern.
      
      There are two ways to inject virtual objects:
      * as deployment configuration one can provide pattern/class pairs for 
        final classes
      * via the VirtualObjects_2_0.putSeed(Path,objectClass) method plug-ins 
        are able to inject objects at run-time
      
      The default configuration is

        <property 
        	name="org.openmdx.jdo.DataManager.virtualObjectPlugIn" 
        	value="org.openmdx.virtual.PlugIn"
        />
		<!-- ... -->
        <property 
        	name="org.openmdx.virtual.PlugIn.class" 
        	value="org.openmdx.base.accessor.rest.spi.VirtualObjects_2"
        />
        <property 
        	name="org.openmdx.virtual.PlugIn.finalPattern[0]" 
        	value="xri://@openmdx*($..)"
        />
        <property
        	name="org.openmdx.virtual.PlugIn.finalPattern[1]" 
        	value="xri://@openmdx*($..)/provider/($..)"
        />
        <prop20018969erty
        	name="org.openmdx.virtual.PlugIn.finalClass[0]"
        	value="org:openmdx:base:Authority"
        />
        <property
        	name="org.openmdx.virtual.PlugIn.finalClass[1]"
			value="org:openmdx:base:Provider"
		/>

      The VirtualObjects_2_0 instance is retrieved through

		VirtualObjects_2_0 virtualObjects = SharedObjects.getPlugInObject(
			persistenceManager, 
			VirtualObjects_2_0.class
		);
				
      CR20018905
      UUIDs
      
      The expression UUIDs.newUUID() is now preferred over 
      UUIDs.getGenerator().next() as the former one reuses thread local UUID
      generators while the latter one creates a new generator on each 
      invocation.
      
      CR20018820 	
      View Manager Plug-Ins 
      
      The view manager interceptors are now pluggable, e.g.
      
        <property 
        	name="org.openmdx.jdo.ViewManager.plugIn[0]" 
        	value="org.openmdx.base.PlugIn"
        />
        <property 
        	name="org.openmdx.jdo.ViewManager.plugIn[1]" 
        	value="org.openmdx.state2.PlugIn"
        />
        <property 
        	name="org.openmdx.state2.PlugIn.class" 
        	value="org.openmdx.state2.aop1.PlugIn_1"
        />
        <property 
        	name="org.openmdx.base.PlugIn.class" 
        	value="org.openmdx.base.aop1.PlugIn_1"
        />
      
      A singleton list with org.openmdx.base.aop1.StandardPlugIn_1 is used if 
      no plug-in is configured. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20018977
      Association Impl 
      
       The current approach to dispatch to an association implementation was 
       inconsistent:
       * overriding the getReference accessor was ignored by getObjectById calls  
            
      CR20018980
      Deprecated SparseList. Use List or SparseArray instead.
            
      CR20018924
      Database: optimize find(). Optimize find() in case multi-valued attributes 
      have to be returned. Multi-valued attributes are now retrieved from the 
      secondary table with one SELECT for all objects instead of one SELECT for
      each object.  
      
      CR20018820 	
      audit2 
      
      DataManager_2Bean no longer invokes setRollbackOnly() when execute()
      terminates with a ResourceException.
      
      It's up to the client whether the unit of work should be committed or
      rolled back.
      
2.1.  FIXED BUGS
      
      CR20018969
      SparseArray
      
      Store and retrieval was not erroneous.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none

---
