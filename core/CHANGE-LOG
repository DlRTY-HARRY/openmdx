==============================================================================
Version 2.14.4                                                      2015-10-07
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES
      
      NONE
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
 
      20039314
      Optional openmdx-system.jar
      
      openmdx-system.jar is only required if one wants to use
      XRI based URLs with +resource or +zip authorities.
      
2.1.  FIXED BUGS

      20020817
      MOF Repository Access Failure
      
      The dereferenced type is now cached at the ModelElement_1 level.
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES

      NONE

      
==============================================================================
Version 2.14.2                                                      2015-08-20
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES
      
      NONE
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
 
      CR20032694
      Entity Mapper Enhancement

      Handle XRI Resource URLs directly bypassing the XRI URL protocol 
      handler.  

2.1.  FIXED BUGS

      NONE
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES

      NONE

      
==============================================================================
Version 2.14.1                                                      2015-08-17
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES
      
      CR20033508
      java-sources

      Java source archive files corresponding to their java archives added
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
 
      CR20033508
      JRE 6

      Re-enable JRE 6

2.1.  FIXED BUGS

      CR20033508
      Normalized Object Ids
      
      Re-enable normalized object ids
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES

      NONE

      
==============================================================================
Version 2.14.0                                                      2015-01-23
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES
      
      CR20029290
      RestServlet_2 supports JSON and Swagger:
      * Support for application/json in addition to text/xml
      * Swagger-compliant API at object-level with XRI-suffix :api and :api-ui
 
      CR20025970	
      ExtendedRecordFactory
      
      There is a new createMappedRecord method with the record interface class 
      as argument.

      CR20020172
      Query as JCA Record
      
      Dalvik update
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20025970	
      Port
      
      A Port has now its Connection class as generic argument. 

      CR20022115
      Serializability
      
      The following classes are no longer Serializable 
      * InboundConnection_2 
      * MarshallingStructure_1
           
      CR20025970	
      Parser
      
      The Parser interface has been moved from org.w3c.Parser to 
      org.openmdx.kernel.text.spi.Parser 
      
      CR20025970	
      Dataprovider 2 Stack
      
      Boolean configuration values should now match true or false (ignoring
      case) when specified (either as Boolean or String value). The default
      value is returned otherwise. 

2.1.  FIXED BUGS

      CR20022115
      Container_1
      
      Container_1.getCache() is again able to cache the plain collection.
      
      CR20022115
      Exporter
      
      org.openmdx.application.xml.Exporter.newFilter(String) corrected
      
2.2.  DEPRECATED FEATURES

      CR20025970	
      Dataprovider 2 Stack
      
      Some features will not be supported by the Dataprovider 2 stack
      
      ALL layers
      * sequenceSupported
        This flag seems to be in use no longer
      * legacyConfiguration
        The dataprovider 2 stack will apply the Java Bean pattern to
        its plug-ins
      * batchSize
        the dataprovider 2 stack will support the batch size where
        required by the plug-in implementation
      * newReplyId()
        This method seems to be in use no longer
      * getId()
        This method seems to be in use no longer
      * terminal()
        This method seems to be in use no longer
      * getConnectionFactory
        This method seems to be in use no longer
      * applyLegacyConfiguration()
        This method seems to be in use no longer

      INTERCEPTION layer
      * Classic_1
        The classic implementation of the interception layer did prefer
        NOT_FOUND exceptions over empty replies.
      
      TYPE layer
      * genericTypePath
        The generic type path feature did allow some unspecified object
        types to be treated as org::openmdx::base::BasicObject instances
 
      APPLICATION layer     
      
      MODEL layer
      
      PERSISTENCE layer
      * chunkSize     
        Once upon a time the chunk size had be used to define the large
        objects' buffer size
      * streamBufferDirectory
        The stream buffer directory is was used for the for the 
        JRE 5/setStreamByValue support only
      * cloneReply
        Returning unmodifiable records eliminates the need to clone them.

      Embedded Dataprovider
      * getDataprovider() & setDataprovider()
        These methods seem to be no longer in use
      * getDatasource() & setDatasource()
        These methods seem to be no longer in use
      
2.3.  REMOVED FEATURES

      CR20025970	
      BeanFactory
      
      org.openmdx.kernel.loading.BeanFactory's constructors are now private,
      the newInstance() factory methods have to be used instead.
            
      CR20025970	
      Dataprovider 2 Stack
      
      This unused features have already been removed
      
      ALL layers
      * WORK_AROUND_SUN_APPLICATION_SERVER_BINDINGS
     
      INTERCEPTION layer
      
      TYPE layer
 
      APPLICATION layer
      
      MODEL layer
      
      PERSISTENCE layer

      
==============================================================================
Version 2.13.1                                                      2014-08-27
==============================================================================

0.    KNOWN ISSUES

      CR20020172
      Query as JCA Record
      
      Dalvik update still lacking!

1.    NEW FEATURES
      
      NONE
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020172
      Query as JCA Record

      CR20023803
      A Path's String representation
      
      Path.toString() is now equivalent to Path.toXRI().
      Its former String representation value is now returned by
      Path.toClassicRepresentation() 

2.1.  FIXED BUGS

      CR20025037
      nodeCotainer
      
      RSM model for org::openmdx::preferences2 contains a spelling mistake
      ("nodeCotainer" instead of "nodeContainer").
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES
      
      CR20020172
      RestServlet_2
      
      The deprecated class org.openmdx.application.rest.http.RestServlet_2 
      has been removed, org.openmdx.application.rest.http.servlet.RestServlet_2
      should be used instead.

      
==============================================================================
Version 2.13.0                                                      2014-08-01
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES
      
      NONE
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20024879
      Implementation StandardBeanTransformer. Support for XStream if found on 
      class path.

      CR20024878
      ModelElement_1 implementation. Caching of runtime-features: e.g. name, qualifiedName, type.

      CR20023803
      Path Implementation
      
      A path consists now of its parent ant its typed base component.

      CR20023803
      Path Wildcard
      
      The expression
        new Path("xri://@openmdx*A/provider/P").isLike(
          new Path(""xri://@openmdx*A/provider/($..)/($..)/($...)")
        )
      returns false in future.

2.1.  FIXED BUGS

      NONE
      
2.2.  DEPRECATED FEATURES

      CR20023803
      PathComponent
      
      The former org.openmdx.base.naming.PathComponent class has been 
      deprecated and moved to org.openmdx.base.naming.legacy.PathComponent.

      CR20023803
      Path Locking
      
      It is no longer necessary to invoke Path.lock() as a path is unmodifiable
      in general.
      
2.3.  REMOVED FEATURES
      
      CR20023803
      Path & PathComponent
      
      Paths and their components are now unmodifiable except for placeholders
      in proxy paths being replaced by their final identity component provided 
      by the remote persistence manager.

      
==============================================================================
Version 2.12.13                                                     2014-06-23
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES
      
      CR20021834
      BasicException.Holder stack trace
      
      The class name of a BasicException.Holder shall be included in its stack
      trace.
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      NONE

2.1.  FIXED BUGS

      CR20023809
      NullPointerException in PersistenceManager.close()
      
      CR20022958
      Uninitialized primitive value access
      
      System.out.println() invocation removed
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES
      
      NONE

      
==============================================================================
Version 2.12.12                                                     2014-06-17
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES
      
      CR20022958
      Uninitialized primitive value access
      
      The NullPointerException thrown when a mandatory but non-initialized 
      primitive value such as
      * org::w3c::boolean
      * org::w3c::short
      * org::w3c::integer
      * org::w3c::long
      is accessed has been amended by the follwoing pieces of information:
      * the "interaction-spec", e.g. the date state context
      * the "xri", i.e. a persistent object's refMofId
      * the "transient-object-id", a UUID
      * "object-class", i.e. the refClass' refMofId
      * "feature-name", the feature unqualified name
      * "multiplicity", the value "1..1"
      
      CR20022115
      Path properties
      
      There have two new methods been added to Path
      * isObjectPath
        Returns true is size() is odd
      * isContainerPath
        true is size() is odd
        Retuns true is size() is even
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      NONE

2.1.  FIXED BUGS

      CR20021835
      Missing redundant core feature values in states
      
      Features added to a transient object are not exposed as dirty features
      when the object is made persistent later on.
      
      CR20022114
      NonRepairingNamespaceContext
      
      Implementation corrected
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES
      
      CR20022127
      supportsSqlNumericNullCast
      
      Unused feature has been removed.

      CR20022127
      XMI Parser's locator
      
      Unused feature has been removed.

      
==============================================================================
Version 2.12.11                                                     2014-04-10
==============================================================================

0.    KNOWN ISSUES

      CR20021835	 
      Missing core attribute redundancy
      
      CR20020815
      Children of new states
      
      Navigation to children of newly emerging states leads to null 
      references.
      
      CR20020817	 
      MOF Repository Access Failure
      
      Recovery should be replaced by elimination of cause.
      
      20021839
      Subquerys in InMemory-Provider
      
      Subqueries are passed correctly to the Databse but are incorrectly 
      handled by the in-memory provider.
      
1.    NEW FEATURES
      
      CR20020814
      Invalid stateVersion detection
      
      Detect an invalid state version condition and throw an appropriate
      exception.
      
      CR20021849
      Daylight Saving Time Zone 
      
      The daylight saving time zone has to be added to the last
      hour of summer time for ORACLE's TIMESTAMP WITH TIMEZONE fields.
      
      The time zone configuration entries dateTimeZone and 
      daylightSavingZone should both be set, e.g.
      * PERSISTENCE/dateTimeZone=Europe Zurich
      * PERSISTENCE/dateTimeDaylightZone=Europe/Zurich CEST

      CR20021836
      DateStateViews.retrieveAll()
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      NONE

2.1.  FIXED BUGS

      CR20021836
      DateStateViews.getValidities()
      
      The method is now static
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES
      
      NONE

      
==============================================================================
Version 2.12.10                                                     2014-03-25
==============================================================================

0.    KNOWN ISSUES

      CR20021835	 
      Missing core attribute redundancy
      
      CR20020815
      Children of new states
      
      Navigation to children of newly emerging states leads to null 
      references.
      
      CR20020817	 
      MOF Repository Access Failure
      
      Recovery should be replaced by elimination of cause.
      
      20021839
      Subquerys in InMemory-Provider
      
      Subqueries are passed correctly to the Databse but are incorrectly 
      handled by the in-memory provider.
      
      
1.    NEW FEATURES
      
      CR20021836
      DateStateViews.getValidities()

      This method Provides a container's core objects and the validities of 
      their states.

      CR20020554
      Subquery Support for RID/OID

      Subqueries on composite and non-composite references are now supprted
      for RID/OID databases.

      CR20021077
      DataSource Selection
      
      Replace the jdoconfig.xml entry
      
          connection-factory-name="java:comp/env/jdbc/DataSource"

      by the dataprovider configuration entries
          
          PERSISTENCE/datasourceName[0]=java:comp/env/jdbc/DataSource0
          PERSISTENCE/datasourceName[1]=java:comp/env/jdbc/DataSource1      
          PERSISTENCE/datasourceName[2]=java:comp/env/jdbc/DataSource2
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20021837	 
      DateStateViews for transient objects
            
      CR20021833
      Closed Persistence Manager
      
      A closed persistence manager is now signalled by a JDOFatalUserException
      * In JMI-APIs it had been signalled by a JMIServiceException before
      * In JDO APIs it had been signalled by a NullPointerException before

      CR20020411
      Multi-valued access to single-valued field
      
      * Enhanced Object_2Facade
      * TRY_TO_FORGET does no longer re-load the model

      CR20021077
      DataSource Selection
      
      The 
          datasource
      configuration entry is now used for datasources only while the
          datasourceName
      is used for the data sources' JNDI names.

      CR20020449
      LIKE Flavours
      
      The enum is now the common denominator.

2.1.  FIXED BUGS

      CR20020810
      Update Avoidance
      
      UpdateAvoidance_1 calls makePersistentCleanWhenUnmodified too often.
      
      CR20020809
      Persistence Manager Finalization
	
      Git rid of NullPointerException in persistence manager finalization.
      
2.2.  DEPRECATED FEATURES

      NONE
      
2.3.  REMOVED FEATURES
      
      CR20020804
      containsWildcard
      
      The Path method containsWildcard ignores now escaoed dots, e.g. "($\.)"-

      
==============================================================================
Version 2.12.9.1                                                    2014-01-31
==============================================================================

0.    KNOWN ISSUES

      CR20020817
      MOF Repository Access Failure
      
      Catch the IndexOutOfBoundsException and repeat the cache statement.

==============================================================================
Version 2.12.9                                                      2014-01-06
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES

      CR20020556
      Internalization Validation

      The trust system properties may be used to switch off the validation
      * org.openmdx.kernel.collection.InternalizedKeyMap.TrustInternalization
      * org.openmdx.application.dataprovider.layer.persistence.jdbc.
        SlicedDbObject.TrustInternalization      
      
      CR10011870
      aop2 User Objects
      
      When a user object is defined the classic way, i.e. by its "class"
      only then it has the following properties:
      * It should be treated as immutable configuration object
      * All plug-In instances of a persistence manager factory share the
        same configuration object
      * The configuration object is visible for its own plug-in only 
        the the string lookup key as defined by the persistece manager factory
        configuration.
      
      When a user object is defined in the enhanced way, i.e. by its "class"
      as well as its "interface" then it has the following properties:
      * The persistence manager factory holds a user object factory rather
        than a user object instance.
      * Each plug-in, hence each persistence manager instance, holds its
        own user object instance.
      * The user object is visible not only for its own plug-in but 
        accessible throughout the whole stacj, i.e. through its entity 
        manager, too. In any case its the interface class to be used as
        lookup key.
      
      CR20020567
      Absolute Positioning
      
      TYPE_INSENSITIVE_SCROLLING may be enabled independently of
      TYPE_SENSITIVE_SCROLLING.
      
      CR20020449
      LIKE Flavours
      
      The RegularExpressionFlag enumeration exposes the flags supported by
      openMDX:
      * SOUNDS
      * LITERAL
      * POSIX_EXPRESSION (with selected databases only)
      * ACCENT_INSENSITIVE (with selected databases only)
      * CASE_INSENSITIVE
      * UNICODE_CASE
      
      CR20020556
      getConnectionSpec()

      The interface org.openmdx.base.rest.cci.RestConnectionMetaData provides
      a getConnectionSpec() method.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR10011870
      BeanFactory
      
      The API of the class org.openmdx.kernel.loading.org.openmdx.kernel.
      loading.BeanFactory hat to be refactored in order to control the
      bean instance class information.
      
      CR20020567
      Absolute Positioning
      
      An absolute positioning failure does no longer disable absolute 
      positioning for the whole database object.

      CR20019860
      Path
      
      Stick to former implementation for Java 6

2.1.  FIXED BUGS

      CR20020556
      Invalid cardinality warning
	
      Erroneous warnining "Unable to recover from invalid cardinality due to 
      value mismatch" removed.
      
2.2.  DEPRECATED FEATURES

      CR20020556
      getConnectionSpec()
      
      org.openmdx.base.rest.spi.AbstractConnection.getConnectionSpec() is
      now deprecated in favour of org.openmdx.base.rest.spi.AbstractConnection.
      getMetaDtata().getConnectionSpec()
      
2.3.  REMOVED FEATURES
      
      CR20020556
      Classes
      
      The deprecated getXXXResource methods have been removed.

        
==============================================================================
Version 2.12.8                                                      2013-12-07
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES

      NONE
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020411
      Multi-valued access to single-valued field
      
      Guard the jeopardized statements
      
      CR20020557
      Optimistic locking with audit or update avoidance plug-in
      
      The audit and update avoidance plug-in support no optimistic locking for
      dirty objects with idempotent value setting, too.

2.1.  FIXED BUGS
      
      CR20020528
      RSM models
      
      RSM models brought up to date
      
2.2.  DEPRECATED FEATURES

      NONE      

2.3.  REMOVED FEATURES

      NONE

        
==============================================================================
Version 2.12.7                                                      2013-11-04
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES

      NONE
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR10011464
      Migrate UML2Tools. Migrate UML2Tools to Papyrus / GraphViz:
      * Use Eclipse / Payprus (or any other Eclipse/EMF compliant tool) for editing
        the model (.uml files).
      * Use GraphViz to render diagrams. openCRX does not come with Papyrus diagrams.
        Instead, the diagrams are described as GraphViz compliant graphs and rendered
        with the GraphViz dot utility. 
      The new ant target "model-diagrams" generates the diagrams:
      * Complete the manually created GraphViz templates (.dott) located in ./src/model/graphviz. 
        The utility Model_1DiagramDrawer completes the templates (place-holders ${CLASS}, 
        ${ASSOCIATION} and ${INSTANCE_OF}) with the current model information and 
        generates GraphViz compliant .dot files.
      * Run the GraphViz dot utility for each generated .dot.
      * Run the 'album' (http://marginalhacks.com/Hacks/album/) utility to generate a web-index.
      
      Example:
      ant -Dalbum.theme.name=Uptight -Dalbum.theme.path="~/pgm/album/themes" -Dalbum.theme.url="http://myweb.com/_style/album/themes" model-diagrams
      

2.1.  FIXED BUGS
      
      CR20020484
      UUIDs
      
      Avoid duplicate UUIDs
      
2.2.  DEPRECATED FEATURES

      NONE      

2.3.  REMOVED FEATURES

      NONE

        
==============================================================================
Version 2.12.6                                                      2013-09-19
==============================================================================

0.    KNOWN ISSUES

      NONE

1.    NEW FEATURES

      NONE
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020474
      Replace gcc by epptask. Use the java-based pre-processor epptask 
      instead of gcc. 

2.1.  FIXED BUGS
      
      CR20020483
      Strict Type Checking
      
      Lacking Aspect Awareness
      
      
2.2.  DEPRECATED FEATURES

      NONE      

2.3.  REMOVED FEATURES

      NONE

        
==============================================================================
Version 2.12.5                                                      2013-09-06
==============================================================================

0.    KNOWN ISSUES

      No change since 2.12.0

1.    NEW FEATURES

      CR20020001	 
      User defined primitive types     
      
      * Extend org.openmdx.application.mof.mapping.java.Mapper_1 and
        override newPrimitiveTypeMapper()
        
        Replace the formats cci2, jmi1 and jpi3, respectively by
        the (maybe parametrized) class name, e.g.
          --format=test.openmdx.application.mof.mapping.java.PrimitiveTypeMapper_1(cci2) 
          --format=test.openmdx.application.mof.mapping.java.PrimitiveTypeMapper_1(jmi1) 
          --format=test.openmdx.application.mof.mapping.java.PrimitiveTypeMapper_1(jpa3)
      
      * Provide marshallers for the user defined primitive types marshalling 
        persistent values to CCI2/JMI1 values. 
      
        Such a marshaller provider implements the interface
        org.openmdx.base.marshalling.MarshallerProvider.
      
        Configure this class in the openmdx-primitive-types.properties to be
        put into a META-INF directory, e.g.
          marshaller-provider=test.openmdx.datatypes1.dto.PrimitiveTypeMarshallerProvider
          
      * Provide a parser for the user defined primitive types parsing the
        String values to CCI2/JMI1 values.
      
        Such a parser implements the interface org.w3c.spi.Parser.
        
        Configure this class in the openmdx-primitive-types.properties to be
        put into a META-INF directory, e.g.
          parser=test.openmdx.datatypes1.dto.CodeParser                

      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020411
      Strict_1      
      
      Former org.openmdx.application.dataprovider.layer.type.Strict_1's content 
      has been integrated into 
      org.openmdx.application.dataprovider.layer.type.Standard_1.
      
      org.openmdx.application.dataprovider.layer.type.Strict_1 is now a
      subclass, not a superclass, of 
      org.openmdx.application.dataprovider.layer.type.Standard_1, providing
      multiplicity control for CREATE and PUT requests but disabling flushing
      of incomplete objects at the same time.

2.1.  FIXED BUGS

      CR20020001
      Model Loading
      
      The model loading has been re-factored into separate builder, loader and
      runtime classes.
      
2.2.  DEPRECATED FEATURES

      NONE      

2.3.  REMOVED FEATURES

      CR20020001
      Dynamic model loading
      
      Dynamic addition of model packages into an existing model repository 
      is no longer supported. A new model repository has to be built instead.

      CR20020411
      Model_1Factory
      
      The deprecated org.openmdx.base.mof.spi.Model_1Factory.main(String...)
      method which did print the model checksum has been removed. Use
      org.openmdx.base.mof.spi.Model_1Validator.main(String...). instead.

      CR20020001
      Removal of deprecated model elements
      
      * Support for the deprecated class org:oasis-open:xri alias has been
        removed, use org:oasis-open:XRI. 
      * Support for the deprecated package org:oasis_open has been removed,
        use org:oasis-open.
      * Support for the deprecated package org:omg:primitiveTypes has been
        removed, use org:omg:PrimitiveTypes.

        
==============================================================================
Version 2.12.4                                                      2013-07-23
==============================================================================

0.    KNOWN ISSUES

      No change since 2.12.0

1.    NEW FEATURES

      NONE      
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020318
      Aspect Caching
      
      Each object has now its own aspect cache.      
      
      CR20020413
      ConfigurationProvider_1_0
      
      The specification argument has been removed from
      org.openmdx.application.cci.ConfigurationProvider_1_0.getConfiguration()

2.1.  FIXED BUGS

      CR20020444
      Version of Removable objects
      
      Implementation is erroneous unless the object is StateCapable
      
      CR20020435
      Audit Configuration
      
      The exclude pattern needs not to be a prefix.
      
2.2.  DEPRECATED FEATURES

      NONE      

2.3.  REMOVED FEATURES

      CR20020413
      Removal of deprecated classes
      
      * org.openmdx.application.rest.http.RemoteUserLoginModule 
        has been removed in favour of 
        org.openmdx.application.rest.http.servlet.RemoteUserLoginModule.
      * org.openmdx.application.rest.http.TrustingLoginModule
        has been removed in favour of 
        org.openmdx.application.rest.http.servlet.TrustingLoginModule
      * org.openmdx.state2.aop0.PlugIn_1
        has been removed in favour of 
        org.openmdx.state2.aop0.ColonPlugIn_1
      * org.openmdx.application.cci.ConfigurationSpecifier
        has been removed without replacement  
      * org.openmdx.application.naming.NamingConfigurationProvider
        has been removed without replacement        
      
        
==============================================================================
Version 2.12.3                                                      2013-07-04
==============================================================================

0.    KNOWN ISSUES

      No change since 2.12.0

1.    NEW FEATURES

      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020435
      Audit Configuration
      
      The exclude pattern needs not to be a prefix.
      
2.1.  FIXED BUGS

      CR20020435
      Audit Configuration
      
      The exclude pattern is no longer mandatory.
      
2.2.  DEPRECATED FEATURES

      NONE      

2.3.  REMOVED FEATURES

      NONE      
              
        
==============================================================================
Version 2.12.2                                                      2013-07-04
==============================================================================

0.    KNOWN ISSUES

      No change since 2.12.0

1.    NEW FEATURES

      CR20020435
      Audit Configuration
      
      Allow exclude patterns, too
      
      CR20020436
      Ordering Amendment
      
      The jdbc-driver-sql property ORDER.AMENDMENT is initially INTRINSIC for 
      Oracle and BY_OBJECT_ID for all other databases.	

      CR20020414
      IgnoreRedundantModelDumps
      
      Facilitate Eclipse EJB project tests:
      Duplicate model dumps lead to a warning instead of an exception if 
      org.openmdx.mof.IgnoreRedundantModelDumps is set.
       
      CR10011367
      DirtyFeatures
      
      Allows to determine the set of modified features
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020411
      Multivalued access to single-valued field
      
      Assertion added to DataObject_1
      
2.1.  FIXED BUGS

      CR20020433
      Unavailability cache
      
      The unavailability cache misuses the transaction value storage.
      
      CR10011478
      Structure Marshalling
      
      Marshalling of structures containing collections has been improved
      
      CR10011473
      List of struct
      
      Deserialization failure
      
      CR20020375
      AlternateJavaBeanTransformer
      
      JavaBeans' toXML method converts RuntimeExceptions to ServiceExceptions
      again.
      
2.2.  DEPRECATED FEATURES

      NONE      

2.3.  REMOVED FEATURES

      CR20020413
      Synchronization_2_0
      
      Get rid of deprecated Synchronization_2_0
              
        
==============================================================================
Version 2.12.1                                                      2013-04-10
==============================================================================

0.    KNOWN ISSUES

      No change since 2.12.0

1.    NEW FEATURES

      NONE
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR10011145
      AlternateJavaBeanTransformer
      
      JavaBeans' toXML method converts RuntimeExceptions to ServiceExceptions
      again, but its exception code has been changed from GENERIC to
      TRANSFORMATION_FAILURE.

2.1.  FIXED BUGS

      CR20020284
      XMI Model Mapper
      
      Erroneous segment matching corrected
      
2.2.  DEPRECATED FEATURES

      NONE
      

2.3.  REMOVED FEATURES

      NONE
              
        
==============================================================================
Version 2.12.0                                                      2013-04-05
==============================================================================

0.    KNOWN ISSUES

      CR20020358
      Extent Query Over Persistent-New States
      
      The same state is returned repeatedly

      CR20020332
      Cache synchronization
            
      Cache synchronization has to be completed
      * between DB and data object manager (after flushing)
      * between proxy and entity manager (including states)

      CR20020326
      Extent Proxy
      
      Amended proxied extends are not handled correctly.

      CR20020326
      Dirty extent flushing
      
      Queries on dirty extents are not handled properly after flushing.

      CR20020328
      Non-transactional reads fail after a flush command

      CR20020252	 
      Join for RID/OID Query Databases
      
      Not yet implemented for
      * shared associations
      * references to descendants of root classes 

      CR20020142
      JDOHelper.getVersion()
      
      The method returns null under certain circumstances.
      
      Validate its behaviour especially
      * in case of an entity manager proxy
      * in case of a hollow object  
      
1.    NEW FEATURES

      CR20020343
      Checksum Calculation
      
      The command 
          java org.openmdx.base.mof.spi.Model_1Validator
      writes a line of the form 
          checksum=<checksum>
      to System.out.

      CR20020284
      Model Dump
      
      The commands 
          java org.openmdx.base.mof.spi.Model_1Dumper <targetFileName>
      and
          java org.openmdx.base.mof.spi.Model_1Dumper <targetFileName> application/vnd.openmdx-xmi.wbxml
      dump the MOF repository content in binary WBWML format to the specified file.
      
      The commands 
          java org.openmdx.base.mof.spi.Model_1Dumper <targetFileName> text/xml
      and
          java org.openmdx.base.mof.spi.Model_1Dumper <targetFileName> application/xml
      dump the MOF repository content in text WBWML format to the specified file, with and without
      line breaks, respectively 
          
      writes a line of the form 
          checksum=<checksum>
      to System.out.
      org.openmdx.base.mof.spi.Model_1Dumper.main(<targetFileName>) writes the
      content of the model repository 

      CR20020284
      Model repository Dump/Restore
      
      A model repository dump defined by the system property openmdxmof.wbxml
      or a single file in the meta information location with this name is
      loaded in preference to the model files defined by the model index
      property files.
      
      The class org.openmdx.base.mof.spi.Model_1Dumper accepting a single 
      argument, the dump file name, can be used to create such a dump.
     
      CR20020355
      Model Class Name
      
      The PersistenceHelper.getClassName() method return
      * null in case of a null object reference
      * the MOF class' id in case of a JDO object
      * the Java class' name in case of a non-JDO object

      CR20020319
      Fetch Size
      
      There are now three database fetch size configuration entries
      * FETCH_SIZE (to fix the size unless 0 is used)
      * FETCH_SIZE_OPTIMAL (with a default value of  16)
      * FETCH_SIZE_GREEDY (with a default value of 1024)
      
      The default behaviour is therefore now as following:
      * The overall default configuration uses an optimal fetch size of 32 if 
        no specific fetch size is requested.Otherwise the requested fetch size 
        is used unless it exceeds 1024.

      CR20020319
      Fetch Size
      
      There are now three database fetch size configuration entries
      * FETCH_SIZE (to fix the size unless 0 is used)
      * FETCH_SIZE_OPTIMAL (with a default value of  16)
      * FETCH_SIZE_GREEDY (with a default value of 1024)
      
      The default behaviour is therefore now as following:
      * The overall default configuration uses an optimal fetch size of 32 if 
        no specific fetch size is requested.Otherwise the requested fetch size 
        is used unless it exceeds 1024.

      CR20020284
      Model XMLs as WBXML
      
      The models may be provided as either WBXML or XML.
      
      CR20020217
      META-INF resources

      The methods
        org.openmdx.kernel.loading.Resources.getMetaInfResources(
          java.lang.ClassLoader, 
          java.lang.String
        );
      and
        org.openmdx.kernel.loading.Resources.getMetaInfResources(
          java.lang.String
        );
      read resources from
        * the META-INF directory in case of a JVM
        * the org.openmdx.dalvik.metainf directory in a Dalvik VM
        
      CR20020217
      Separation of client and server packages
           
      There is a new class org.openmdx.kernel.jdo.ReducedJDOHelper which
      does not depend on javax.naming and which is able to replace 
      javax.jdo.JDOHelper in most cases. 
      
      The method org.openmdx.base.persistence.cci.PersistenceHelper.
      currentUnitOfWork(PersistenceManager) returns a
      org.openmdx.base.persistence.cci.UnitOfWork instance which now provides
      the javax.jdo.Transaction functionality without implementing the
      javax.jdo.Transaction interface. It is now the preferred interface for
      openMDX itself.
        
      The interface org.openmdx.base.persistence.cci.Synchronization provides
      the synchronization functionality for 
      org.openmdx.base.persistence.cci.UnitOfWork clients (as opposed to
      javax.jdo.Transaction clients). 
      
      The java archive openmdx-dalvik.jar contains Java beans support for
      dalvik.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020284
      WBXM v/s XML InputSource
      
      An ImportSource for the org.openmdx.application.xml.spi.ImportHandler is
      considered to be an XML input source at least one of any of the following
      predicates is true
      * the input source contains a CharacterStream
      * the input source has a system id ending with ".wbxml" (ignoring case)
      * the input source has a non-null character encoding
      Otherwise the input source is considered to be a binary WBXML source.
      
      CR20020284
      Model repository Dump/Restore

      The model element method invocations
      * (Map)modelElement.objGetValue("attribute")
      * (Map)modelElement.objGetValue("reference")
      * (Map)modelElement.objGetValue("operation")
      * (Map)modelElement.objGetValue("field")
      * (Map)modelElement.objGetValue("allFeature")
      * (Map)modelElement.objGetValue("allFeatureWithSubtype")
      have to be replaced by 
      * modelElement.objGetMap("attribute")
      * modelElement.objGetMap("reference")
      * modelElement.objGetMap("operation")
      * modelElement.objGetMap("field")
      * modelElementclassDef.objGetMap("allFeature")
      * modelElement.objGetMap("allFeatureWithSubtype")

      CR20020328
      Flushing
      
      Ignore cache after flushing (until CR20020332 is resolved)

      CR20020319
      Fetch Size
      
      The default value for the database layer's FETCH_SIZE configuration
      entry has changed from 100 to 0, enabling FETCH_SIZE_OPTIMAL and 
      FETCH_SIZE_GREEDY to come into effect.

      CR20020291
      CONCURRENT_ACCESSS_FAILURE mapping
      
      In general a CONCURRENT_ACCESSS_FAILURE should lead to a 
      JDOOptimisticVerificationException.
      
      At the moment a CONCURRENT_ACCESSS_FAILURE is mapped
      * to a JDOFatalDataStoreException during flush
      * to a JDOOptimisticVersifcationException during commit      

      CR20020319
      Fetch Size
      
      The default value for the database layer's FETCH_SIZE configuration
      entry has changed from 100 to 0, enabling FETCH_SIZE_OPTIMAL and 
      FETCH_SIZE_GREEDY to come into effect.

      CR20020291
      CONCURRENT_ACCESSS_FAILURE mapping
      
      In general a CONCURRENT_ACCESSS_FAILURE should lead to a 
      JDOOptimisticVerificationException.
      
      At the moment a CONCURRENT_ACCESSS_FAILURE is mapped
      *  to a JDOFatalDataStoreException during flush
      * to a JDOOptimisticVersifcationException during commit      
      
      CR20020282
      Invalid cardinality for single valued features
      
      Detect for SlicedDbObject2NonIndexed and recover in case of equal values.
      
      CR20020217
      Separation of client and server packages

      The classes referring to javax.naming or javax.transaction classes
      (except for javax.transaction.Synchronization) have been put into
      org.openmdx.application packages.
      
      This change is externally visible mainly for the following reason:
      * The class org.openmdx.base.resource.adapter.UserTransactions has been
        deprecated in favour of 
        org.openmdx.application.transaction.UserTransactions.
      * The class org.openmdx.application.rest.spi.EntityManagerProxyFactory_2 
        has been deprecated in favour of
        org.openmdx.base.rest.connector.EntityManagerProxyFactory_2.
        
      The method org.openmdx.base.aop0.UpdateAvoidance.touchAllDirtyObjects
      takes now a javax.jdo.Persistence manager argument rather than a 
      javax.jdo.Transaction argument.  

2.1.  FIXED BUGS

      CR20020342
      Extent queries on multi-valued features
      
      Extent queries on multi-valued features were erroneous for
      RID/OID databases.
      
      CR20020326
      Extent queries on modified collections
      
      Extent queries on modified collections are not processed correctly.
      
      CR20020292
      Lazy-view-creation-safe event listener
      
      Firing a post load event may lead to a java.util.ConcurrentModificationException.
      CR20020326
      Extent queries on modified collections
      
      Extent queries on modified collections are not processed correctly.

      CR20020292
      Lazy-view-creation-safe event listener
      
      Firing a post load event may lead to a java.util.ConcurrentModificationException.

      CR10011193
      Nested Structs
      
      Deserialization of nested JMI structs are now supported by the runtime 
      environment.
          
2.2.  DEPRECATED FEATURES

      CR20020343
      Checksum Calculation
      
      org.openmdx.base.mof.spi.Model_1Factory.main(String...) is deprecated in
      favour of org.openmdx.base.mof.spi.Model_1Validator.main(String...). 

      CR20020217
      Separation of client and server packages
      
      The method
         org.openmdx.kernel.loading.Classes.getPackageResource(Class<?>, String)
      has been deprecated in favour of
         java.lang.Class.getResource(String)
         
      The methods
         org.openmdx.kernel.loading.Classes.getApplicationResource(String)
         org.openmdx.kernel.loading.Classes.getKernelResource(String)
         org.openmdx.kernel.loading.Classes.getSystemResource(String)
         org.openmdx.kernel.loading.Classes.getRequiredResource(String)
      has been deprecated in favour of
         org.openmdx.kernel.loading.Resources.getResource(String)
         
      The method 
        org.openmdx.base.text.conversion.JavaBeans.fromXML(
          java.lang.CharSequence, 
          java.beans.ExceptionListener
        );
      has been deprecated in favour of 
        org.openmdx.base.text.conversion.JavaBeans.fromXML(
          java.lang.CharSequence, 
          org.openmdx.base.exception.ExceptionListener
        );
      and moved to the Transformer class: 
        org.openmdx.base.beans.StandardJavaBeanTransformer.fromXML(
          java.lang.CharSequence, 
          java.beans.ExceptionListener
        );       
      
      These classes have been deprecated:
      * org.openmdx.base.resource.adapter.UserTransactions
      * org.openmdx.application.rest.spi.EntityManagerProxyFactory_2 
      
      org.openmdx.base.accessor.rest.spi.Synchronization_2_0 has been deprecated.
      Instead of casting a transaction instance to Synchronization_2_0 you should
      access to unit of work directly by invoking
      PersistenceHelper.currentUnitOfWork(transaction.getPersistenceManager())

2.3.  REMOVED FEATURES

      CR20020288
      preferences1 model
      
      The deprecated org::openmdx::preferences1 model has been removed
        
        
==============================================================================
Version 2.11.5                                                      2013-02-18
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.11.2
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020237
      NullPointerException in retrieveAllDescendants
 
      The exception occurs in case of transient non-contained objects.      
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.11.4                                                      2013-02-06
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.11.2
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020282
      Invalid cardinality for single valued features
      
      Detect for SlicedDbObject2NonIndexed and recover in case of equal values.
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
        

==============================================================================
Version 2.11.3                                                      2013-01-24
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.11.2
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR20020266
      getAllDescendants
      
      getAllDescendants fails for containers with abstract base classes. 
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
        

==============================================================================
Version 2.11.2                                                      2013-01-07
==============================================================================

0.    KNOWN ISSUES

      CR20020252	 
      Join for RID/OID Query Databases
      
      Not yet implemented for
      * shared associations
      * references to descendants of root classes 

      CR20020142
      JDOHelper.getVersion()
      
      The method returns null under certain circumstances.
      
      Validate its behaviour especially
      * in case of an entity manager proxy
      * in case of a hollow object  
      
1.    NEW FEATURES
      
      CR20020252	 
      Join for RID/OID Query Databases
      
      Resolved for
      * references stored as attributes
      * containment references
      * parent references
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019742
      JTA access
      
      The issue is now addressed by 
      org.openmdx.base.rest.adapter.TransactionManagerFactory.
      
      CR20019860
      JDK 7
      
      JUnit Tests adapted to JRE 7 behaviour
      
2.1.  FIXED BUGS

      CR20020256
      Transient Container
      
      An object could not be removed by its id from a transient container.
      
      CR10011193
      Nested Structs
      
      Nested structs are now supported by the runtime environment.
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      
      CR20019860
      JRE 5.0
      
      JRE 5.0 support discontinued
        

==============================================================================
Version 2.11.1                                                      2012-12-04
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019370
      Transaction Manager Lookup
      
      A transaction manager is required for suspend/resume only.
      A UserTransaction is sufficient in all other cases.
      
      CR20020212
      Model Validation
      
      ImportHelper provides now non-static methods. Schema validation is an 
      (optional) constructor argument which defaults to false.
      
      The (optional) META-INF/openmdxmof-validation.properties file
      supports the following entries:
      
        validate-xml=true (default: false)
        validate-elements=true (default: false)
        validate-classifiers=true (default: false)
        validate-checksum=true (default: false)
        dump-on-failure=true (default: false)
        retry-limit=3  (default: 0)        
        checksum=85ede1b91f7e8ed4141c399c524d801b (default: none)
        
      The checksum can be
      * calculated with Model_1Factory.claclulateChecksum()
      * printed to System.out with Model_1Factory.main()

      CR20020217
      Separation of client and server packages

      The classes referring to javax.naming or javax.transaction classes
      (except for javax.transaction.Synchronization) have been put into
      separate packages.
      
      This change is externally visible mainly for the following reason:
      * The class org.openmdx.application.rest.http.RestServlet_2 has been
        deprecated in favour of 
        org.openmdx.application.rest.http.servlet.RestServlet_2.
      * The class org.openmdx.application.rest.http.RemoteUserLoginModule has
        been deprecated in favour of
        org.openmdx.application.rest.http.servlet.RemoteUserLoginModule.  
      * The class org.openmdx.application.rest.http.RequestCallbackHandler has
        been deprecated in favour of
        org.openmdx.application.rest.http.servlet.RequestCallbackHandler.   
      * The class org.openmdx.application.rest.http.TrustingLoginModule has
        been deprecated in favour of
        org.openmdx.application.rest.http.servlet.TrustingLoginModule. 

2.1.  FIXED BUGS

      CR10011193
      Nested Structs
      
      Nested structs are now supported by the runtime environment.
      
      CR20020236
      State Cache Problem
      
      The preClear() method evicts the state cache, too.
      
      CR20020237
      NullPointerException in retrieveAll
 
      The cache is guarded against transient objects now.
          
2.2.  DEPRECATED FEATURES

      CR10011145
      NamingConfigurationProvider
      
      The naming configuration provider has been deprecated      
                     
2.3.  REMOVED FEATURES
      
      CR20020217
      Removal of deprected classes and features
      
      Deprecated classes:
      * The class org.openmdx.kernel.resource.ResourceAdapter_1 has been
        removed.
      * The deprecated class org.openmdx.kernel.Version has been removed.
      * The deprecated class 
        org.openmdx.application.dataprovider.spi.ResourceHelper.

      Deprecated features:
      * The deprecated method 
        org.openmdx.base.rest.spi.Facades.newQuery(DataObject_1_0) has been
        removed.
        

==============================================================================
Version 2.11.0                                                      2012-11-11
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES

      CR20020129
      ClassToTableMapping
      
      The formatter is now pluggable.

      CR20020128
      thereRemainDirtyFeaturesAfterRemovingTheUnmodifiedOnes
      
      As opposed to its former objIsModified() counterpart this method drops unmodified
      dirty derived features as well.
       
      CR20020128
      org.openmdx.preferences2.prefs.Retrievable
      
      The Retrievable interface allows to retrieve a preferences node with
      all its descendants.
      
      CR20020208 
      LOB streaming
      
      The new database configuration flag "getLargeObjectByValue" tells, whether
      large object streams shall be copied into memory or not.

      There are two new SQL driver properties
      * SET.BINARY.LARGE.OBJECT
      * SET.CHARACTER.LARGE.OBJECT
      accepting the values
      * TALLYING (determine the size in advance, default)
      * STREAMING (stream directly, whether the size is known or not)
      * BY_VALUE (convert large object to byte[] or String respectively) 
      
      CR20019671
      XA Datasource support
      
      The openMDX' lightweight container supports now (multiple) XA data 
      sources provided the optional thirdparty library "Bitronix Transaction 
      Manager" is found in the classpath and enabled by using
      "org.openmdx.kernel.lightweight.naming.BitronixInitialContextFactory" 
      as initial context factory.
      
      The XA JDBC URLs have the follwoing (single-line) form
      jdbc:xa:<XA-DataSource-Class>?<Property-Name>=<Value>&..., e.g.
      jdbc:xa:oracle.jdbc.xa.client.OracleXADataSource?UniqueName=openmdxTest
         &URL=jdbc:oracle:thin:@localhost:1521:XE
         &user=OPENMDX_TEST
         &password=testing123  
      
      An XA DataSource pool supports the following features:
        * CursorHoldability
		  Set the default cursor holdability for connections.
		* EnableJdbc4ConnectionTest
		  When set and the underlying JDBC driver supports JDBC 4 isValid(), a Connection.isValid() call
		  is performed to test the connection before handing it to the caller.
		  If both testQuery and enableJdbc4ConnectionTest are set, enableJdbc4ConnectionTest takes precedence.
		* IsolationLevel
		  Set the default isolation level for connections.
		* LocalAutoCommit
		  Set the default local transactions autocommit mode.
		* LoginTimeout
		* PreparedStatementCacheSize
		  Set the target maximum size of the prepared statement cache. 
		  In reality under certain unusual conditions the cache may temporarily drift higher in size.
		* TestQuery
		  When set, the specified query will be executed on the connection acquired from the pool before being handed to the caller. 
		  The connections won't be tested when not set. Default value is null.
		* AcquireIncrement
		  Define the amount of connections to be created at once when the pool needs to grow.
		* AcquisitionInterval
		  Set the amount of time in seconds the pool will wait before trying to acquire a connection again after an
		  invalid connection has been attempted to be acquired.
		* AcquisitionTimeout
		  Define the amount of time in seconds a call to get a connection from the pool will wait when the pool is empty.
		* AllowLocalTransactions
		  Set if the transaction manager should allow mixing XA and non-XA transactions. 
		  If you know all your transactions should be executed within global (ie: XA) scope it is a good idea to set 
		  this property to false.
		* ApplyTransactionTimeout
		* AutomaticEnlistingEnabled
		  Specify if the XA resource wrapper should enlist/delist this resource automatically in global transactions.
		  When set to false, you have to enlist resources yourself with javax.transaction.Transaction.enlistResource(javax.transaction.xa.XAResource)
		  and delist them with javax.transaction.Transaction.delistResource(javax.transaction.xa.XAResource, int).
		* DeferConnectionRelease
		  Define the transaction interleaving capability of the database.
		  Should be true only if the database can run many transactions on the same connection.
		* Disabled
		* IgnoreRecoveryFailures
		  Defaults to TRUE.
		* MaxIdleTime
		  Define the amount of seconds and idle connection can stay in the pool before getting closed.
		* MaxPoolSize
		  Define the maximum amount of connections that can be in the pool.
		  Defaults to 8.
		* MinPoolSize
		  Define the minimal amount of connections that can be in the pool.
		* ShareTransactionConnections
          Defaults to true (as opposed to Bitronox' default!)		
		* TwoPcOrderingPosition
		* UniqueName
		  Specify the resource unique name to be used to identify this resource during recovery. 
		  This name will be registered in the transactions journal so once assigned it must never be changed.
		  Mandatory without default!
		* UseTmJoin
		  Specify if the transaction manager should try to join resources by calling javax.transaction.xa.XAResource#start(javax.transaction.xa.Xid, int) 
		  with javax.transaction.xa.XAResource.TMJOIN. 
		  The transaction manager checks if two branches can be joined by calling javax.transaction.xa.XAResource.isSameRM(javax.transaction.xa.XAResource).
		  It should only be set to true if the underlying implementation supports resource joining.
     
      CR20020193
      Support for multiple query extensions. Multiple query extensions can 
      be added to query.      
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020129
      ClassToTableMapping
      
      The former isChildOfDBObjectType() workaraound can't be used any more!
      
      CR20020128
      Preferences Synchronization
      
      Optimize sync() & syncSpi() by making use of PersistenceHelper.retrieveAllDescendants()
      
      CR20019671
      Streamed Values
      
      Streamed values no longer belong to the default fetch group (also known
      as typical attributes).
      

2.1.  FIXED BUGS

      CR20020129
      ClassToTableMapping
      
      Node.getAbsolutePath works now for DatabasePreferences, too.
      
      CR20020128
      Update Avoidance
      
      Update avoidance must intercept preStore insetad of flush.
      
      CR20020206
      BLOB support
      
      Optional BLOBs are now supported for proxy connections, too.

      CR20020207
      CLOB support
      
      Optional CLOBs are now supported for proxy connections, too.
      CLOBs are now supported for WBXML connections, too
      
      CR20020187
      Connection Adapter Swallows Runtime Exceptions
      
      Runtime exceptions are only logged but not propagated.

2.2.  DEPRECATED FEATURES
      none      
                     
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.10.3                                                      2012-09-07
==============================================================================

      CR20020212
      Model Validation
      
      The (optional) META-INF/openmdxmof-validation.properties file
      supports the following entries:
      
        validate-classifiers=true (default: false)
        validate-checksum=true (default: false)
        dump-on-failure=true (default: false)
        retry-limit=1  (default: 0)
        checksum=85ede1b91f7e8ed4141c399c524d801b (default: none)
        
      The checksum can be
      * calculated with Model_1Factory.claclulateChecksum()
      * printed to System.out with Model_1Factory.main()

       
==============================================================================
Version 2.10.2                                                      2012-09-15
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES

      CR20020102
      Unique Query Support
      
      Unique query support has been extended from the database plug-in to
      the in-memory provider.
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020173
      WBXML Code Page 0
      
      Update:
      - "group"
      + "features"
      + "request"
      
      CR20020102
      Unique Query Support
      
      Depending on the INTERCEPTION plug-in object retrieval uses
      * a NOT_FOUND exception to signal non-existence in case of 
        org.openmdx.application.dataprovider.layer.interception.Classic_1
      * an empty result set to signal non-existence in case of 
        org.openmdx.application.dataprovider.layer.interception.Standard_1

2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES

      CR20020102
      Unique Query Support
      
      The following methods have been deprecated
      * org.openmdx.application.dataprovider.cci.ServiceHeader.toServiceHeader(
            javax.security.auth.Subject
        );
      * org.openmdx.application.dataprovider.cci.ServiceHeader.toServiceHeader(
            java.lang.String, 
            java.lang.String
        );
      * org.openmdx.base.rest.spi.Facades.newQuery(
            org.openmdx.base.accessor.cci.DataObject_1_0
        );
      
                     
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.10.1                                                      2012-09-11
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES
      
      CR20020102
      Unique Query Support
      
      Depending on the INTERCEPTION plug-in object retrieval is dispatched to
      * get() methods with 
        org.openmdx.application.dataprovider.layer.interception.Classic_1
      * find() methods with
        org.openmdx.application.dataprovider.layer.interception.Standard_1
        
      CR20020128
      Preferences Prefetch
      
      PersistenceHelper.retrieveAllDescendents() retrieves all descendants of 
      the given object.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20020112
      PersistenceManager.finalize()
      
      Avoid NullPointerExceptions when trying to clear a closed manager's
      unit of work.

2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.10.0                                                      2012-08-24
==============================================================================

0.    KNOWN ISSUES

      CR20020142
      JDOHelper.getVersion()
      
      The method returns null under certain circumstances.
      
      Validate its behaviour especially
      * in case of an entity manager proxy
      * in case of a hollow object  
      
      CR20019740
      state2-aware REST-Client 
      
      Synchronization of state2-aware proxy,
      
      The DateStateViews-API must be available in the proxy. 

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.      
      
1.    NEW FEATURES
      
      CR20019258
      newInstance() 
      
      A plug-in specific assertion for org.openmdx.state2.aop1.PlugIn_1 has 
      been added: 
      * !(StateCapable.class.isAssignableFrom(c) || (
      		(DateStateContext != null) == (BasicState.class.isAssignableFrom(c)
      	) 
      which has been amended for the org.openmdx.state2.aop1.LegacyPlugIn_1:
      * Legacy.isAssignableFrom(c) || !(StateCapable.class.isAssignableFrom(c) || (
      		(DateStateContext != null) == (BasicState.class.isAssignableFrom(c)
      	) 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019258
      resolveObjectClass
      
      Each implementation of org.openmdx.base.aop1.PlugIn_1_0 must provide a
      resolveObjectClass() method.

      CR20020086
      Context for IllegalStateException thrown by UniqueValue 
      
      The exception parameters are now amended by the object's id.
      
2.1.  FIXED BUGS

      CR20020140
      Non-query operation
      
      Invocation shall make the object dirty 
      
      CR20020084
      DateStateViews.getResourceIdentifierOfClone 
      
      getResourceIdentifierOfClone is erroneous in case of time point 
      views.
      
      The 'invalidated' argument must be either true or false, but never null.  
            
      CR20020076
      DateStateViews.getViewForPropagatedState
      
      getViewForPropagatedState does not work for time point views. 
        
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.10                                                      2012-06-01
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.9
      
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20020069
      Set Reference Java-Doc
      
      Optional reference setters' Java-Doc pretends the reference was
      mandatory. 
        
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.9                                                       2012-05-20
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.8
      
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20020068
      Duration & InboundConnection
      
      Durations are not marshaled correctly for for inbound connections.
        
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.8                                                       2012-05-16
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.7
      
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20020058
      Import of invalid XML documents
      
      Invalid features shall not lead to a NullPointerException.
            
      CR20020043
      Performance Improvement
      
      The XML Datatype Factory is now cached for clone() operations, too.
      
2.1.  FIXED BUGS
      none
        
2.2.  DEPRECATED FEATURES

      CR20020058            
      ObjectAndValidStateComparator.toString()
      
      The toString(Object,Multiplicity) method has been deprecated in
      favour of toString(Object).
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.7                                                       2012-05-01
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.6
      
1.    NEW FEATURES

      CR20020050
      TransactionManagerFactory
      
      openMDX uses now a ComponentEnvironment plug-in for its 
      TransactionManager retrieval which tries in turn:
      * Standard:
        java:comp/TransactionManager JNDI lookup ()
      * JBoss:
        java:/TransactionManager JNDI lookup
      * WebSphere: 
        com.ibm.ws.Transaction.TransactionManagerFactory.getTransactionManager() 
            
      CR20020030
      isStoredAsAttribute
      
      Method isStoredAsAttribute() added to 
      org.openmdx.base.mof.cci.ModelHelper.
       
      CR20020038
      BulkLoad
      
      Setting
      * The BulkLoad=true and BulkLoad=false parameters may be used in REST
        connection request.
      * The bulk load flag may be set on a persistence manager:
        UserObjects.setBulkLoad(persistenceManager, bulkLoad);
        
      Querying:
      * The bulk load flag may be queried from the persistence manager:
        UserObjects.isBulkLoad(persistenceManager);
      * The bulk load flag may be queried from an AbstractRestInteraction
        sub-class:
        AbstractRestInteraction.isBulkLoad();
      
      CR20020040
      The REST Servlet's Login Configuration
      
      Override getLoginConfiguration(String name) instead of 
      getLoginConfiguration() to change the default behaviour. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020040
      The REST Servlet's Login Configuration
      
      The remote user login module is now the REST servlet's only default
      module. 
      
2.1.  FIXED BUGS

      CR20020030
      Refresh
      
      Refresh is now propagated from a proxy object to its serving object.
      
      CR20020030
      ObjectRecord
      
      Erroneous key/content mapping for org:openmdx:kernel:Object records.
      
      CR10010692
      Reference handling by DetachCopy 
     
      detachCopy and detachCopyAll works for lists, sets oder sparsearrays of 
      references but fails for optional or mandatory references.
        
2.2.  DEPRECATED FEATURES

      CR20020040
      The REST Servlet's Login Configuration
      
      Overriding getLoginConfiguration() has been deprecated in favour of 
      getLoginConfiguration(String name) to to change the default behaviour. 
                     
2.3.  REMOVED FEATURES

      CR20020030
      Facades
      
      The following deprecated methods have been removed: 
      * org.openmdx.base.rest.spi.Query_2Facade.newInstance()
      * org.openmdx.base.rest.spi.Object_2Facade.newInstance()
      * org.openmdx.base.rest.spi.Facades.newObject(java.util.UUID)

      CR20020040
      PrincipalCallback
      
      The unused principal callback has been removed. 
      
      CR20020038
      refInitializeOnCreate
      
      The refInitializeOnCreate feature has been removed as the behaviour
      can be accomplished by standard plug-ins.
            
      CR20020030
      ModelUtils
      
      The deprecated class org.openmdx.base.mof.spi.ModelUtils has been
      removed.
      
      
==============================================================================
Version 2.9.6                                                       2012-03-27
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.5
      
1.    NEW FEATURES
      
      CR20020039
      Cloneable Query
      
      cci2 query objects shall be cloneable.
      
      PersistenceHelper.clone() may now be used to clone queries.

      CR20020037
      Preferences
      
      The java.util.prefs API may be used as accessor to the 
      org::openmdx::preferences2 model.
      
      CR20020032
      Disclose ORM
      
      The ORM is disclosed as Preferences 
             
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none
       
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.5                                                       2012-03-22
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.4
      
1.    NEW FEATURES
      
      CR20020037
      Preferences
      
      The org::openmdx::preferences2 replaces org::openmdx::preferences1.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20020031
      Absolute Positioning
      
      Do not disable absolute positioning globally.
      
      Disable absolute positioning for a specific DB object only.
         
      CR20019592
      Null values in queries shall throw an exception 
      
      Inserting a null value into a JMI query predicate throws a 
      BAD_PARAMETER JmiServiceException. 
      
      CR20019351
      Reject null in JMI lists and sets
      
      Inserting a null value in a JDO object's list or set feature throws
      a JDOUserException caused by a NullPointerException. 

2.1.  FIXED BUGS
      
      CR20020034
      Iteration over Legacy container
      
      In some cases the Legacy containers in time independent views seem to be 
      empty.
       
2.2.  DEPRECATED FEATURES

      CR20020037
      Preferences
      
      org::openmdx::preferences1 has been deprecated in favour of
      org::openmdx::preferences2.
                     
2.3.  REMOVED FEATURES
      
      CR20020038
      RestConnectionSpec
      
      Deprecated constructor
      
        public RestConnectionSpec(
          String user,
          String password,
          Object tenant 
        );
        
      removed
      
      
==============================================================================
Version 2.9.4                                                       2012-03-05
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.3
      
1.    NEW FEATURES

      CR20020022
      Query Predicate
      
      openMDX' standard type casts are now supported in addition to their 
      existing query aliases:
      * :string:
        (java.lang.String)
      * :date:
        (javax.xml.datatype.XMLGregorianCalendar)
      * :datetime:
        (java.util.Date)
      * :short:
        (java.lang.Short)
      * :int:
        :integer:
        (java.lang.Integer)
      * :long:
        (java.lang.Long)
      * :decimal:
        (java.math.BigDecimal)
      * :duration:
        (javax.xml.datatype.Duration)
              
      CR20020024
      Query URI
      
      The method
      
        PersistenceManager.newQuery(
          "OPENMDXQL",
           query
        );

      supports now two additional query object types in addition to 
      QueryRecord:
      * a java.net.URI instance containing an XRI query
      * a java.lang.String instance containing an XRI query
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20020014
      Import references in invalidated state
      
      Invalidated states are now ignored during import. 

2.1.  FIXED BUGS

      CR10010637
      Query Serialization
      
      * Query objects are now Serializable
      * De-serialized query object's can't be modified

      CR20019954 	
      Core Object Removal
      
      The core object removal protection can't be activated. 
      
      Explicit setting of the StateCapableDeletable flag is ignored as well as 
      its implicit value "false". 
      
      CR20020022
      Query Predicate 
      
      thereExistsReference().equalTo("xri://...") is ignored.
      
      CR20019750
      Separate state2 specific code
      
      Missing Rose model updates included.
       
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.9.3                                                       2012-02-20
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.2
      
1.    NEW FEATURES

      CR20020005
      Configurable Properties
      
      System properties may be used to override the configurable properties'
      default values, e.g.
      * -Djavax.jdo.option.TransactionIsolationLevel=read-committed
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019750
      Separate state2 specific code
      
      In openMDX 2.8.21 some state2 specific code was in an inappropriate 
      place (e.g. in AbstractContainer_1)
      
      validTimeUnique is now a property of org::openmdx::state2::Legacy, a
      sub-class of org::openmdx::state::StateCapable. 
      
      To keep valid-time-unique support you have to
      * use org::openmdx::state2::Legacy instead of 
        org::openmdx::state::StateCapable in your model
      * use org.openmdx.base.aop1.LegacyPlugIn_1 instead of
        org.openmdx.base.aop1.PlugIn_1 in your entity manager factory 
        configuration
      * use org.openmdx.state2.aop1.LegacyPlugIn_1 instead of
        org.openmdx.state2.aop1.PlugIn_1in your entity manager factory
        configuration
      * use org.openmdx.state2.aop0.LegacyPlugIn_1 instead of 
        org.openmdx.state2.aop0.PlugIn_1 in your data manager factory
        configuration
      * use org.openmdx.application.dataprovider.layer.model.LegacyState_2
        instead of org.openmdx.application.dataprovider.layer.model.State_2 in
        your dataprovider configuration
        
      
      CR20020009
      Layer_1 configuration
      
      Add Java bean support 
       
      CR20020012
      Audit & UpdateAvoidance
      
      Allow to disable update avoidence for audited objects, too.
      
      CR20020005
      Optimistic Locking

      A concurrent modification exception is thrown if the object is
	  * either updated by both this unit of work and another unit of work 
	    concurrently
	  * or made transactional in this unit of work and updated by another 
	    unit of work concurrently
      
      The supported optimistic transaction isolation levels are:
      * repeatable-read (default)
        The object must not be modified concurrently by another unit of 
        work starting later than the given unit of work unless it has
        been refreshed
      * read-committed
        The object must not be modified concurrently by another unit after 
        it has been read or refreshed by the given unit of work 

2.1.  FIXED BUGS

      CR20020011
      PersistenceHelper.clone()
      
      A clone may loose some of its not explicitly fetched values
      
      CR20020005
      Optimistic Locking
      
      refresh() removes the optimistic read lock, leaving the optimistic
      write lock to be checked. 
       
2.2.  DEPRECATED FEATURES

      CR20019750
      Separate state2 specific code
      
      If you don't need valid-time-unique support you should
      * use either org.openmdx.state2.aop0.ColonPlugIn_1 or
        org.openmdx.state2.aop0.BangPlugIn_1 instead of 
        org.openmdx.state2.aop0.PlugIn_1

      The following methods have been deprecated:
      * Use org.openmdx.base.accessor.jmi.cci.RefObject_1_0.refInitialize(RefObject)
        instead of org.openmdx.base.persistence.cci.PersistenceHelper.clone(T, String...)
                     
2.3.  REMOVED FEATURES
      
      CR20020009
      Layer_1 configuration
      
      The following configuration entries have been removed
      * PERSISTENCE/compressUID


==============================================================================
Version 2.9.2                                                       2012-01-13
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.1
      
1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020006
      refInitialize) must initialize all mandatory and persistent features.
      
      CR20020005
      Optimistic Locking
      
      The request consists of two changes
      * The transaction time shall be set at the beginning of the unit of work
        (as opposed to the current lazily setting at the beginning of the
        datastore transaction)
      * Commit shall fail if a transactional object has been modified since
        the beginning of the unit of work 

2.1.  FIXED BUGS

      CR20019393
      Database: wrong SQL for nested queries with embedded features.      
       
2.2.  DEPRECATED FEATURES

      CR20020005
      Optimistic Locking
      
      Facades.newObject(UUID) has been deprecated
            
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.9.1                                                       2012-01-10
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.0
      
1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none
       
2.2.  DEPRECATED FEATURES

      CR20019352
      Cleanup Configuration Specification
      
      The following class has been deprecated:
      * org.openmdx.application.cci.ConfigurationSpecifier 
            
2.3.  REMOVED FEATURES

      CR20019352
      Cleanup Configuration Constants 
      
      The following configuration constants have been removed
      * KERNEL/persistenceManagerBinding
      * KERNEL/modelPackage
      * KERNEL/packageImpl
      * KERNEL/exposedPath
      * KERNEL/delegationPath
      * KERNEL/serverId
      * KERNEL/bypassedByLenientRequests
      * PERSISTENCE/optimizedType
      * PERSISTENCE/optimizedTable
      * PERSISTENCE/storageFolder

      CR20019998
      context:BeforeImage 
      
      context:BeforeImage:<feature> replies have been removed.
       
      
==============================================================================
Version 2.9.0                                                       2012-01-04
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.8.37
      
1.    NEW FEATURES

      CR20019858
      UpdateAvoidance
      
      Its is now possible to disable comparison of dirty objects with
      their before image for a single unit of work:
      
         UserObjects.getPlugInObject(
            entityManager, 
            UpdateAvoidance.class
         ).touchAllDirtyObjects(
            entityManager.currentTransaction()
         );      
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019896
      Superclass callback invocation
      
      The responsibility for handling the callback interfaces
      * LoadCallback
      * StoreCallback
      * ClearCallback
      * DeleteCallback
      * ConstructCallback
      has been clarified as following:
      1. The Jmi1ObjectInvicationHandler propagates the callbacks to all 
         matching plug-ins, i.e. to all Impl classes implementing
         the corresponding callback interface.
      2. Each implementation class propagates the callbacks to its direct
         super-class it wants to suppress it on purpose.
      3. The Jmi1ObjectInvicationHandler propagates the callbacks to next
         layer provided its instance proxy implements the corresponding
         callback interface.      

      CR20019835
      Missing Mandatory Attributes
      
      Persistent and persistent-new objects are validated during commit. If
      there are some mandatory attributes missing after the before-completion
      and pre-store callbacks than a validation exception prevents the commit
      from succeeding.
       
      CR10010250
      refSetValue for multivalued primitive types
      
      refSetValue(feature,source) for all multivalued features is now 
      dispatched to:
      
          target = refGetValue(feature);
          target.clear();
          if(target instanceof Collection || target instanceof List) {
             target.addAll(asList(source)) 
          } else if (target instanceof Map) {
             target.putAll(asMap(source));
          }
            
      CR20019341
      Rose Model Update
      
      The change consists of:
      * CR20019340: StateCapable should extend ContextCapable
      * CR20019978: modifiedBy, createdBy, removedBy
      * CR20019979: audit1 
     
      CR20019978
      modifiedBy, createdBy, removedBy
      
      The attributs
      * Modifiable.modifiedBy
      * Creatable.createdBy
      * Removable.removedBy
      are now of type List<String> instead of Set<String>
      
      CR20019858
      org.openmdx.base.aop0.PlugIn_1_0
      
      The method 
      
         Object getUserObject(
            Object key
         );
         
      has been replaced by 
      
         <T> T getPlugInObject(
            Class<T> type
         );     
      
2.1.  FIXED BUGS
      
      CR20019996
      refSetValue fails with qualified name
       
      CR20019991
      Erroneous ObjectAndValidStateComparator
      
      actual != null & extected == null not recognized 
       
2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES

      CR20019835
      Missing Mandatory Attributes

      The following methods have been removed from AbstractObject:
      * protected void jdoPreClear(Class<? super N>);
      * protected void jdoPreStore(Class<? super N>);
      * protected void jdoPostLoad(Class<? super N>);
      * protected void jdoPreDelete(Class<? super N>);
      * protected void openmdxjdoPostConstruct(Class<? super N>);
      * protected final <I> Iterable<I> mixedInTargets(Class<I>,Class<? super N>...)

      CR20019981
      Multiplicites
      
      The deprecated class Multiplicites has been removed.
      
      CR20019858
      org.openmdx.base.aop0.PlugIn_1_0
      
      The method 
      
         Object getUserObject(
            Object key
         );
         
      has been removed in favour of
      
         <T> T getPlugInObject(
            Class<T> type
         );     

      CR20019979
      audit1
      
      The deprecated model package org::openmdx::compatibility::audit1 has 
      been removed.


==============================================================================
Version 2.8.37                                                      2011-11-18
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES

      CR20019260
      PersistenceHelper.getLastXRISegment
      
      This method retrieves the last segment of the object's current or future
      XRI. It returns null if the object is not contained yet.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019962
      Exception in case of null qualifier
      
      A JmiServiceException with exception domain DEFAULT_DOMAIN and
      exception code BAD_PARAMETER is thrown as opposed to the former
      ClassCastException,

      CR20019971
      Parent Accessor
      
      The parent accessor threw NullPointerException when invoked on a 
      transient object.
      
      Now it returns null if the object is not yet contained and the parent 
      object in all other cases.
      
2.1.  FIXED BUGS
      none
       
2.2.  DEPRECATED FEATURES

      CR20019927
      Path modification
      
      All path modification methods have been deprecated:
      * add()
      * addAll()
      * remove()
      * setTo()
            
2.3.  REMOVED FEATURES
      
      CR20019927
      Path.toResourcePattern
      
      The deprecated method toResourcePattern() has been removed.

      
==============================================================================
Version 2.8.36                                                      2011-11-11
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES

2.1.  FIXED BUGS
      
      CR20019968
      refresh() 

      PersistenceManager.refresh(persistenceCapable) does not afffect
      * PERSISTENT-CLEAN
      * PERSISTENT-NONTRANSACTIONAL
      instances
       
2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none

      
==============================================================================
Version 2.8.35                                                      2011-11-01
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      
      CR20019959
      Nested Query
      
      PersistenceHelper.asSubquery() wraps a query into a sub-query argument, e.g.
      * query.aReference().elementOf(
          PersistenceHelper.asSubquery(aSubQuery)
        );  
      * query.thereExistsAnotherReference().notAnElementOf(
          PersistenceHelper.asSubquery(anotherSubQuery)
        );        

      CR20019916	 
      getView for Container
      
      The getViewForTimeRange and the getViewForTimePoint method are now 
      available for containers as well.
      
      CR20019920
      Database_1: nested queries for composite parents. Nested queries support 
      composite parent features.
      
      CR20019858
      Update avoidance
      
      The UpdateAvoidance_1 AOP0 plug-in avoids unnecessary update requests to
      the persistence layer by discarding modification requests for unchanged 
      features.
      
      The same holds now for the audit2 AOP0 plug-in in respect to 
      non-audited objects.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019966
      Support for OpenJPA 2.x. Replace OpenJPA 1.x with OpenJPA 2.x.
      
      CR20019939
      State feature access
      
      The set of states involved in feature queries is now cached.
      
      CR20019916	 
      getView for Container
      
      Unification of
      * generic arguments for containers
      * RuntimeExceptions to be thrown
                  
      CR20019918
      Allow skipping of index values
      
      The index values need no longer be consecutive for the following DB 
      configuration entries:
      * String Macros
      * Path Macros
      
      CR20019913
      Multiplicity Determination
      
      Exception contains now the feature's qualified name
                        
2.1.  FIXED BUGS
      
      CR20019917
      setUserObject(Object)/getUserObject()
      
      The PersistenceManager's  setUserObject(Object) and getUserObject() 
      methods throw an exception.
      
      CR20019915
      Erroneous container proxy behaviour 
      
      The following predicate is not true in a persistence manager proxy: 
      
        propertyHolder.<Property>getProperty().size() == 
        propertyHolder.<Property>getProperty(
           (PropertyQuery)this.entityManager.newQuery(Property.class)
        ).size()

2.2.  DEPRECATED FEATURES
      
      CR20019916
      getViewForTimeRange
      
      The method 
      
        getViewForTimeRange(
          Collection,
          String, 
          XMLGregorianCalendar, 
          XMLGregorianCalendar
        )
        
      has been deprecated in favour of

        getViewForTimeRange(
          Container, 
          XMLGregorianCalendar, 
          XMLGregorianCalendar
        ).get(
          QualifierType.REASSIGNABLE,
          String
        )
      
            
2.3.  REMOVED FEATURES
      
      CR20019958
      Container Id Retrieval
 
      Remove the deprecated getContainerId and getTransientContainerId
      methods from the PersistenceHelper.
      
      CR20019916	 
      getViewForContiguousStates
 
      The unsupported method getViewForContiguousStates has been removed.

      
==============================================================================
Version 2.8.34                                                      2011-10-11
==============================================================================

0.    KNOWN ISSUES

      CR20019917
      setUserObject(Object)/getUserObject()
      
      The PersistenceManager's  setUserObject(Object) and getUserObject() 
      methods throw an exception.
      
      CR20019915
      Erroneous container proxy behaviour 
      
      The following predicate is not true in a persistence manager proxy: 
      
        propertyHolder.<Property>getProperty().size() == 
        propertyHolder.<Property>getProperty(
           (PropertyQuery)this.entityManager.newQuery(Property.class)
        ).size()

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019941
      Immutable DataType Serialization
      
      Serialization replaces an ImmutableDate or an ImmutableDateTime by its 
      mutable counterpart.      
                              
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none
 

==============================================================================
Version 2.8.33                                                      2011-09-29
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019921
      ImmutableDate to GregorianCalendar
      
      Erroneous conversion
      
      There is an offset of one month

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none
 

==============================================================================
Version 2.8.32                                                      2011-09-27
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019919
      Apply string macros to URIs

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none
 

==============================================================================
Version 2.8.31                                                      2011-09-11
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019905
      Performance Improvement
      
      Get rid if SELECT statements retrieving configured values such as 
      transactionTimeUnique or validTimeUnique.
      
      There is a state plug-in to support the improvement:
      * KERNEL/MODEL=org.openmdx.application.dataprovider.layer.model.State_2
      * MODEL/transactionTimeUnique=(java.lang.Boolean)false
      * MODEL/validTimeUnique=(java.lang.Boolean)false
      
                        
2.1.  FIXED BUGS
      
      CR20019908
      Concurrent Access Failure
      
      Concurrent DB plug-in activation may lead to concurrent access failure.

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      
      CR20019907
      Database Plug-In Clean-Up
      
      Remove features which are deprecated for a long time already:
      * supportsObjectReplacement
      * createMultiValuedObject 

 
==============================================================================
Version 2.8.30                                                      2011-08-28
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019861
      Query columns have too long column names
      
      Queries create views with column aliases starting with the private
      attribute prefix, e.g. p$$.
      
      Formerly the column mapping was applied to the resulting alias requiring 
      all mappings made to avoid too long column names had to be applied twice, 
      once to the column name and once to the prefixed column name.
      
      Now the column mapping is applied to the original column name and the
      prefix is prepended to the resulting name.      
                        
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none

 
==============================================================================
Version 2.8.29                                                      2011-08-24
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019861
      Database: autonum fields for Oracle. use to_char(nextval) instead of 
      CAST(nextval TO VARHAR2(n)). Refactoring of Database_1.getAutonumValue()
      and jdbc-driver-sql.properties.
                        
2.1.  FIXED BUGS

      CR20019854
      Core attribute replication
      
      Some core attributes are not replicated to their states.
      
      Queries relying on it fail therefore.
      
      CR20019859
      Database: forAll support for nested queries.
      query.forAllAddress().name().equalTo("abc");

      FOR_ALL:
      select v.* from OOCKE1_ACCOUNT v where object_id not in (select p$$parent from OOCKE1_ADDRESS vv WHERE NOT (vv.name = 'abc'))
      
      THERE_EXISTS:
      select v.* from OOCKE1_ACCOUNT v where object_id in (select p$$parent from OOCKE1_ADDRESS vv WHERE vv.name = 'abc')
      

      CR20019668
      REST and nested queries
      
      Nested queries are processed correctly in XML mode only.
      
      CR20019771
      
      ModelAware filter
      
      Complex queries are resolved correctly when passed down to the database 
      plug-in but fail when applied to a cached collection.
      
      CR20019857
      forAll in complex query
      
      
      Erroneous implementation
      
      forAll is mapped to thereExists in case of complex queries.
      
      CR20019855
      In-Memory Update
      
      Erroneous implementation
      
      Untouched properties are cleared by an in-memory PUT request.

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none

  
==============================================================================
Version 2.8.28                                                      2011-08-08
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.

1.    NEW FEATURES

      CR20019836
      State-Aware Proxy
      
      Erlaubt die Konfiguration von PlugIns f�r den DataManager-Proxy.
      
      CR20019830
      Multiplicity
      
      New classes:
      * The class oorg.openmdx.base.mof.cci.ModelHelper replaces
        org.openmdx.base.mof.spi.ModelUtils 
      * The the enumeration org.openmdx.base.mof.cci.Multiplicity replaces
        the class org.openmdx.base.mof.cci.Multiplicities.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019842
      Container interface determination is erroneous
      
      Simple name required
      
      The fully qualified names is used in case of a String argument for 
      example.
      
      CR20019840
      Persistent-new children visited twice

      CR20019717
      Dead code in dynamic WBXML Plug-in
                       
2.2.  DEPRECATED FEATURES
      
      20019830
      Multiplicity
      
      Deprecated classes:      
      * The class org.openmdx.base.mof.spi.ModelUtils has been deprecated
        in favour of org.openmdx.base.mof.cci.ModelHelper 
      * The class org.openmdx.base.mof.cci.Multiplicities has been deprecated
        in favour of the enumeration org.openmdx.base.mof.cci.Multiplicity
      
2.3.  REMOVED FEATURES
      
      CR20019384
      The MODEL layer's optimistic locking locking feature
            
 
==============================================================================
Version 2.8.27                                                      2011-06-30
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
       
1.    NEW FEATURES

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's setTimeout() implementation is 
      erroneous.

                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
            
 
==============================================================================
Version 2.8.26                                                      2011-06-28
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES

      CR20019824
      Non Managed Naming Context
      
      Support for global entries
      
      Allow creation of entries in the global context through the JNDI API.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      none
                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
            

==============================================================================
Version 2.8.25                                                      2011-06-21
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019818
      Version Logging
      
      The openMDX version is now logged upon the first logger retrieval (as
      opposed to SysLog's initialization).
      
      CR20019816
      Lenient PersistenceManager Validation
      
      When modifying references
      * do not test for their outermost package's identity
      * but for their InteractionSpec-free outermost package's identity
            
      CR20019764
      Unit of work support for transient objects
      
      makeTransactional(transientObject) throws now a 
      JDOUnsupportedOptionException.
                        
2.1.  FIXED BUGS
      
      CR20019819
      Erroneous State Merging
      
      Non-matching states are merged under the following conditions
      * two adjacent states differ only in attributes not belonging to the
        default fetch set (usually multi-valued attributes)
      * the differing attributes are not in the cache
                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019782
      Together-Exporter
      
      Support for the following formats has been removed:
      * "together.openmdx-1" (no replacement)
      * "xmi.openmdx-1" (replaced by "xmi1")
            
 
==============================================================================
Version 2.8.24                                                      2011-05-18
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      
      CR20019764
      PersistenceManager Validation

      The following methods help to comply with the persistence manager 
      validation policy:
      * org.openmdx.base.aop2.AbstractObject
        toNext(same)
        toSame(next)
      * org.openmdx.state2.cci.DateStateViews
        linkStateAndCore(state,core)
        getViewForContext(context,object)

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019764
      PersistenceManager Validation
      
      Validate whether value and target share the same PersistenceManager.
                        
2.1.  FIXED BUGS

      CR20019762
      Stack Trace Of Modelled Exception
      
      The stack trace of modelled exceptions is not printed.
      
      The printStackTrace() methods of modelled exceptions prints 
      the exception class and the exception parameters only.
                  
      CR20019763
      Code Class Arguments In Modelled Exceptions
      
      Code class arguments in modelled exceptions are mapped to null.
      
      Arguments of a type other than one of the built-in primitive types are 
      mapped to null. 
      
      The default mapping should be java.lang.String in future.
                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.23                                                      2011-05-17
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019761
      DateStateViews: Incomplete ValidTimeUnique support
      
      getCore() is not validTimeUniqueAware
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.22                                                      2011-05-16
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019749
      openMDX Kernel Log Entry
      
      org.openmdx.kernel.log.SysLog logs org.openmdx.base.Version instead of
      org.openmdx.kernel.Version.
                        
      CR20019751
      Caching of aspects
      
      There is no special caching for aspects anymore.
                        
2.1.  FIXED BUGS
      none
                  
2.2.  DEPRECATED FEATURES
      
      CR20019749
      openMDX Kernel Log Entry
      
      The class org.openmdx.kernel.Version is deprecated as it's information 
      is redundant to org.openmdx.base.Version.
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.21                                                      2011-05-11
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019744
      NullPointerException bei Container-Iteration
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.20                                                      2011-04-28
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES

      CR20019729
      RestServlet: RefInitializeOnCreate
      
      The connection URL parameter RefInitializeOnCreate is used to determine
      the connection's mode.


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019729
      RestServlet: RefInitializeOnCreate
      
      RefInitializeOnCreate is now set per connection. It's default is true
      in auto-commit mode and false for connections established via HttpPort.
                        
2.1.  FIXED BUGS
      
      CR20019735
      State Comparator: Validity
      
      The validity must be ignored if and only if validTimeUnique is false.
      
      CR20019730
      SimplePort ignores cookies
      
      The reply cookies must be offered to the cookie handler.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019729
      RestServlet: RefInitializeOnCreate
      
      The servlet init parameter RefInitializeOnCreate is no longer supported.
      

==============================================================================
Version 2.8.19                                                      2011-04-19
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
                  
      CR20019731
      ObjectAndValidStateComparator
      
      Use qualified feature name to select comparator and correct default 
      ignore list.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.18                                                      2011-04-18
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      
      CR20019434 & CR20019727
      Structure Factory

      The structure factory may be used for jmi1 structures as well.
            
      CR20019726
      RefContainer
      Structure Factory
      A RefContainer is now PersistenceCapable
      * two instances are equal if they share the same PersistenceManager and
        their respective transient container ids are equal
      * it may be retrieved via both
        persistenceManager.getObjectById(containerId) and 
        persistenceManager.getObjectById(transientContainerId)  
      
      CR20019723
      getTimeIndependentView
      
      The static method getTimeIndependentView(RefBaseObject) has been added to
      DateStateViews.
      
      CR20019669
      PersistenceCapable Containers
      
      The following JDOHelper methods may now be applied to containers as well
      * getPersistenceManager(container)
      * getObjectId(container)
      * getTransactionalObjectId(container)

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019584
      REST Request Exception
      
      Unparsable requests are no longer treated as system exception leading to 
      a connection destruction.

      CR20019728
      Offer Awareness
      
      ObjectAndValidStateComparator enhancement
      
      CR20019723
      getTimeIndependentView
      
      The static method getTimeIndependentView(RefObject) in DateStateViews has 
      been replaced by getTimeIndependentView(RefBaseObject).
       
      DateStateViews.
      
      CR20019724
      Jmi1ObjectInvocationHandler
      
      Improve information about ClassCastException
                        
2.1.  FIXED BUGS
                  
      CR20019591
      getObjectById fails in case of containers
      
      PersistenceManager.getObjectById(containerId)
      
      CR20019719
      SQL Placeholder
      
      The SQL placeholder determination is ignored in case of equalTo().

2.2.  DEPRECATED FEATURES

      CR20019669
      PersistenceCapable Containers
      
      The following PersistenceHelper methods have been deprecated 
      * getContainerId(container)
      * getTransientContainerId(container)
      as they have been replaced by:
      * getObjectId(container)
      * getTransactionalObjectId(container)
      
2.3.  REMOVED FEATURES

      CR20019723
      getTimeIndependentView

      The static method getTimeIndependentView(RefObject) has been removed 
      from DateStateViews.
      

==============================================================================
Version 2.8.17                                                      2011-04-11
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      
      CR20019708
      interposedSynchronization support
      
      interposedSynchronization support added to lightweight transaction. 
      

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019685
      A BasicException.Holder's Message
      
      getMessage() of a BasicException.Holder should delegate to 
      Throwables.getMessage(), i.e. returning the exception domain, the 
      exception code and the description.
                        
2.1.  FIXED BUGS
            
      CR20019716
      A lightweight transaction's afterCompletion callback
      
      The LightweightTransaction invokes afterCompletion() with status ACTIVE 
      if no resources are enlisted with a transaction.
      
      CR20019709  
      getTimeIndependentView
      
      The generic argument S is unnecessary      
      
      CR20019708
      beforeCompletion failures
      
      A beforeCompletion() failure must mark the transaction for rollback only.

      CR20019584
      REST Request Exception
      
      Rollback and rollback exceptions handled properly in auto-commit mode.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.16                                                      2011-04-05
==============================================================================

0.    KNOWN ISSUES

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES

      CR20019630
      aop2 Impl context access
      
      Use PlugInContexts.uncheckedGetPlugInContext() instead of 
      PlugInContexts.getPlugInContext() in case of plug-in classes with
      wildcard types.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019630
      aop2 Impl context access
      
      Plug-in sub-classing support added
                        
2.1.  FIXED BUGS

      CR20019649
      Container in time-point view contains null elements

      CR20019628
      Valid Time Unique
      
      The ValidTimeUniqueType property is now evaluated properly.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.8.15                                                      2011-03-30
==============================================================================

1.    NEW FEATURES
      
      CR20019630
      aop2 Impl context access
      
      An aop2 Impl can access / create its context with this.thisContext(). 
      This context can now be retrieved via the object itself by using
      org.openmdx.base.aop2.PlugInContexts' getPlugInContext() method.
      
      CR20019663
      XML Comparator
      
      Allow feature specific methods to detect differences.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019666
      Modeled Exceptions
      
      The "typeName" parameter has been renamed to "class" to avoid naming
      conflicts.
      
      Note:
      This change requires re-generation of the JMI1 exception classes.

      CR20019663	
      Object And Valid State Comparator

      The class has been renamed from StateAwareXMLComparator to
      ObjectAndValidStateComparator.
      
      The modifiable set of ignored features has been replaced by a
      comparator callback method.
                        
2.1.  FIXED BUGS
      
      CR20019649
      Container in time-point view contains null elements
      
      The issue occurs in case of newly removed time ranges. 
      
      CR20019672
      Non-Transactional Read
      
      Non-transactional reads fail in case of a non-optimistic persistence 
      manager.
      
      CR20019670 
      Application Managed Unit Of Work
      
      No local transaction is provided for non-optimistic application managed 
      units of work.

      CR20019663	
      Object And Valid State Comparator
      
      Invalidated states must be ignored.
      
      CR20019666
      Modeled Exceptions
      
      Null descriptions lead to a stack overflow on getMessage().
      A null description is now replaced by the exception's qualified name.
      
      Note:
      This change requires re-generation of the JMI1 exception classes.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019663
      XML Comparator
      
      The modifiable set of ignored features has been removed.
      
      
==============================================================================
Version 2.8.14                                                      2011-03-22
==============================================================================

1.    NEW FEATURES

      CR20019662
      Persistence Manager Locking
      
      Allow locking the persistence manager while an application provided
      action is executed.
      
      CR20019661
      TestResultComparator
      
      The class StateAwareXMLComparator has been added

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019628
      Valid Time Unique
      
      The ValidTimeUniqueType property has been ignored in some (important) 
      cases.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.8.13                                                      2011-03-18
==============================================================================

0.    KNOWN BUGS
      none

1.    NEW FEATURES

      CR20019628
      Valid Time Unique
      
      The ValidTimeUniqueType property for the org.openmdx.state2.aop0.PlugIn_1 
      accepts the fully qualified class name of non-stated parents holding 
      children for which unique-time only is true.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019628
      Valid Time Unique
      
      Replace each
      * stateCapable.setCore(stateCapable) 
      invocation by the two following invocations:
      * stateCapable.setValidTimeUnique(true)
      * stateCapable.setTransactionTimeUnique(true)      
                        
2.1.  FIXED BUGS
      
      CR20019656
      isEmpty()'s iteration

      isEmpty() did often iterate over the whole collection.
      It should iterate as few as possible.
      
      CR20019660
      Oracle INTERVALDS
      
      INTERVALDS.toString() is erroneous:
      1.023 s are represented as 1.23 s
      
      A work-around for this Oracle bug has been added to openMDX.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019628
      Valid Time Unique
      
      The stateCapable.setCore(stateCapable) work-around support has been
      discontinued in favour of stateCapable.setValidTimeUnique(true).
      
      
==============================================================================
Version 2.8.12                                                      2011-03-15
==============================================================================

0.    KNOWN BUGS
      none

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019629	 
      Proxy has problems with flushed objects
      
      Deleted objects are subtracted twice from the container's size.
      
      CR20019654
      dereferencedType
      
      dereferencedType() is null in Container_1's getQueryType()
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.11                                                      2011-03-15
==============================================================================

0.    KNOWN BUGS

      CR20019629	 
      Proxy has problems with flushed objects
      
      Deleted objects are subtracted twice from the container's size.

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019649
      Container in time-point view contains null elements
      
      The issue occurs in case of newly populated time ranges. 
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.10                                                      2011-03-10
==============================================================================

0.    KNOWN BUGS

      CR20019629	 
      Proxy has problems with flushed objects
      
      It seems that deleted objects remain invisible after rollback.

1.    NEW FEATURES
      
      CR20019647	 
      Optimistic Unit Of Work
      
      * Loosely coupled with the JTA transaction.
      * Enable some units of work in a transaction to be committed while 
        others are rolled back.
      
      The new UnitOfWork interface provides tow methods:
      * void setForgetOnly()
      * boolean isForgetOnly()
      
      CR20019644	 
      Structure as JavaBean
      
      The method toJavaBean() has been added to the class Structures.
      
      CR20019589
      getValidStates with query
      
      The method getValidStates(Container,AnyTypePredicate) has been added to
      DateStateViews.
      
      CR20019637
      Java Bean as Structure
      
      The method fromJavaBean() has been added to the class Structures.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019635
      getViewForPropagatedState

      getViewForPropagatedState() shall delegate to getViewForTimeRange()
      where possible.
      
      The STRICT_QUERY mode has to be relaxed in the way, that the 
      underlaying state may be larger then required even if it is not new.
                        
2.1.  FIXED BUGS
      
      CR20019629	 
      Proxy has problems with flushed objects
      
      The actual fix disable caching for container proxies.

      CR20019648
      getViewForTimePoint
      
      The optimization is erroneous.
      
      CR20019636
      Transaction Time Query

      Deleted states must not be suppressed if existsAt is set.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.8                                                       2011-02-24
==============================================================================

1.    NEW FEATURES

      CR20019576
      getTimeIndependentView

      getTimeIndependentView() is a generalized version of getViewForCore().

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019576
      Query for core objects

      BasicState instance are excluded from DateStateContext-free views unless
      requested explicitely.

      CR20019625
      rollback-only

      beforeCompletion shall do nothing if rollback-only is set.
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.7                                                       2011-02-16
==============================================================================

1.    NEW FEATURES

      CR20019622
      Clone for states

      Add to clone methods to DateStateViews

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019577
      Unique Transaction & Valid Time
      
      Avoid "removedAt" access if the feature is non-persistent.
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019623
      Deprecated DateStateViews methods

      The deprecated DateStateViews methods have been removed.
      

==============================================================================
Version 2.8.6                                                       2011-02-10
==============================================================================

1.    NEW FEATURES

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019615	 
      removableReferenceIdPrefix
      
      The removableReferenceIdPrefix configuration is ignored for queries.
      
      CR20019555
      Involvement retrieval optimization
      
      Eliminate "LIKE '%'" SQL clauses.
                        
2.1.  FIXED BUGS

      CR20019613
      IRI Import
      
      Erroneous com.sun.jndi.toolkit.url.Uri reference.
      
      The import handler tries to create com.sun.jndi.toolkit.url.Uri 
      instances instead of java.net.URI instances.      
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.5                                                       2011-02-06
==============================================================================

1.    NEW FEATURES

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019555
      Involvement retrieval optimization
      
      Aspect queries used erroneous SQL statements.      
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.4                                                       2011-02-04
==============================================================================

1.    NEW FEATURES

      CR20019555
      Involvement retrieval optimization
      
      Avoid function based index searches for audit queries. Audit queries 
      should use persistent columns and avoid the view's derived attributes.
      
      The functionality is activated by a PERSISTENCE/referenceIdPattern
      entry, a white space separated list of 
      <feature-name>=<referenice-id-pattern> entries, e.g. 
      	
      	PERSISTENCE/referenceIdPattern=beforeImage=^([^.]+)[.](.+)$ object=^([^.]+)[.](.+)$
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019555
      Involvement retrieval optimization
      
      The referenceIdSuffixQueriesfunctionality has been replace by the
      more general referenceIdPattern functionality.
      

==============================================================================
Version 2.8.3                                                       2011-01-31
==============================================================================

1.    NEW FEATURES
      
      CR20019587
      State Query Optimization
      
      Requires a configuration change:
      * KERNEL/PERSISTENCE
        org.openmdx.application.dataprovider.layer.persistence.jdbc.Database_1 ->
          org.openmdx.application.dataprovider.layer.persistence.jdbc.RidOidQueryDatabase_1
      * PERSISTENCE/dbObjectFormat
        sliced -> sliced2
        slicedNonIndexed -> sliced2NonIndexed          
        slicedNonIndexedParentRidOnly -> sliced2NonIndexedParentRidOnly          
        slicedParentRidOnly -> sliced2NonIndexedParentRidOnly          

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019555
      Involvement retrieval optimization
      
      Requires a configuration change:
      * KERNEL/PERSISTENCE
        org.openmdx.application.dataprovider.layer.persistence.jdbc.Database_1 ->
          org.openmdx.application.dataprovider.layer.persistence.jdbc.RidOidQueryDatabase_1
      * PERSISTENCE/dbObjectFormat
        sliced -> sliced2
        slicedNonIndexed -> sliced2NonIndexed          
        slicedNonIndexedParentRidOnly -> sliced2NonIndexedParentRidOnly          
        slicedParentRidOnly -> sliced2NonIndexedParentRidOnly          

      CR20019605
      useNormalizedReferences
      
      useNormalizedReferences is used for very different switches.
      
      It is used 
      * as designed
      * as "not REF_TABLE" switch
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.2                                                       2011-01-24
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019555
      Involvement retrieval optimization
      
      Avoid function based index searches for audit queries. Audit queries 
      should use persistent columns and avoid the view's derived attributes.
      
      The functionality is activated by a PERSISTENCE/referenceIdSuffixQueries
      entry, a white space separated list of 
      <column-name>=<reference-id-prefix> entries, e.g. 
      	
      	PERSISTENCE/referenceIdSuffixQueries=before_image=audit* object=data*
           
                        
2.1.  FIXED BUGS
      
      CR20019599
      Empty multi-value slices
      
      Empty multi-value slices must be neither produced nor being required.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019352
      Configuration Clean-Up

      The PERSISTENCE layer configuration property 
      disableStateFilterSubstitution has been removed.
      

==============================================================================
Version 2.8.1                                                       2011-01-21
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019580
      InboundConnection & Partial Object
      
      The synchronization between entity manager and proxy did not work 
      correctly in case of partial objects.
      
      CR20019566
      Wrong Type Of Container Qualifier
      
      The qualifier has erroneously the member's type instead of the modeled 
      one.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.8.0                                                       2010-12-27
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.26                                                      2010-12-23
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019534
      TransactionAttributeType
      
      Copy javax.ejb.TransactionAttributeType to org.openmdx.base.transaction
      in order to get rod of openMDX' EJB dependency.
                        
2.1.  FIXED BUGS

      CR20019533
      URI Marshalling
      
      URI marshalling fails
      * for remote client calls
      * for typed queries      
      
      CR20019482
      Fetch plan propagation

      A query's fetch plan has to be propagated down to the persistence layer
      (even when used in an entity manager proxy).      

      CR20019535
      Transient Qualifier
      
      The standard plug-in does not replace transient qualifiers in case of 
      optimistic persistence managers.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.25                                                      2010-12-17
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019519
      EJB Connection does not support CharacterLargeObjects
            
2.1.  FIXED BUGS

      CR20019525
      Multi-object state retrieval

      For a given view context only the state of one object is returned.      

      CR20019519
      EJB Connection does not support BinaryLargeObjects
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.24                                                      2010-12-14
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019526
      Audit entries' unit of work id
      
      Audit entries' unit of work id must not be propagated to all multi-value 
      slices.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none

      
==============================================================================
Version 2.7.23                                                      2010-12-13
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019479
      Non-application id
      
      The RestFormat.Target's HREF prefix starts with a slash ('/') but does
      not end with a slash ('/') in accordance with the Servlet specification.
      
2.1.  FIXED BUGS
      
      CR20019519
      EJB Connection does not support BinaryLargeObjects
      
      CR20019479
      Non-application id
      
      Fails in case of proxy connections.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.22                                                      2010-12-09
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019448
      Auto-Commit
      
      A new manager shall be used by the REST-Servlet's in AUTO-COMMIT mode.      
      
2.1.  FIXED BUGS
      
      CR20019523
      Persistent-Dirty-NonTransactional
      
      Allocation of a new view manager made objects non-transactional.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019449
      setGroup() vs. setGroups(). Query_2Facade.setGroup() and .getGroup() not
      used so far. The methods are removed.


==============================================================================
Version 2.7.21                                                      2010-12-09
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019523
      Persistent-Dirty-NonTransactional

      Log statements and recovery code added.

      CR20019522
      Non-persistent features

      Allow system attributes to be made non-persistent.
      
2.1.  FIXED BUGS
      
      CR20019510
      No Multivalue Slices

      The database plug-in fails if there are no multivalue slices at all for
      a given object.

      CR20019508
      PersistenceHelper.getFeatureReplacingObjectById
      
      Enable getFeatureReplacingObjectById for BasicState instances

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20019521
      TYPE layer configuration
      
      The following unused properties have been removed
      * TYPE/transactionTimeUnique
      * TYPE/validTimeUnique


==============================================================================
Version 2.7.20                                                      2010-12-07
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019517	 
      DateStateViews.getViewForPropagatedState()

      State cloning is implemented erroneously.

      CR20019516
      DateStateViews.getStates() with boolean arguments
      
      The DateStateViews.getStates(StateCapable,boolean,boolean) method is 
      incorrectly implemented.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.19                                                      2010-12-02
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019507
      DateState_1 Equality
      
      duration.equals(null) fails with Apache's lightweight duration 
      implementation.
            
2.1.  FIXED BUGS
      
      CR20019512
      View For Propagated State
      
      The method getViewForPropagatedState() fails when nothing is overridden.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.18                                                      2010-12-01
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019507
      DateStateViews Assertions
      
      Assert reasonable time ranges: At the moment its possible to use a 
      stateValiTo which is less than the stateValidFrom.
            
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.17                                                      2010-11-30
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
            
2.1.  FIXED BUGS
      
      CR20019480
      Missing audit entries
      
      A flush()/beforeCompletion() sequence spared dirty objects from being
      audited.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.16                                                      2010-11-29
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019497      
      Erroneous Finalization
      
      Finalization of an container managed entity manager leads to flushing
      unless openMDX has been notified about the rollback-only.
      
2.2.  DEPRECATED FEATURES
      
      CR20019449
      setGroup() vs. setGroups(). Query_2Facade.setGroup() and .getGroup() not
      used so far. The methods are removed.

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.15                                                      2010-11-22
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR20019480
      Missing audit entries
      
      Improve dirty/clean handling
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.14                                                      2010-11-18
==============================================================================

1.    NEW FEATURES
      
      CR20019478
      Absolute Positioning
      
      The DB object configuration entry "disableAbsolutePositioning" with the 
      default value "(java.lang.Boolean)false" allows to disable absolute 
      positioning for the given DB object.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019445
      Premature finalization under WebSphere
      
      Protect the persistence manager's flush against premature finalization.
      
      Use close() to complete the work instead of afterBegin() and 
      beforeCompletion() if ContainerManagedtransaction is true. 
      
      CR20019473
      Long URLs
      
      The HTTP Port has to be changed the following way:
      * Query requests use POST instead of GET
      * Delete requests use PUT with a "?FunctionName=DELETE" suffix
      
      CR20019473
      REST Queries
      
      REST connections use POST instead of GET now.
      
      CR20019472
      Dirty objects without "really" modified features
      
      If modfiedAt and modifiedBy are cleared if they are the only modified
      features unless the object is an instance of 
      org::openmdx::base::AspectCapable.
      
2.1.  FIXED BUGS

      CR20019437
      Remote client MIME type
      
      The REMOTE client may now use text or binary format:
      * application/xml
      * application/vnd.openmdx.wbxml
      
      CR20019439
      Connection URL
      
      The cnnection URL's query parameters shall be encoded.
      
      CR20019433
      View For Time-Range Without Holes
      
      Creates erroneously overlapping states.

      CR20019472
      "Empty" audit entries
  
      org::openmdx::state2 erroneously treats them as removed.
  
      CR20019430
      flush
      
      Flush leaves dirty objects in an erroneous state:
      * Atttributes are somtime unreadable
      * Committing of persistent-new instances fails with a concurrent 
        modification exception
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.13                                                      2010-11-12
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019469
      Connection 2
      
      The try/catch sequences for connection 2 have been improved.
      
      CR20019435
      Duration and URI import
      
      Duration and URI character sequences are not marshaled to their 
      appropriate class
      
      CR20019431
      Queries in TIME-RANGE view
      
      Queries for BasicState instances are disallowed in TIME-RANGE views.
      
2.1.  FIXED BUGS

      CR20019467	 
      Incorrect Flush Order
      
      Children must be deleted before their parents
      
      CR20019431
      Queries in TIME-POINT view
      
      The returned views had state IDs instead of object IDs
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.12                                                      2010-11-10
==============================================================================

1.    NEW FEATURES
      
      CR20019395	 
      Ability To Disable Core Object Removal
            
      The aop0 state plug-in has a new configuration option 
      'stateCapableDeletable' which enables the deletion of state
      capable objects. Its default value is 'false'.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019461
      Involvement Query Optimization
      
      Replace "LIKE" by "=" where appropriate.
      
2.1.  FIXED BUGS
      
      CR20019465
      ForeignLogRecord
      
      The foreign log record's logger field is empty.
      
      CR20019462
      Removing transient objects from container
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.11                                                      2010-11-08
==============================================================================

1.    NEW FEATURES

      CR20019455
      Single State Views
 
      The method DateStateViews.representsSingleState() tells whether the
      view refers to a single state.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR20019452
      Optimistic locking for stated objects
      
      The request is twofold
      1. modifiedAt/modifiedBy shall be updated
         * when a core attribute is modified
         * when a state is created or removed 
      2. modifiedAt/modifiedBy shall not be propagated from the core object 
         to the states 
            
      CR20019454
      Properties Configuration
      
      The PropertiesConfiguration shall close its streams in order to avoid
      running out of file handles.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20019455
      objIsRemoved
      
      aop1's objIsRemoved() method was unreferenced and has therefore been 
      removed,


==============================================================================
Version 2.7.10                                                      2010-11-03
==============================================================================

1.    NEW FEATURES

      CR20019413
      PREFERENCES Table
 
      Allow PREFERENCES table lookup to be disabled:
        PERSISTENCE/usePreferencesTable=(java.lang.Boolean)false
      while it still defaults to 
        PERSISTENCE/usePreferencesTable=(java.lang.Boolean)true
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
      CR20019322
      Removal refers to an object's parent
      
      Do not add the parent to the unit of work.
      * An object to be removed should not refer to its parent especially in 
        the case of before images.      
       
      CR20019424
      A StateCapable's stateVersion attribute
      
      The 'stateVersion' attribute
      * shall not be propagated to the states
      * shall not affect 'modifiedAt' and 'modifiedBy'
      
2.1.  FIXED BUGS
      
      CR20019322
      ModelAwareFilter
      
      The method isCoreInstance() is not implemented correctly.
      
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.9                                                       2010-10-31
==============================================================================

1.    NEW FEATURES
      none
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019418
      Overlapping state

      Disable the creation of overlapping states

      CR20019443	 
      validTimeUnique fallback
      
      he validTimeUnique fallback algorithm has to check the object's type for 
      org::openmdx::base::Aspect before accessing its "core" feature
      
      CR20019440 
      JavaBeans
      
      The DefaultPersistenceDelegate should avoid invocation of the standard 
      initialize() method. 
      
      CR20019417
      Batching failure
      
      The first element of the next batch is the same as the last element of 
      the previous batch in case of non-index tables or views.
      
      CR20019438
      AspectCapable filter optimization
      
      The AspectCapable filter optimization may lead to a NullPointerException. 
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20019441
      State_1 TYPE plug-in
      
      Thus plug-in should be removed as it leads to an erroneous behaviour.


==============================================================================
Version 2.7.8                                                       2010-10-29
==============================================================================

1.    NEW FEATURES
      none
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019360	 
      Basic Authentication
      
      Use "Basic " instead of "BASIC " as authorization value prefix.      
      
2.1.  FIXED BUGS
      
      CR20019366
      "Reduced" JMI delegation stack
      
      There exists a JUnit-Test
      * where plug-in layers are missing when a plain container is retrieved
	  * where no plug-in layers are missing when an (even null) query is 
	    supplied

      Container.toArray(Object[]) has to be corrected.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.7                                                       2010-10-27
==============================================================================

1.    NEW FEATURES

      CR20019433
      View For Time-Range Without Holes
      
      The method getViewForTimeRangeWithoutHoles() fills the holes in the
      given time-range but leaves existing states before returning a view for 
      the given time-range.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019366
      "Reduced" JMI delegation stack
      
      Some marshalling assertions added.
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.6                                                       2010-10-26
==============================================================================

1.    NEW FEATURES

      CR20019424
      RefInitializeOnCreate
      
      The "org.openmdx.jmi.option.RefInitializeOnCreate" option may be used to 
      activate this feature.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019424
      RefInitializeOnCreate
      
      The "org.openmdx.jmi.option.RefInitializeOnCreate" option's default 
      value is now "false" (as opposed to its former implicit "true").

      CR20019396
      Multi-valued State Retrieval
      
      Allow the qualifier specification to be multi-valued.
      
      CR20019402
      DateStateViews.getStates()
      
      Accept Container<? extends StateCapable> as argument. There is no need
      to restrict container arguments to Container<? extends DateState>.
      
      CR20019411
      stateVersion v/s stateNumber
      
      Semantic
      * state1's stateNumber stores the last state number created by the 
        state1 API
      * state2's stateVersion stores the number of states which have been 
        created through the state2 API
        
      In order to be able to rename stateNumber to stateVersion without data 
      conversion we have to get rid of the semantic change.
      
      CR20019415
      refDelete()
      
      refDelete() shall throw a JmiServiceException instead of a 
      RuntimeServiceException in case of failure.
      
      
2.1.  FIXED BUGS

      CR20019424
      Applying refInitialize() on an object with user defined primitive types 
      shall give a warning instead of an exception.

      CR20019417
      Batching Failure
      
      Batching didn't work for some views.
      Resolved now for non-sliced views.
            

2.2.  DEPRECATED FEATURES

      CR20019396
      Multi-valued State Retrieval
      
      Some of the state retrieval methods have been deprecated.

2.3.  REMOVED FEATURES
      
      CR20019402
      DateStateViews
      
      The deprecated getStates() and getView() methods have been removed.


==============================================================================
Version 2.7.5                                                       2010-10-24
==============================================================================

1.    NEW FEATURES
      
      CR20019372
      audit2 Extension
 
      audit2 provides the following involvement persistence flavour:
      * EMBEDDED
        The involvement is embedded in the before image.
        An org::openmdx::audit2::UnitOfWork does not remember the object 
        creation involvements in this mode.

      Use the following entry to activate the embedded mode:
        <property 
          name="org.openmdx.audit2.PlugIn.involvementPersistence" 
          value="EMBEDDED"
        />      

      CR20019407
      toAnyURI
      
      toAnyURI() generates an AnyURI representation of a path
      
      Reserved characters in cross-references are percent-encoded: 
      * All percent "%" characters are percent-encoded as "%25" across the 
        entire XRI reference.
      * All number sign "#" characters that appear within a cross-reference 
        are percent-encoded as "%23".
      * All question mark "?" characters that appear within a cross-reference 
        are percent encoded as "%3F".
      * All slash "/" characters that appear within a cross-reference are
        percent encoded as "%2F".

      toIRI() and toAnyURI are synonyms.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019360
      Remote Client

      Be prepared for body retrieval failures.

      CR20019347
      Container Managed Persistence Manager

      Take persistence manager factory configuration into consideration. The
      setting of the "org.openmdx.jdo.option.ContainerManaged" option is 
      ignored at the moment.

      Enable a persistence manager with container managed transactions to be
      closed while its unit of work is still active.

2.2.  DEPRECATED FEATURES

      CR20019372
      audit2 Extension
      
      The org::openmdx::compatibility::audit1 model is deprecated and will be 
      removed in the next release. 

      CR20019360
      HttpCookie

      Support dot-less domain matching.

2.3.  REMOVED FEATURES

      CR20019372
      audit2 Extension
      
      The org::openmdx::compatibility::audit1 support has been removed.

      The following configuration entries must no longer be used:      
        <property 
          name="org.openmdx.audit2.PlugIn.modifiedFeaturePersistent" 
          value="(java.lang.Boolean)false"
        />
        <property 
          name="org.openmdx.audit2.PlugIn.audit1Persistence" 
          value="(java.lang.Boolean)true"
        />


==============================================================================
Version 2.7.4                                                       2010-10-11
==============================================================================

1.    NEW FEATURES
      
      CR20019394
      Avoid redundant core reference columns
      
      This feature is supported by sliced db objects and controlled by 
      PERSISTENCE/useViewsForRedundantColumns which defaults to 
      (java.lang.Boolean)true.
      
      It expects the following columns being provided by a view:
      * CORE
      * P$$CORE__RID
      * P$$CORE_PARENT__RID
      * P$$CORE_PARENT__OI

      CR20019346
      NonManaged JNDI Context Extensions
      
      Two new JNDI URL protocols have been added:
      * _new:
        The "_new" protocol registers a JavaBean factory in the JNDI context.
        The URL
            _new:test.openmdx.kernel.lightweight.naming.JavaBean?string=aStrin
            g &integer=(java.lang.Integer)-1"
        for example creates a java bean factory which instantiates  
        test.openmdx.kernel.lightweight.naming.JavaBean and sets the 
        properties "string" and "integer" to "aString" and -1, respectively.
      * jndi:
        The "jndi" protocol registers a link to a foreign JNDI context.
        The URL
            jndi:a.websphere.entry?java.naming.factory.initial=com.ibm.websphe
            re.naming.WsnInitialContextFactory&java.naming.provider.url=corbal
            oc:iiop:myhost.mycompany.com:2809 
        for example creates a link to the WebSphere JNDI name 
        "a.websphere.entry".   
        Note: 
            '/' characters in the foreign JNDI name must be escaped ("%2F")

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019387
      Path.lock()
      
      lock() should return the path itself

2.1.  FIXED BUGS
      
      CR20019397
      URI Marshaller
      
      Ability to handle null values
      
      CR20019363
      Container.clear()

      The clear() method should work for state capable collections as well.

      CR20019388
      enum as reference
      
      Reserved identifiers used as reference names are escaped in the cci2 
      mapping but noty yet in the jmi1 mapping.
      
      CR20019357	 
      Multi-tenancy
      
      audit2-aop0-PlugIn_1 must always use the accessor in order to retrieve
      the audit segment id.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.7.3                                                       2010-10-07
==============================================================================

1.    NEW FEATURES
      
      CR20019369	 
      TransactionManager
      
      Add a register() method to the ComponentEnvironment.
      Objects will be taken created by the factory if one is registered for
      the given object class.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019386
      afterCompletion
      
      After completion all objects (not only dirty ones) are evicted unless
      retainValues is on.
      
      CR20019364
      AbstractRestInteraction
      
      Improve error message for unsupported interactions.
      
      CR20019383
      PersistenceManager.evictAll()
      
      The evictAll() method should affect containers as well. At the moment 
      only objects are evicted while containers remain stale.
      
      In future a PersistenceCapable's evict() method will evict the 
      containers as well (which in turn changes evictAll()'s behaviour 
      accordingly).

2.1.  FIXED BUGS
      
      CR20019385
      Unit Of Work Member Re-ordering
      
      The erroneous algorithm has been replaced.
      
      CR20019373
      Invalid queries for getStates(container,query)
      
      DateStatViews amends the query with illegal conditions leading in case 
      of open ended time range which results in null values being applied to
      the SQL statements.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019373
      DateStateContexts
      
      The remaining methods of DateStateContexts have been moved to another
      appropriate place and the class itself has been removed.
      

==============================================================================
Version 2.7.1                                                       2010-09-26
==============================================================================

1.    NEW FEATURES
      
      CR20019357
      Multi-tenancy
      
      Add tenant support
      
      There are two additional static methods in the UserObjects class:
      * setTenant(PersistenceManager,Object)
      * Object getTenant(PersistenceManager()
      
      The getTenant() method could be used for example in an 
      org.openmdx.audit2.aop0.PlugIn_1 extension to override the
      getAuditSegmentId(PersistenceManager) method.
      
      CR20019347
      Container Managed PMs
      
      The option org.openmdx.jdo.option.ContainerManaged activates the 
      following behaviour:
      * auto-start on creation
      * auto-flush on close
      * exclusive lock for close and flush
      
      CR20019343
      Configuration Properties
      
      Example:
        defaults=xri://+resource/META-INF/...
        include[0]=http://...
        include[1]=file:/...

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019338
      Model_1Factory
      
      Throw a runtime exception instead of returning null in case of failure.
      
      CR20019344
      Non-persistent features
      
      Exclude non-changeable features from being updated.
      
      CR20019340
      StateCapable should extend ContextCapable
      
      StateCapable objects should be ContextCapable      

2.1.  FIXED BUGS
      
      CR20019356
      Remove aspects with core object
      
      CR20019355
      Audit cascaded deletes
      
      CR20019323
      NOT_FOUND exceptions at meta data level must be remapped
      
      NOT_FOUND exceptions at meta data level are for example silently 
      converted to "return null" when occurring during an object retrieval 
      through the container API.
      
      CR20019349
      Entity Manager Manager Proxy
      
      Propagate Configuration Entries
      * javax.jdo.option.ConnectionDriverName
      * javax.jdo.option.ConnectionURL
      
      CR20019344
      Non-persistent features
      
      Take the "nonPersistentFeature" configuration into consideration.
      
      CR20019339
      SparseArray
      
      SparseArray retrieval leads to ClassCastException or 
      IndexOutOfBoundException.	 
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.7.0                                                       2010-08-30
==============================================================================

1.    NEW FEATURES
      
      CR20019316
      JMI1: signature add(Object obj). Add signature add<feature>(Object obj) 
      to JMI1 interfaces.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none 

2.1.  FIXED BUGS
      
      CR20019317	 
      DateStateViews' createState method
      
      The createState() method must assign the state to its core.
      
      CR20019312
      validTimeUniquePattern
      
      Support lacking configuration
      
      validTimeUniquePattern entries are unnecessary in a standard deployment. 
      The plug-in should therefore support configurations without any 
      validTimeUniquePattern entry.
      
      CR20019311
      Automatic id for transient children
      
      Adding a child to a transient container without providing an explicit 
      qualifier stores the child with a temporary place-holder 
      (":<transientObjectId>") which is replaced by a final qualifier provided 
      by one of the configured aop0 plug-ins at the time the container is made
      persistent. 
       
      CR20019309
      org.openmdx.uses.java.util
      
      This package is lacking in the JRE 5.0 distribution.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.6.5                                                       2010-08-16
==============================================================================

1.    NEW FEATURES
      none 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019303
      Provider configuration
      
      Accept each resource URL once only.

2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.6.4                                                       2010-08-08
==============================================================================

1.    NEW FEATURES

      CR20019285
      Container Managed Transaction Support
      
      An inbound connection shall support
      * RESOURCE_LOCAL transactions 
      * JTA transactions 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019285
      Configurable and Non-Configurable Properties
      
      The classes ConfigurableProperty and NonConfigurableProperty have been 
      moved from org.openmdx.kernel.persistence.cci back to 
      org.openmdx.base.persistence.cci. 
      
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.6.3                                                       2010-07-13
==============================================================================

1.    NEW FEATURES

      CR20019259
      Time-range view readability
      
      Asserts that only single-state views allow to read stated attributes if
      and only if org.openmdx.state2.spi.Parameters.STRICT_QUERY is true.
      
      Single-state time-range views are created in one of the following ways:
      * PersistenceManager.newInstance() and its JMI correspondents
      * DateStateViews.createStatedObject()
      * DateStateViews.createStated()
      * DateStateViews.getViewForInitializedState()
      * DateStateViews.getViewForPropagatedSstate()
      * DateStateViews.getStates()
      * DateStateViews.getValidStates()
      * DateStateViews.getCroppedStates()
      Even such a view may become unreadable when the underlying state is 
      affected through other views. 

      CR20019261
      Core attributes 
      
      Make the core attributes modifiable 
      
      There are two possible implementations:
      * normalized: The core attributes are stored in the core object only.
        (This mode is incompatible with RID/OID usage and therefore not yet
        suported)
      * de-normalized: The core attributes are (redundantly) propagated into 
        all states. (This mode is implemented in order to continue RID/OID 
        support)
      
      CR20019262 
      Transaction Time Factory 
      
      The method UserObjects.setTransactionTime(Factory<Date>) allows to 
      override the implicit transaction time acquisition (new Date()).
       
      CR20019257
      DateStateViews
      
      DateStateViews has been amended by a number of public static methods.
      
      CR20018768
      Persistence Capable Collections
      
      Support
      * persistenceManager.retrieveAll(Collection)
      * persistenceManager.evictAll(Collection)
      * persistenceManager.refreshAll(Collection)
      for
      * RefContainer instance 
      * Query result Lists
      * other java.util.Collections
      
      CR20019228
      Unescape Path(String) argument 

      Escaped dots may be replaced by the method 
      SpecialResourceIdentifiers.unescapeResourceIdentifier(String). 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019259
      Time-point view
      
      The validFor of time-points view for invalidated states which are open
      at both ends has has changed from their creation date to 2000-01-01:
      
      From now on use the following priorities to define the validFor of a 
      time-point view for in invalidated state:
      1. stateValidFrom unless it is null
      2. stateValidTo unless it is null
      3. 2000-01-01    
       
      CR20019228
      Unescape Path(String) argument 
      
      Replace escaped dots for the following formats
      * XRI 1
      * XRI 2
      
      CR20018768 	
      refresh 

      To be JDO compliant
      * shall the parameterless method refreshAll() do nothing when invoked 
        outside of a transaction.
      * shall the parameterless method evictAll() ignore dirty instances
      
2.1.  FIXED BUGS
      
      CR20019263
      openmdxjdoClone
      
      PersistenceHelper.clone must not ignore attributes missing in the current 
      fetch group. 
      
      CR20018837
      Persistent-new-deleted
      
      Main issues
      * The removal of a persistent-new object has to be propagated to its children
      * An entity manager proxy has to take care whether a persistent-new object's
        removal has to be propagated or not
      * A removed object must keep its manager
      
      CR20019245
      ClassCastException in container.getX(xQuery)
      
      container.getX(xQuery) throws a ClassCastException in an EntityManager-
      Proxy if xQuery is null.  
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019228
      Unescape Path(String) argument 

      The method AbstractDatabase_1.toPattern(String) has been removed in 
      favour of SpecialResourceIdentifiers.unescapeResourceIdentifier(String).

      CR20018768 	
      Evictable 

      The interface org.openmdx.base.accessor.rest.Evictable could be
      eliminated.
      
      
==============================================================================
Version 2.6.2                                                       2010-06-24
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019225
      Rational Rose Support

      Rational Rose models brought up to date.

      CR20018768
      Containment Associations
      
      The container interfaces have been standardized:
      * org.w3c.cci2.Container<E> is generic CCI level interface extending
        java.util.Collection<E>
      * org.oasisopen.jmi1.RefContainer<E><E> is generic JMI level interface 
        extending org.w3c.cci2.Container<E>
      * org.openmdx.base.persistence.spi.PersistenceCapableContainer is
        an interface used the the implementation only. It should not be used
        in an application program.
      
      CR20019223
      Amend RSM importer
      
      Improve RSM 7.5 support: 
      * local forward references
      * references into other EMX files 
      * uml:Package
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019198
      org::openmdx::base::Context 
      
      Get rid of unused model classes such as
      * org::openmdx::base::Context
      * org::openmdx::base::ViewCapable
      but leave
      * org::openmdx::base::ContextCapable

      CR20019197
      org::openmdx::compatibility::datastore1  
      
      Get rid of unused model package
      * org::openmdx::compatibility::datastore1 
      
      
==============================================================================
Version 2.6.1                                                       2010-06-04
==============================================================================

1.    NEW FEATURES
      
      CR20019195
      JRE 5.0
      
      openMDX 2.6 is now JRE 5.0 enabled. 
      
      CR20019136
      JDO Data Store Cache
      
      The managed connection cache consists of the following three levels.
      The second level cache is automatically evicted after commit on any
      of its connections.
      
      1. BASIC (default for a data manager proxy's connections)
         
         The basic cache is required as it allows to sow virtual objects.
         
         * It is supported by the org.openmdx.base.accessor.rest.spi.BasicCache_2
           plug-in, which can be configured explicitly through the data manager's
           "cachePlugIn" property.
         * "timeToLive" defines the number of seconds between a caches last touch() 
            and its  expiration. The default value is 3600 seconds, a value less
            or equals to 0 inhibits expiration.
         * The "sowAllPattern"/"sowAllClass" configuration value pairs allow to
           define the object class for any matching pattern, i.e. a matching
           object id never leads to a NOT_FOUND exception.
        
      2. PINNING (default for a data manager's connections)
      
         Pinning can be configured either through configuration or through 
         the javax.jdo.datastore.DataStoreCache API,
         
         * It is supported by the org.openmdx.base.accessor.rest.spi.PinningCache_2
           plug-in, which can be configured explicitly through the data manager's
           cachePlugIn property.
         * Setting "pinningCacheFactory" to a non-null non-empty value overrides
           CacheManager.getCacheFactory()
         * Setting "pinningCacheName" to a non-null non-empty value forces the
           cache to be registered and shared by different data manager factories.
         * "pinningCacheConfiguration" defines an URL used to load the the properties
           to be passed to javax.cache.CacheFactory.createCache()
         * "pinId" proposes objects with the given id to be pinned
         * "pinAllPattern" proposes objects matching the given pattern to be pinned
         * "pinAllClass" proposes objects of the given class to be pinned
         * "pinAllType" proposes objects of the given class or any of its 
            subclasses to be pinned
         
      3. AUTOMATIC

         Automatic caching may be configured to cache any object.
                  
         * It is supported by the org.openmdx.base.accessor.rest.spi.AutomaticCache_2
           plug-in, which can be configured explicitly through the data manager's
           cachePlugIn property.
         * Setting "automaticCacheFactory" to a non-null non-empty value overrides
           CacheManager.getCacheFactory()
         * Setting "automaticCacheName" to a non-null non-empty value forces the
           cache to be registered and shared by different data manager factories.
         * "automaticCacheConfiguration" defines an URL used to load the the properties
           to be passed to javax.cache.CacheFactory.createCache()           

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019200
      container.isEmpty(
      
      The configuration value
      * MODEL/disableStateFilterSubstitution=(java.lang.Boolean)true
      has been replaced by
      * PERSISTENCE/disableStateFilterSubstitution=(java.lang.Boolean)true
            
      CR20019192 
      UnsupportedOperationException in JMI collection delegate calls 

      UnsupportedOperationException in JMI collection delegate calls shall be 
      mapped to InvalidCallException.       
      
      CR20019189
      RefQuery_1 mapping e
      
      Avoid static map by applying the standard mapping pattern.       
      
      CR20018664 	
      FilterProperty 
      
      FilterProperty & AttributeSpecifier are now used by dataprovider classes only.
      That's why they have been moved to the package
      org.openmdx.application.dataprovider.cci.
      
      CR20019186 	
      REST DELETE Request
      
      A DELETE request URL's query string shall be used as URL encoded REST 
      request in absence of a "Content-Type" header. 
       
      CR20019181 
      REST GET Request
      
      A GET request URL's query string shall be used as URL encoded REST 
      request in absence of a "Content-Type" header. 
      
2.1.  FIXED BUGS
     
      CR20019200
      container.isEmpty(
      
      Is sometimes true when it should be false.

      CR20019195
      Mix-in interfaces
      
      Mix-in interfaces had been swallowed by layers without aspect 
      implementations such as the sentinel layer.
      
      CR20019182
      equals() does not work 
      
      obectA.equals(objectB) returned false if objectA was retrieved by 
      persistenceManagerA and objectB by persistenceManagerB even if the 
      identities of obectA and objectB were equal. 

      Now the corresponding equal() method
      1. compares the object identities if both objects are persistent
      2. compares the transactional object identities if neither of the 
         two objects is persistent
      3. returns false otherwise
      
      CR20019188
      Simple Port Accept Header
      
      The Accept header must be set by the SimplePort.      
      
      CR20019186 	
      Simple Port MIME Type
      
      The Simple Port must support other MIME types beside its "text/xml" 
      default.
      
      
      A DELETE request URL's query string shall be used as URL encoded REST 
      request in absence of a "Content-Type" header. 

      CR20019183
      Cookie Manager
      
      Correct the cookie manager's behaviour in respect of "Cookie" and 
      "Cookie2" requests.
      
      CR20019184
      Special Characters In Path Segment 
      
      Correct the URLs containing Case-Exact-String-Subsegments which are used 
      when a qualifier contains such characters as '+'.
      
      CR20019164
      RestServlet throws NullPointer
      
      This request includes the following fixes:
      
      * MIME type extraction     
        The MIME type is now extracted from the content type in 
        ServletTarget.newWriter().
        RestFormat.getOutputFactory(mimeType) on the other hand expects to 
        receive a pure MIME type now. 
         
      * ServletResponse ContentType
        Include the character encoding in the servlet response's content type attribute 
       
      * HttpHeaderFieldValue
      
        The HttpHeaderFieldValue erroneously expects comma separated values to 
        be delivered in separate enumeration elements.        
      	
      CR20019180
      XMLOutputFactories
      
      XMLOutputFactories.isSupported() must use all configured MIME types.
      It must not be restricted to the already loaded classes.
      
      
      CR20019048
      VarableSizeMappedRecord
      
      VarableSizeMappedRecord is not de-serializable 
      
      The record's deserialized keys are not internalized, i.e. lookup fails. 
      
      CR20019179
      Cloned object is not flushable
      
      Missing flushable entries: 
      Transient multivalued attributes lack their corresponding flushable 
      entries. 
      
2.2.  DEPRECATED FEATURES

      CR0002764
      Filter Operators 
      
      Replace some generated short constant classes by enums:
      * Directions & Orders -> SortOrder
      * FilterOperators -> ConditionType
      
      The deprecated classes are moved to the package
      org.openmdx.application.dataprovider.cci.
      
2.3.  REMOVED FEATURES
      
      CR20019191
      org.w3c.cci2.MultivaluedTypeOrder
      
      Get rid of unsupported interface.
      
      CR20019190
      QuerySpec
      
      Get rid of the unused interface.

      
==============================================================================
Version 2.6.0                                                       2010-05-01
==============================================================================

1.    NEW FEATURES
      
      CR20019135
      Support for Eclipse EMF / UML2 Tools. openMDX models migrated to EMF / 
      UML2 Tools models. The .uml files are located in src/model/emf. Eclipse EMF
      replaces RSM as primary modeling tool for openMDX based applications.  

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019124
      REST Exceptions
      
      * A REST exception's stack trace is included even if it has to be 
        prepared.
      * Resource Exceptions are logged at Level.FINE.
        Internal Server Errors are logged at Level.SEVERE.
         
      CR20019076
      JDO callbacks 
      
      * All matching implementation classes are now taken into consideration 
        for lazy instantiation and feature dispatching, not only the most and 
        least derived ones.
      * Super-classes of matching implementation classes are excluded from the 
        set of classes to be potentially instantiated.
      * Callbacks are dispatched to all classes of this set implementing the
        given callback interface.
         
      CR20019122
      REST Servlet Behaviour
      
      * The REST Servlets default MIME type is "application/xml;charset=UTF-8".
      * CREATE and UPDATE reply objects are re-fetched after auto-commit. 
      
2.1.  FIXED BUGS
      
      CR20019123
      commit() behaviour 
      
      The unit of work of a persistence manager proxy re-orders persistent-new 
      objects before propagation if necessary.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      20019090
      Remove SLF4 from openMDX/Core 

      Remove SLF4J from
      * openMDX/Core
      * openMDX/Extension

      Restrict its usage to dependent projects such us
      * openMDX Thrirtparty OpenEJB
      * openMDX Platform OpenEJB 

      
==============================================================================
Version 2.5.4                                                       2010-03-12
==============================================================================

1.    NEW FEATURES

      CR20019036
      HttpClient 
      
      HttpClient and HttpCookie support added.
      
      openmdx-authentication has been been added.

      CR20019014
      Subclass selection 
      
      Support for a multi-valued OBJECT_INSTANCE_OF predicate.
      
      Usage:
      
            PropertyQuery query = (PropertyQuery) entityManager.newQuery(
                Property.class
            );
            PersistenceHelper.setClasses(
                query,
                IntegerProperty.class, DecimalProperty.class
            );
      
      
      CR20018984
      Entity Manager Proxy Factory 
      
      Provide an EJB independent Entity Manager Proxy Factory:
      org.openmdx.application.rest.spi.EntityManagerProxyFactory_2
      
      CR20018982 
      retainValues
      
      Support the retainValues flag.
      
      Transactional objects are
      * evicted after flush or commit if retainValues is false
      * not evicted after flush or commit if retainValues is true
       
      CR20018976
      Database: support for nested queries. Support for filter property values 
      of type org.openmdx.base.query.Filter. 
      
      CR20018820 	
      audit2
      
      Audit2 storing audit entries the same way as audit1 does.
      
      CR20018959
      Date/Time Precision
      
      The precision of timestamp fields may now be configured with the 
      dateTimePrecision option as
      * SECONDS
      * MILLISECONDS
      * MICROSECONDS (default)
      * NANOSECONDS     
      
      It is applied under the following conditions:
      * The protocol between PERSISTENCE and MODEL layer uses XML data types
      * the value refers to a time point after 1970-01-01T00:00:00Z
      * the column includes a timezone in case of write operations 
      
      CR20018955
      VirtualObjects_2
      
      The new plug-in is well known to Switch_1 as it provides virtual objects 
      on an object id base, overriding the ports configured for any matching 
      pattern.
      
      There are two ways to inject virtual objects:
      * as deployment configuration one can provide pattern/class pairs for 
        final classes
      * via the VirtualObjects_2_0.putSeed(Path,objectClass) method plug-ins 
        are able to inject objects at run-time
      
      The default configuration is

        <property 
        	name="org.openmdx.jdo.DataManager.virtualObjectPlugIn" 
        	value="org.openmdx.virtual.PlugIn"
        />
		<!-- ... -->
        <property 
        	name="org.openmdx.virtual.PlugIn.class" 
        	value="org.openmdx.base.accessor.rest.spi.VirtualObjects_2"
        />
        <property 
        	name="org.openmdx.virtual.PlugIn.finalPattern[0]" 
        	value="xri://@openmdx*($..)"
        />
        <property
        	name="org.openmdx.virtual.PlugIn.finalPattern[1]" 
        	value="xri://@openmdx*($..)/provider/($..)"
        />
        <prop20018969erty
        	name="org.openmdx.virtual.PlugIn.finalClass[0]"
        	value="org:openmdx:base:Authority"
        />
        <property
        	name="org.openmdx.virtual.PlugIn.finalClass[1]"
			value="org:openmdx:base:Provider"
		/>

      The VirtualObjects_2_0 instance is retrieved through

		VirtualObjects_2_0 virtualObjects = SharedObjects.getPlugInObject(
			persistenceManager, 
			VirtualObjects_2_0.class
		);
				
      CR20018905
      UUIDs
      
      The expression UUIDs.newUUID() is now preferred over 
      UUIDs.getGenerator().next() as the former one reuses thread local UUID
      generators while the latter one creates a new generator on each 
      invocation.
      
      CR20018820 	
      View Manager Plug-Ins 
      
      The view manager interceptors are now pluggable, e.g.
      
        <property 
        	name="org.openmdx.jdo.ViewManager.plugIn[0]" 
        	value="org.openmdx.base.PlugIn"
        />
        <property 
        	name="org.openmdx.jdo.ViewManager.plugIn[1]" 
        	value="org.openmdx.state2.PlugIn"
        />
        <property 
        	name="org.openmdx.state2.PlugIn.class" 
        	value="org.openmdx.state2.aop1.PlugIn_1"
        />
        <property 
        	name="org.openmdx.base.PlugIn.class" 
        	value="org.openmdx.base.aop1.PlugIn_1"
        />
      
      A singleton list with org.openmdx.base.aop1.StandardPlugIn_1 is used if 
      no plug-in is configured. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019064
      ResultRecord-Externalization
      
      org::openmdx::kernel::ResultRecord are implemented by the class 
      org.openmdx.base.rest.spi.ResultRecord and externalized with as
      application/vnd.openmdx.wbxml document.
      
      CR20018977
      Association Impl 
      
       The current approach to dispatch to an association implementation was 
       inconsistent:
       * overriding the getReference accessor was ignored by getObjectById calls  
            
      CR20018980
      Deprecated SparseList. Use List or SparseArray instead.
            
      CR20018924
      Database: optimize find(). Optimize find() in case multi-valued attributes 
      have to be returned. Multi-valued attributes are now retrieved from the 
      secondary table with one SELECT for all objects instead of one SELECT for
      each object.  
      
      CR20018820 	
      audit2 
      
      DataManager_2Bean no longer invokes setRollbackOnly() when execute()
      terminates with a ResourceException.
      
      It's up to the client whether the unit of work should be committed or
      rolled back.
      
2.1.  FIXED BUGS
      
      CR20018969
      SparseArray
      
      Store and retrieval was not erroneous.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none

      
==============================================================================
Version 2.5.3                                                       2009-10-23
==============================================================================

1.    NEW FEATURES
      
      CR20018820
      audit2
      
      The method 
      org.openmdx.base.persistence.cci.UserObjects.setTaskIdentifier
      is used to provide the task identifier for the org::openmdx::audit2
      sub-system.
      
        public static void setTaskIdentifier(
          PersistenceManager persistenceManager,
          Object taskIdentifier
        );
        
      If set the task identifier's toString() method is evaluated at the
      beginning of each unit of work.
      
      An application may therefore
      * either replace unmodifiable task identifiers (e.g. java.langString
        instances) to change the task id
      * or use a stateful task identifier providing the current task id each 
        time its toString() method is invoked  
       
      CR20018822 	
      XmlImporter / XmlExporter f�r openMDX 2
      
      Re-factored and aspect aware
      (to support org::openmdx::state2 for example).
      
      CR20018750
      getManagedObjects(). Implement DataObjectManager_1.getManagedObjects(...) 
      methods.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20018873
      OpenMDXSchemes
      
      This class has been removed.
      Its LEGACY_PREFIX field has been replaced by URI_1.OPENMDX_PREFIX.
      
      CR20018872
      Connection & Connection Factory
      
      The package org.openmdx.kernel.security.resource has been moved from
      openMDX/Core to openMDX/Security
      
      CR20018847
      JDO deleted state
      
      * JDO 2.2 says "Read access to primary key fields is permitted. Any 
        other access to persistent fields is not supported and might throw a 
        JDOUserException."
      * openMDX 2 shall not throw a JDOUserException when accessing other 
        fields in an optimistic unit of work.
      
      CR20018821
      XmlImporter / XmlExporter for openMDX 2
      
      org:w3c:date and org:w3c:dateTime values are no longer imported as 
      java.lang.String but as javax.xml.datatype.XMLGregorianCalendar and 
      java.util.Date respectively.
      
      org.openmdx.base.text.format.DateFormat's getInstance() methods are 
      replaced by org.openmdx.base.text.format.DateTimeFormat's<ul>
      * BASIC_UTC_FORMAT field
      * EXTENDED_UTC_FORMAT field
      * getInstance() method (for other formats)    
      
      CR20018826
      isEmpty
     
      isEmpty() should avoid delegating to size() if it can delegate to
      isEmpty().     
      
2.1.  FIXED BUGS
      
      CR20018875
      getObjectById returns null
      
      The PersistenceManager's getObjectById() method must not return null.
      
      It may
      * either return an instance
      * or throw an exception 
      
      CR20018846
      JDO life cycle
      
      deleted implies dirty 
      
      CR20018838 	
      A Container's Cardinality
      
      It depends on the container's state whether the predicate isEmpty() is 
      evaluated correctly. 
      
2.2.  DEPRECATED FEATURES

      CR20018821
      XmlImporter / XmlExporter for openMDX 2
      
      "resource:..." and "xri:+resource/..." URLs are deprecated in favour 
      of the XRI 2 URLs "xri://+resource/...".
      
      org.openmdx.base.text.format.DateFormat deprecated in favour of
      org.openmdx.base.text.format.DateTimeFormat
      
2.3.  REMOVED FEATURES

      CR20018873
      OpenMDXSchemes
      
      This class has been removed.
      
      CR20018870
      Dataprovider Transport
      
      Unreferenced classes removed:
      * Dataprovider_1ShareableConnectionHolder
      * Dataprovider_1ConnectionFactory
      * Dataprovider_1Connection
      
      CR20018869
      Abstract Session Bean
      
      Unreferenced package org.openmdx.application.ejb.spi removed.
      
      CR20018868
      Application Control
      
      Unreferenced package org.openmdx.application.control removed.
      
      CR20018867 
      Application Context
      
      Unreferenced class ApplicationContext_1_0 removed.
      
      CR20018866
      Dependencies
      
      Unreferenced Dependencies classes have been discarded.
       
      CR20018865
      State Transitions
      
      org.openmdx.base.concurrent.StateTransitions in openMDX/Core has been
      replaced by org.openmdx.security.auth.context.pool.StateTransitions in
      openMDX/Security.
       
      CR20018821
      XmlImporter / XmlExporter for openMDX 2

      * The package org.openmdx.application.dataprovider.exporter has been 
        removed.
            
      *  .../xmi/... schema paths are no longer mapped to the actual 
         .../xmi1/... schema paths.
      
      
==============================================================================
Version 2.5.2                                                       2009-09-14
==============================================================================

1.    NEW FEATURES

      CR20018768 
      refreshAll
      
      The PersistenceManager's refreshAll() methods have been implemented.  

      CR20018750
      getManagedObjects
      
      The PersistenceManager's getManagedObjects() methods have been 
      implemented.  
      
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20018800 	
      Deployment_1
      
      Deployment_1's default principal chain is now the user name as defined
      by the system property "user.name". 

      CR20018768 
      refresh
      
      refreshing an object invalidates its container's stored cache.
      
      The PersistenceManager's refreshAll methods have been implemented  
      
      CR20018789
      Support unmarshalling of micro second precision timestamps
      
      * Marshal micro seconds and nano seconds already present in an 
        XMLGregorianCalendar into an SQL Timestamp
      * Do not modify the unmarshal code at the moment.       

      CR20018742
      Aspect handling
      
      The getAspect() and getAspects() methods have been replaced by named
      queries.
      
      CR20018765
      Slice Cache
      
      Synchronize slice cache write operations only.
      
2.1.  FIXED BUGS
      
      CR20018800 	
      PersistenceManagerFactory
      
      An accessors persistence manager factory shall be set correctly.
      
      CR20018745
      Persistent-New Objects
      
      Persistent-new objects must be dirty from the beginning, even if no 
      attribute has been set yet 

      CR20018766
      object_class Filter 
      
      An object_class filter must not be treated the same way as an 
      object_instanceof filter. 
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20018767
      Lenient Access Modifier
      
      Get rid of the lenient access modifier support. 
      
      
==============================================================================
Version 2.5.1                                                       2009-07-22
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR10008700
      Database: improve case-insensitive search. UPPER(column) LIKE UPPER(?) 
      does not work for all databases. 
      
2.1.  FIXED BUGS
      
      CR20018720
      Datastore Commit Failure
      
      Correct JDO Exception:
      A datastore commit failure should raise a JDOFatalDataStoreEception or a 
      subclass thereof (e.g. JDOOptimisticVerificationException). 

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.5.0                                                       2009-06-16
==============================================================================

1.    NEW FEATURES

      CR20018712
      containsWildcard
      
      The method conainsWildcard() tests, whether the path contains a wildcard.
      It returns true if the path contains any of the following XRI cross references
      * $.
      * $..
      * $... 
      
      CR20018662
      SessionBean configuration. In addition to the deployment 
      descriptor env entries, session beans can be configured with the 
      META-INF/<namespace-id>.properties file. The properties override the
      properties defined as env entries.  

      CR20018666 
      Callbacks must be invoked for all dirty objects 
      
      Callbacks must be invoked for all dirty objects whether they are created 
      or fetched by the accessor or a plug-in.
      
      CR20018579
      LateBindingDataSource
      
      CR20018656
      BasicException
      
      Configure
      * exception mappers with openmdxExceptionMapper.properties files in the
        META-INF directory
      * exception domains with resource bundles in the 
        org.openmdx.exception.domain directory 
      
      CR20018649
      StandardFileHandler extends FileHandler
      
      The StandardFileHandler is able to stream throwables directly to the 
      underlying stream when using an AbstractFormatter sub-class telling that
      throwables remain to be processed. 
      
      The corresponding Java Logging compliant classes are:
      * org.openmdx.kernel.log.StandardFileHandler
      * org.openmdx.kernel.log.BasicFormatter
       
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20018660
      Transport API Unification. Migration to JCA-APIs using REST-based interactions. 

      CR20018701
      refMofId
      
      Current behaviour:
      * The refMofId is derived from the identity in case of ExtentCapable 
         classes unless the identity attribute is not yet loaded or null.
      * The refMofId is the objects XRI in all other cases.
      
      In future
      * shall the refMofId be the objects XRI in all cases
      * shall the identity attribute be used explicitely if its value is required.
      
      CR20018696 
      XRI support
      
      Get rid of openxri classes.
      Implement the required XRI 2 support natively.

      CR20018696 
      XRI 2 Marshaller
      
      Do not replace '=' signs by ':'. 
      
      Sub-segments with '=' signs will be transformed into case exact string 
      cross references. 
      
      CR20018674
      UID
      
      Use uppercase only
      
      A UID consists now of 25 digits based on base 36 encoding, while legacy
      UIDs consist of 22 digits based on base 64 encoding.
      
      The new encoding is as following:
      * Digit 0 contains sum of
            6 times (bits 1 to 63 divided by 36^12 plus 3 if bit 0 is set)
            bits 65 to 127 divided by 36^12 plus 3 if bit 64 is set
      * Digits 1 to 12 contain bits 1 to 63 modulo 36^12
      * Digits 13 to 24 contain bits 65 to 127 modulo 36^12

      Legacy UIDs may still be decoded but no longer encoded.
                  
      CR20018665
      Struct Marshalling
      
      Structures should have their proper persistence manager 
       
      CR20018660
      Authorization
      
      Provide the principal chain (a List<String>) instead of the principal set
      (a Set<? extends Principal>) as user object.
      
      CR20018579
      DbConnectionManager_1_0 & LateBindingDataSource
      
      DbConnectionManager_1_0 and its implementations replaced by LateBindingDataSource 
      
      CR20018657
      JPA3 warnings
      
      Correct the usage of
      * unchecked
      * cast
      * unused  
      
      CR20018653
      SLF4J 1.5.6
      
      * Support both singleton lookup mechanisms
      * Add "1.5.6" to its API compliance list  
      
2.1.  FIXED BUGS
      
      SF329844
      So I did a post with the following settings:  
      POST http://localhost:8080/opencrx-rest-CRX/org.opencrx.kernel.account1/provider/CRX/segment/Standard/account/7wmWgCjdEd6ri3Nu6Dapag/member 
      <?xml version="1.0"?> 
      <org.opencrx.kernel.account1.Member> 
        <name>MyName</name> 
        <account>xri://@openmdx*org.opencrx.kernel.account1/provider/CRX/segment/Standard/account/NI7XwEIBEd29BeMf4vj8cA</account> 
      </org.opencrx.kernel.account1.Member> 
      NI7XwEIBEd29BeMf4vj8cA should become a member of 7wmWgCjdEd6ri3Nu6Dapag. 
      Anyway, I get a server error, without using the account argument all is fine.
      
      CR20018668
      Large Object Update
      
      Large object updates are no longer ignored.  

2.2.  DEPRECATED FEATURES
      
      CR20018651
      Container.remove()
      
      This method should be deprecated for the following reasons:
      * container.remove(qualifier) does not what one expcects: It just returns 
        false because the container contains persistence capable objects and 
        not qualifiers
      * container.remove(object) should only be used to remove a transient 
        object from its container
       
      CR20018652
      RefObject_1_0.refAddValue(containerId, qualifier, object) 
      
      This method belongs no longer to the supported API

2.3.  REMOVED FEATURES
      
      CR20018718 	
      Replicating refMethods
      
      Get rid of refMethods replicating PersistenceManager functionality.
       
      CR20018712
      getUriReference
      
      The Path's getUriReference() method has been removed
      
      CR20018660
      Rest Connector
      
      The deprecated IndexedRecordFormatter and its format method have been removed.
      
      CR20018579
      DbConnectionManager_1_0 
      
      Get rid of DbConnectionManager_1_0 and its implementations.
      
      We can get rid of these implementations as xri://@openmdx*org.openmdx.deployment1 
      based clients are no longer supported. 
      
      CR20018656
      BasicException
      
      Got rid of ShortEnumeration and IntegerEnumeration 
      
      CR20018654
      SLF4J
      
      Dependency on SLF4J removed from openMDX.
      openMDX uses the plain Java Logging API.
               
==============================================================================
Version 2.4.1                                                       2009-04-02
==============================================================================

1.    NEW FEATURES
      
      CR20018634
      ResourceURLConnection's FileNotFound exception
      
      Include class loader information in case of URL class loaders. 
       
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
      CR20018633
      printStackTrace
      
      Only a BasicException's or BasicException.Wrapper's printStackTrace() 
      method did include the exception stack elements' attributes.

      A standard Throwable's printStackTrace() method should include this 
      information as well.  
      
2.1.  FIXED BUGS

      CR20018642
      Correct Include/Exclude Collections
      
      A persistent container's include/exclude collections are erroneous in a 
      multithreaded environment. 
      
      CR20018632
      XMIExternalizer
      
      The XMIExternalizer swallows fatal exception causes.
      
      The corresponding exception stack should be sent to both
      * System.err
      * the log
      
      CR20018628
      DataproviderObject class
      
      Object class and instance-of specifications are ignored unless the object 
      is populated with the attributes of another dataprovider object. 
       
      CR20018627
      BinaryLargeObject's OutputStream accessor
      
      The content can not be retrieved more than once 
       
      CR20018626	
      Wildcard Propagation
      
      LIKE "<prefix>." must be handled handled correctly.
      
      CR20018625
      ProviderCollection.clear()
      
      The ProviderCollection.clear() method is likely to fail with an element 
      not found exception unless its exact size is known.
      
      CR20018624
      PersistenceManager Method Delegation
      
      Some PersistenceManager methods are not delegated from the Object View to its
      Data Object instance.

      CR20018622	
      Rollback of persistent-new instances 
      
      Persistent new instances must become transient on rollback.  

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.4.0                                                       2009-02-28
==============================================================================

1.    NEW FEATURES
      
      CR20018509
      Optimistic Locking
      
      The MODEL/optimisticLocking configuration entry has now three possible
      values:
      * false
        disables optimistic locking
      * whenModified
        enables optimistic locking for modified objects
      * true
        enables optimistic locking even for unmodified objects
      
      CR20018534
      Replace JPOX by OpenJPA. The model mapper now generates JPA compliant
      persistence classes and a default persistence mapping (orm.xml). The
      JDO2 mapping is not supported anymore. The ant build-library provides
      the following targets:
      * enhance: enhances the classes listed in orm.xml
      * create-schema: orm.xml --> openjpa-schema.xml
      * create-sql: openjpa-schema --> sql build and upgrade script
      CR20018528
      library-directory 
                
      The lightweight container supports the library-directory entry in the
      application XML
      * no library-directory entry leads to the default value "lib"
      * an empty library-directory entry disables the library-directory 
        feature
      * a non-empty library-directory entry such as "APP-INF/lib" for example
        includes all files which are located in the given directory and end 
        with ".jar" in the application class path 
       
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
			CR10008387
			Migrate models to RSM 7.5.

      CR20018576
      JMI 1 v/s Standard Mapping
      
      The standard mapping differs in the following aspects from the 
      strict JMI 1 mapping:
      * Each upper case letter starts a new word
      * Underscores do not start a new word
      * Dollar signs behave the same way as digits
      
      CR20018534
      Replace JPOX by OpenJPA. The model mapper now generates JPA compliant
      persistence classes and a default persistence mapping (orm.xml). The
      JDO2 mapping is not supported anymore. The ant build-library provides
      the following targets:
      * enhance: enhances the classes listed in orm.xml
      * create-schema: orm.xml --> openjpa-schema.xml
      * create-sql: openjpa-schema --> sql build and upgrade script

      CR20018521
      NoClassDefFoundError in BasicException
      
      BasicException should not throw a NoClassDefFoundError if the J2EE 
      exception classes it refers to are not bundled with a client for example. 
      
2.1.  FIXED BUGS

      CR20018536
      Filter values for persistent-new objects
      
      Filter values (Path) are now able to match their persistent-new object's
      representation (Object_1_0) 

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.3.0                                                       2008-12-03
==============================================================================

1.    NEW FEATURES

      CR20018518
      Database: hint DBOBJECT. Hint DBOBJECT allows to qualify the dbobject 
      (table, view) used for queries. At least it should be possible to add a 
      suffix.
      
      CR20017901
      Cross Reference Support
      
      The flag PERSISTENCE/normalizeObjectIds enables cross-references.

      CR20017901
      Iterable path
      
      org.openmdx.compatibility.base.naming.Path instances are now Iterable.
      The iterator returns the path components' string representation.

      The method objGetResourceIdentifier() uses the XRI 2 format, i.e.
      xri://@openmdx*... as opposed to its former spice://... format. 
            
      CR20018102
      A PersistenceManager's Principals
      
      The user object with key 
      org.openmdx.base.persistence.cci.UserObjects.PRINCIPALS
      ("org.openmdx.security.principals") is of type
      Set<? extends Principals>.      
      
      CR20017901
      org::openmdx::state2
      
      The states' core class is a subclass of 
      org::openmdx::state2::StateCapable and has the following flags:
      * transactionTimeUnique
      * validTimeUnique
      
      An object is two dimensional if and only if both flags are off.
      
      CR20018001
      objGetIterable
      
      objGetIterable does not care whether a feature is multi-valued or single-valued. 
        
      CR20013920
      org::openmdx::state2 
      
      States are now supported as aspects.
      The are handled by an Object_1_0-Plug-In (as opposed to the former 
      Layer_1_0-Plug-In).
      
      CR20016601
      InteractionSepc support
      
      The ObjectFactory_1_x interfaces must be InteractionSepc aware.
      
      CR20017600
      REST servlet. The servlet allows REST based access to openMDX providers.
      
			Object creation                                                                                                     
			  Method: POST
			  Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/account			
			  Body:			
					<?xml version="1.0"?>
					<org.openmdx.workshop1.Contact>
						<lastName>REST</lastName>
						<firstName>Test #1</firstName>
					</org.openmdx.workshop1.Contact>
			
			Object Retrievals                                                                                                                           
			  Method: GET
			  Urls:
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/extent?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=identity().like("xri://@openmdx*org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/%25");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=modifiedAt().between(:datetime:20080101T000000.000Z,:datetime:20081001T000000.000Z);orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=modifiedAt().greaterThan(:datetime:20080101T000000.000Z);orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsModifiedAt().greaterThan(:date:2008-01-01);orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().like("D%25, Joe");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().elementOf("Joe", "Guest");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().equalTo("Guest");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().equalTo("Guest")
			
			Object modification                                                                                                                        
				Method: PUT			
				Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/2YlAOJYlEd2Y4zv65ePspg
				Body:			
					<?xml version="1.0"?>
					<org.openmdx.workshop1.Contact>
						<name>Joe</name>
					</org.openmdx.workshop1.Contact>
			
			Operation Invocation                                                                                                             
				Method: POST			
				Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/task/T1/assignTeamMember			
				Body:			
					<?xml version="1.0"?>
					<org.openmdx.workshop1.AssignTeamMemberParams>
						<memberRole>1</memberRole	>
						<teamMember>xri://@openmdx*org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/2YlAOJYlEd2Y4zv65ePspg</teamMember>
					</org.openmdx.workshop1.AssignTeamMemberParams>
			
			Object Deletion         
				Method: DELETE		
				Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/2YlAOJYlEd2Y4zv65ePspg
                 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
      CR20018512
      combinedInterfaces
      
      The argument of the method combinedInterfaces in the class
      org.openmdx.compatibility.kernel.application.cci.Classes is now of type
      Class<?> (as opposed to its former Object type).
      
      I.e. you have to replace invocations such as 
        Classes.combinedInterfaces(object, prepend0, prepend1)
      by 
        Classes.combinedInterfaces(object.getClass(), prepend0, prepend1)
      
      
      CR20013920
      state1 segment

      The class org::opemndx::compatibility::state1::Segment is no longer
      abstract nor has it the stereotype «root» anymore as it is now a 
      subclass of org::openmdx::base::Segment.

     
      CR20013920
      extent's qualifier

      The qualifier for org::openmdx::base::Segment::extent is now of type org::oasis-open::xri 
      (as opposed to its former org::w3c::anyURI type).

      CR20017901
      Resource Identifier

      The standard resource identifier format is the XRI 2 format.
      * It is used by Object_1_0's method objGetResourceIdentifier(), i.e.
        xri://@openmdx*... as opposed to its former spice://... format.
      * It is used by the ExtentCapable's feature identity as well.
        The identity is now non-null for new objects.
      * It can be retrieved by the Path's toResourceIdentifier() method.           
            
      CR20017901  
      Stop watch
      
      StopWatch_1_0 and StopWatch_1 moved into the package
      org.openmdx.compatibility.base.dataprovider.exporter as they are not 
      used anywhere else.
      
      
      CR20018001
      ObjectFilter_1 
      
      ObjectFilter_1 uses objGetIterable (as opposed to its former '?' + attributeName
      request.       
        
      CR20013920 	
      org::openmdx::state2
      
      org::openmdx::compatibiliy::state1::DateState is now a sub-class of
      org::openmdx::state2::DateState
      
      CR20017502
      System Attribute Handling
      
      Moved from Plug-in to Object_1_0.
      
      The handling for the following classes and attributes is now a core feature:
      * org::openmdx::base::Creatable
          o createdAt
          o createdBy 
      * org::openmdx::base::Modifiable
          o modifiedAt
          o modifiedBy 
      * org::openmdx::base::Removable
          o removedAt
          o removedBy 
             
2.1.  FIXED BUGS

      CR20017903
      "Normalized" Durations lead to Oracle SQL Failure 
      
      Durations are normalized to years/months and hours/minutes/seconds (as 
      opposed to the former months and seconds normalization).
      
      CR20017001
      Improved exception handling

      The exception stack was printed bottom up instead of top down.
      
      CR10008226
      PIGGY_BACK filter property values
      
      Multivalued values are not passed as Object[] but as Object[][].
      
      CR20016300
      Escape wildcard characters in RIDs 
      
      Escape SQL wildcard characters for LIKE predicates with RIDs.
      Indices will be useful even if the RID contains '_', '%' or '\\'.

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES

      CR20018411
      Remove datastore1 model and corresponding implementations.
      
      CR20018410
      Remove deployment1 model and corresponding implementations.
      
      CR20018409
      Remove filter1 model.
      
      CR20018408
      Remove runtime1 model and corresponding implementations.
      
      CR20018200
      Deprecate openMDX 1 JMI mapping.
      
      CR20017901  
      org::openmdx::compatibility:role1
      
      The role1 plug-in and its associated tree watch classes have
      been removed.

      CR20018100
      Unit Of Work Local User Object 
      
      * Remove RefRootPackage_1's deprecated constructors
      * Remove CCI1_PACKAGE_SUFFIX references and all methods and constructors
        relaying on it
      * Remove deprecated package org.openmdx.base.object.jdo
      * Remove "throw not found if null" support from RefRootPackage_1  
      * Remove refUseOpenMdx1ImplLookup() support
      
      CR20017901
      org::openmdx::compatibility::state1
      
      The class following classes have been removed:
      * org::openmdx::compatibility::state1::ValidState
      * org::openmdx::compatibility::state1::StateCapable
      * org::openmdx::compatibility::state1::StateIncapable
      
      CR20013920
      org::openmdx::compatibility::state1 
 
      state1's Object_1_0 views and the Layer_1_0-Plug-Ins have been removed.
      
      CR20016210
      jmi1 replaces cci 
      
      Discontinue legacy API generation
      
      CR20013920 	
      org::openmdx::compatibility::state1
      
      The following classes have been removed:
      * org::openmdx::compatibiliy::state1::DateStateExcludingEnd
      * org::openmdx::compatibiliy::state1::DateTimeState
            
      CR20017503
      USE_OBJECT_IDENTITY_HINT 
      
      Discontinue USE_OBJECT_IDENTITY_HINT support,
      i.e. reference names must no longer end with the suffix ";use=identity".
      
      CR20017501
      Placeholders
      
      Discontinue support for placeholders as path element,
      i.e. each object's identity is fixed as soon as it is made persistent. 
      It can't be changed by a server-side plug-in any more.       
      
      
==============================================================================
Version 2.2.1                                                      2008-10-14
==============================================================================

1.    NEW FEATURES

      CR20017401
      LoginTimeout 
      
      The default login timeout is overridden by a non-0 LoginTimeout 
      config-property entry:

         <config-property>
	       <config-property-name>LoginTimeout</config-property-name>
	       <config-property-type>java.lang.Long</config-property-type>
	       <config-property-value>2000</config-property-value>
         </config-property>
            
      CR220017300
      Lightweight Container DataSource
      
      Keep Alive Support:
      
      * Add pool configuration to openmdx-connector, e.g.
       
         <!DOCTYPE 
           openmdx-connector 
           PUBLIC "-//openMDX//DTD Connector Extension 1.1//EN" 
           "http://www.openmdx.org/dtd/openmdx-connector_1_1.dtd"
         >
         <openmdx-connector>
	       <resourceadapter>
		     <connectionfactory-jndi-name>jdbc/dataproviders</connectionfactory-jndi-name>
		     <pool>
		       <maximum-idle>-1</maximum-idle>
		       <time-between-eviction-runs>100</time-between-eviction-runs>
			   <test-while-idle>true</test-while-idle>
		     </pool>
	       </resourceadapter>
         </openmdx-connector>
        
      * Add validation statement to connector, e.g.
      
          <config-property>
            <config-property-name>ValidationStatement</config-property-name>
            <config-property-type>java.lang.String</config-property-type>
            <config-property-value>SELECT GETDATE()</config-property-value>
          </config-property>

      CR20016204 	
      newQuery
      
      PersistenceManager.newQuery(Class) is now supported and returns a standard
      cci2 Query object.

      * Usage:
      
        Query query = persistenceManager.newQuery(InvoicePosition.class);
        InvoicePositionQuery invoicePositionQuery = (InvoicePositionQuery) query;
        // define the predicate with the help of invoicePositionQuery's methods
        query.setCandidates(container);                
        List<InvoicePosition> invoicePositions = (List<InvoicePosition>) query.execute();
      
      CR20016208
      DatatypeFactories
      
      Provide two static accessors for
      * an xmlDatatypeFactory()
      * an immutableDatatypeFactory() 
      
      CR20016208
      Immutable Datatype Factory 
      
      Support the following datatypes
      * Immutable Date instances
      * Immutable DateTime instances
      * Normalized Duration instances
      
      Note:
      * an ImmutableDate instance is a subclass of XMLGregorianCalendar such 
        as XMLGregorianCalendarImpl
          o a clone of an ImmutableDate instance is an XMLGregorianCalendarImpl
          o an XMLGregorianCalendarImpl instance may be passed as argument to 
            an ImmutableDate instance
          o an ImmutableDate instance must not be passed as argument to an 
            XMLGregorianCalendarImpl instance
          o a clone of an ImmutableDate instance may be passed as argument to 
          an XMLGregorianCalendarImpl instance as it is itself an 
          XMLGregorianCalendarImpl instance. 
      * an ImmutableDateTime instance is a subclass of java.util.Date
          o a clone of an ImmutableDateTime instance is a java.util.Date 
            instance.
          o an ImmutableDateTime instance may be passed as an argument to a 
            java.util.Date instance
          o a java.util.Date instance may be passed as an argument to am 
            ImmutableDateTime instance 
      * All fields of a normalized Duration except the following ones are null
          o sign
          o months
          o seconds 
            
      CR20015500
      ServiceException & RuntimeServiceException Constructors      
      BasicException.Parameter... arguments may be put at the end of the 
      argument list.
        
      CR20013920
      base & state2
      
      The following model classes have been added
      * org::openmdx::base::Creatable 
      * org::openmdx::base::Modifiable
      * org::openmdx::base::Removable
      * org::openmdx::base::Aspect 
      * org::openmdx::state2::BasicState
      * org::openmdx::state2::DateState
      * org::openmdx::state2::DateTimeState
      
      CR20013920
      Deployment_1
      
      The class org.openmdx.compatibility.base.application.cci.Deployment_1
      simplifies JUnit set-up.
           
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20017001
      Improved exception handling

      * BasicException.Wrapper implementations use their Throwable's cause
        as BasicException holder, as opposed to their former exceptionStack member.
      * BasicExcpetions use a StackTraceElements[] member as opposed to their
        former String[], className, methodName and lineNr members.
      
      That's why their serialVersionUID has changed.
      
      CR20016209
      Immutable Datatypes
      
      The Object_1_0 API should use immutable datatype instances instead of 
      their string representation to avoid repeated parsing. 
      
      CR20016103
      PersistenceManagerFactory
      
      The PersistenceManagerFactory shall keep week references only to its 
      PersistenceManagers
       
      CR20013920
      ObjectFactory 1 API
      
      The following method has been added to the object factory 1.1 API:
      * Object_1_0 createAspect(
          String objectClass,
          Object_1_0 aspectCapable
        ) throws ServiceException;
      
      CR20013920
      JMI Context container
      
      contextCapable.refGetValue(SystemAttributes.CONTEXT_CAPABLE_CONTEXT)
      
2.1.  FIXED BUGS

      CR20016600
      evictAll
      
      Separate evictAll() from clear() 
      
      CR20016204 	
      Query Handler
      
      Some incorrect predicate build rules have been corrected.
      
      CR20016202
      XRI URL Handler
      
      Parse correctly according to the chapter "Relative XRI References" in
      
        OASIS
        Extensible Resource Identifier (XRI) Syntax V2.0
        Committee Specification, 14 November 2005
        (http://docs.oasis-open.org/xri/V2.0)
            
      CR20015902
      refRemove
      
      NullPointerException in case of non-existent entry.
      
      refRemove should silently return instead of throwing a NullPointerException.

2.2.  DEPRECATED FEATURES

      CR20017001
      Improved exception handling

      * BasicException.Wrapper.getExceptionStack() has been deprecated in favour
        of BasicException.Wrapper.getCause()

      CR20013920
      ObjectFactory 1 API
      
      The following Object Factory 1 methods have been deprecated and
      throw a NOT_SUPPORTED ServiceException upon invocation:
      * createObject() for views
      * createObject() for roles

2.3.  REMOVED FEATURES
      
      CR20013920
      view1 & state1
      
      The following compatibility mode model packages have been removed:
      * org::openmdx::compatibility::view1
      * org::openmdx::compatibility::role1 
      
      CR20013920
      Object Cloning
      
      * The class org.openmdx.base.accessor.jmi.spi.CloneObject_1 has been 
        removed.
      * The method refCloneObject has been removed from the RefPackage 1.2 API.
        
      CR20013920
      JMI
      
      openMDX 1's JMI mapping (in the .cci sub-package) has been removed in 
      favour of openMDX 2's JMI mapping (in the .jmi1 sub-package).
       
      CR20016208
      Immutable Datatype Factory 

      The deprecated class org.openmdx.base.time.Duration has been removed.
      
      CR20016208
      DateFormat
      
      The deprecated public constructor has been made private in favour of
      the corresponding static factory method.

      CR20017001
      Improved exception handling
      
      The following deprecated classes have been removed:
      * org.openmdx.compatibility.base.exception.Assertions
      * org.openmdx.compatibility.base.exception.CommonExceptionCodes
      * org.openmdx.compatibility.base.exception.CommonExceptions
      * org.openmdx.compatibility.base.dataprovider.cci.DataproviderExceptions
      
      The following class has been removed:
      * org.openmdx.compatibility.base.exception.StackedException

      The following deprecated method has been removed:
      * The method getStackedException() in the classes implementing
        org.openmdx.kernel.exception.BasicException.Wrapper.
      
==============================================================================
Version 2.2.0                                                       2008-09-10
==============================================================================

1.    NEW FEATURES
      
      CR20015500
      ServiceException & RuntimeServiceException Constructors
      
      BasicException.Paramter... arguments may be put at the end of the 
      argument list.
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20015400
      Optimize Path. Do not use String[].
      
      CR20015500
      Minimize use of new Object[]. Minimize allocation of Object arrays.
      
      CR20015600
      ObjectFactory_1_0.getUnitOfWork
      
      Change the behaviour when the object factory is closed.
      
      Throw an ILLEGAL_STATE ServiceException instead of returning null when 
      the object factory is closed. 
       
      CR20014301
      Read committed only 
      
      * Goal
        The prefix '^' for Object_1_0's feature names excludes transient 
        values from being returned.
      * Implementation
        Only commited values are visible to by Transactional Object 1.0 
        implementations. 

      20013949
      Optimized EJB Remote Invocations 

      * Strings and Numbers are no longer serialized and deserialized during
        intra-VM remote method invocations.
      * The byte arrays used for serialization and deserialization are
        re-used on a thread basis. 
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      
      CR20015500
      Dataprovider_1TracingBean
      
      The Dataprovider_1TracingBean has been deprecated because the Dataprovider_1Bean
      logs requests and replies at the same level (the debug level, formerly known as
      detail level)      

2.3.  REMOVED FEATURES
      
      CR20015500
      MappedRecordFormatter
      
      The deprecated class MappedRecordFormatter has been removed.

      CR20015500
      InProcessDeployment
      
      The deprecated class 
      org.openmdx.kernel.application.client.InProcessDeployment has been removed.
      
      CR20015601
      PersistenceCapable_1_1
      
      Unused interface 
      org.openmdx.base.accessor.generic.spi.PersistenceCapable_1_1 removed.
      

==============================================================================
Version 2.1.0                                                       2008-07-10
==============================================================================

1.    NEW FEATURES

      CR20012701
      DBOSlicedWithIdAsKey: add option org.openmdx.persistence.jdbc.useLikeForOidMatching.
      Option allows to configure whether to use LIKE or <> operators to filter oid patterns.      
      
      CR20012403
      Add Plug-In Configuration To EntityManager
      
      The content of package
      * org.openmdx.kernel.persistence.spi 
      has been merged into
      * org.openmdx.base.persistence.spi 
            
      An entity manager factory configuration could look like this:
			<env-entry>
				<env-entry-name>EntityManager/plugIn[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>App1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:app1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/packageImpl[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.standard</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/packageImpl[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.base.aop2.standard</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/userObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>PriceCalculator</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/PriceCalculator/class</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.standard.PriceCalculator</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/PriceCalculator/duration</env-entry-name>
				<env-entry-type>java.lang.Long</env-entry-type>
				<env-entry-value>1000</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/userObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>SharedConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/SharedConfiguration/class</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.aop2.standard.SharedConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/SharedConfiguration/example</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>an entity manager scoped configuration value</env-entry-value>
			</env-entry>

      A persistence manager factory configuration supports LegacyPlugIn only at the moment:
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:app1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/packageImpl[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.legacy</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/userObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>LegacyConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/LegacyConfiguration/class</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.legacy.LegacyConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/LegacyConfiguration/example</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>a legacy plug-in scoped configuration value</env-entry-value>
			</env-entry>
            
      CR20011100
      Optimistic_1Bean

      Typical configuration entries for the gateway-Managing EJB are:

        <ejb-name>gateway1-Managing</ejb-name>
        <home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1Home</home>
        <remote>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Remote</remote>
        <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
        <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
        <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.transaction.Optimistic_1Bean</ejb-class>
        <session-type>Stateless</session-type>
        <transaction-type>Bean</transaction-type>
        [...]
        <env-entry>
          <env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Entity_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/TYPE</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.type.Standard_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/APPLICATION</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.spi.Layer_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/MODEL</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.spi.Layer_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.delegation.Entity_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>APPLICATION/disableRouter</env-entry-name>
          <env-entry-type>java.lang.Boolean</env-entry-type>
          <env-entry-value>true</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>PERSISTENCE/retrievalSize</env-entry-name>
          <env-entry-type>java.lang.Integer</env-entry-type>
          <env-entry-value>1000</env-entry-value>
        </env-entry>

      CR20012101
      Database: add DBOSlicedWithParentAndIdAsKey. Add DBO which supports 
      composed primary key (parent, qualifier, type).
      
      CR20011800
      Database: support added for HSQLDB 1.8.
      
      CR20010702 
      CCI2 Container interface 
      
      public interface <associationName> {
        public interface <referenceName> extends org.w3c.cci2.Container<E> {
          void add(
             org.oasisopen.cci2.QualifierType <qualifierName>Type,
             <qualifierType> <qualifierName>,
             E <referenceName>
          );       
          E get(
            org.oasisopen.cci2.QualifierType <qualifierName>Type,
            <qualifierType> <qualifierName>
          );
          void remove(
             org.oasisopen.cci2.QualifierType <qualifierName>Type,
            <qualifierType> <qualifierName>
          );
        }
      }
      
      public interface Container<E> extends Collection<E> {
        List<E> getAll(
          AnyTypePredicate predicate
        );
        void removeAll(
          AnyTypePredicate predicate
        );
      }
      
      CR20010702 
      CCI2 Container interface 

      The interface is implemented by the proxy class only:

      /**
       * RefContainer
       */
      public interface RefContainer {
      
        /**
         * Adds an object to the container
         * 
         * @param arguments there is always an odd number of arguments:
         * ((REASSIGNABLE|PERSISTENT) identifier)+ value
         */
        void refAdd(
          Object... arguments 
        );
    
        /**
         * Retrieves an object from the container
         * 
         * @param arguments there is always an even number of arguments:
         * ((REASSIGNABLE|PERSISTENT) identifier)+
         * 
         * @return the object
         */
        Object refGet(
          Object... arguments 
        );
        
        /**
         * Removes an object from the container
         * 
         * @param arguments there is always an even number of arguments:
         * ((REASSIGNABLE|PERSISTENT) identifier)+
         */
        void refRemove(
          Object... arguments 
        );
        
        /**
         * Precedes a persistent sub-segment.
         */
        Object PERSISTENT = QualifierType.PERSISTENT;
    
        /**
         * Precedes re-assignable sub-segment.
         */
        Object REASSIGABLE = QualifierType.REASSIGNABLE;

        /**
         * Executes a query 
         * 
         * @param query
         * 
         * @return the result
         */
        List<?> refGetAll(
            Object query
        );
    
        /**
         * Executes a query 
         * 
         * @param query
         * 
         * @return the result
         */
        List<?> refRemoveAll(
           Object query
        );

      }

      
      CR20010001
      SLF4J logging
      
      openMDX 2's logging API is org.slf4j
      
      A configuration such as
      
        # Example Log Properties
        handlers= java.util.logging.FileHandler
        java.util.logging.FileHandler.level = INFO
        java.util.logging.FileHandler.pattern = %t/junit.%u.log
        java.util.logging.FileHandler.formatter = org.openmdx.kernel.log.ClassicFormatter
      
      leads to a JDK-log file similar to openMDX/1's log files with the 
      following main differences
      * The initial line declaring fields missing.
      * The date/time field is in extended ISO format, i.e. it includes the 
        characters 'T' and 'Z'.
      * SysLog's and AppLog's logsource field is not at openMDX/1's default 
        place but just before the message field.
      * The thread field contains the log thread id (a number starting with 10) 
        as opposed to the thread's id or name
      * The line number field is missing.

      CR20009700 
      TransactionSynchronizationRegistry 
      
      The LightweightContainer supports the TransactionSynchronizationRegistry
      as defined by JTA 1.1 and Java EE 5 respectively. 
        
      CR20007105
      CollectionMarshaller
      
      The org.openmdx.base.persistence.spi.Marshaller interface with its 
      unmarshal() method throwing now an IllegalArgumentException in case of
      failure replaces the org.openmdx.base.collection.CollectionMarshaller 
      interface with its unmarshal() method throwing a ServiceException in 
      case of failure. 

      CR20007105
      Gateway as PersistenceManagerFactory

      The PersistenceManagerConnectionFactory is formally declared as an EJB 
      reference in the web.xml:
      
        <ejb-local-ref id="ejb_gateway">
		  <ejb-ref-name>ejb/gateway</ejb-ref-name>
          <ejb-ref-type>Session</ejb-ref-type>
          <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
          <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_2Local</local>
          <ejb-link>test-gateway.jar#gateway-Mandatory</ejb-link>
        </ejb-local-ref>

      The PersistenceManagerFactory is formally declared as resource environment
      reference in the web.xml:
      
        <resource-env-ref id="jdo_gateway">
          <description>JDO Reference to the application's persistence manager factory</description>
          <resource-env-ref-name>persistence/gateway</resource-env-ref-name>
          <resource-env-ref-type>javax.jdo.PersistenceManagerFactory</resource-env-ref-type>
        </resource-env-ref>

      It is resolved in the Tomcat's context XML
      
        <Resource
          name="persistence/gateway"
          auth="Container"
          type="javax.jdo.PersistenceManagerFactory"
          factory="org.openmdx.base.persistence.tomcat.AccessorFactoryBuilder"
          AccessorFactoryClass="org.openmdx.base.accessor.jmi1.AccessorFactory_2"
        />

      The persistence manager factory is then acquired like that:
      
        public void init(
        ) throws ServletException {
          this.persistenceManagerFactory = JDOHelper.getPersistenceManagerFactory(
            "java:comp/env/persistence/gateway",
            (Context)null
          );
        }

      The changes to the gateway EJB are as following:
      
        <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_2Local</local>
        <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Gateway_1Bean</ejb-class>
     
        <env-entry>
          <env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.runtime1.layer.interception.EntityProviderLayer_1</env-entry-value>
        </env-entry>

        <assembly-descriptor>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>process</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>createEntityManager</method-name>
            </method>
            <trans-attribute>Never</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>createEntityProvider</method-name>
            </method>
            <trans-attribute>Never</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>commit</method-name>
            </method>
            <trans-attribute>RequiresNew</trans-attribute>
          </container-transaction>
        </assembly-descriptor>

      The changes to the provider EJBs are as following:

        <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_1Local</local>
     
        <assembly-descriptor>
          <container-transaction>
            <method>
              <ejb-name>clock-1</ejb-name>
              <method-name>process</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>clock-1</ejb-name>
              <method-name>createEntityProvider</method-name>
            </method>
            <trans-attribute>Never</trans-attribute>
          </container-transaction>
        </assembly-descriptor>
     
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20012707
      ManagerFactory/DataProvider
            
      EJB Interface & Bean Configuration
      * DataProvider EJB Configuration
          <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
	      <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
	      <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
      * Entity Manager Factory EJB Configuration 
          <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.EntityManagerFactory_2LocalHome</local-home>
	      <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.EntityManagerFactory_2_0Local</local>
	      <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.EntityManagerFactory_2Bean</ejb-class>
      * Gateway EJB Configuration
          <ejb-name>Gateway</ejb-name>
	      <home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1Home</home>
	      <remote>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Remote</remote>
	      <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
	      <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
	      <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.transaction.Gateway_1Bean</ejb-class>                
       
      CR20011701 
      The predicates' equals() methods
       
      Deprecate the predicates' equals() methods to avoid its erroneous use 
      in lieu of equalTo().
       
      CR20010001
      openMDX/Log

      openMDX 1' logging API (SysLog & Applog):
      * openMDX 1's logging API (org.openmdx.kernel.SysLog and 
        org.openmdx.application.log.AppLog) delegates to SLF4J now.
      * openMDX 1's logging implementation has been moved to 
        org.openmdx.compatibility.kernel.SysLog and 
        org.openmdx.compatibility.application.log.AppLog. 
        It is activated by adding slf4j-openmdx1.jar to the same classloader 
        as openmdx-kernel.jar. 

      CR20009904 
      PersistenceManager in JBoss
      
      The javax/jdo classes have been moved from openmdx-base.jar to
      openmdx-kernel.jar.      
      
2.1.  FIXED BUGS
      
      CR20010802
      StateQuery
      
      Un-escape attribute filter values when replacing IS_LIKE by IS_IN.       

      CR20011501
      Plugin_1's total reply leads to iteration 
      
      Recounting must be avoided.
      
      CR20010003
      DataproviderObject.values() returns null. DataproviderObject.values() 
      must return a non-null SparseList<Object>. In case of multiple threads, 
      the current implementation may return null. DataproviderObject must be 
      thread-safe because it is used in the Model_1 repository. 

2.2.  DEPRECATED FEATURES
      
      CR20008100
      RefObjectFactory_1
      
      The class org.openmdx.base.accessor.jmi.cci.RefObjectFactory_1 has been
      deprecated as it is used by test programs only.

2.3.  REMOVED FEATURES
      
      CR20008100
      Application_1_0 & ApplicationController_1_0
      
      The deprecated classes Application_1_0 and ApplicationController_1_0 in
      the package org.openmdx.compatibility.base.application.control
      have been removed.

      CR20008100
      InProcessDataproviderConnectionFactory
      
      The deprecated class InProcessDataproviderConnectionFactory
      in package org.openmdx.compatibility.base.application.cci has been
      removed.

      CR20008100
      InstanceCallbacks_1_0 & InstanceCallbackAdapter
      
      The deprecated interface InstanceCallbacks_1_0 in package
      org.openmdx.compatibility.base.accessor.object.cci and the deprecated
      class InstanceCallbackAdapter in package 
      org.openmdx.compatibility.base.accessor.object.spi have been removed.
            
            
==============================================================================
Version 2.0.0                                                       2008-02-22
==============================================================================

1.    NEW FEATURES

      CR20009101
      Structures
      
      cci2 structure interfaces are amended by an enumeration Member 
      representing its members.
      
      cci2 structures may be initialized by their member's name or position
      using the factory org.w3c.cci2.Datatypes: 
	  * PasswordChangeParams namedAssociation = Datatypes.create(
          PasswordChangeParams.class, 
          Datatypes.member(PasswordChangeParams.Member.password, new byte[]{'n','e','w'}),
          Datatypes.member(PasswordChangeParams.Member.oldPassword, new byte[]{'o','l','d'})
        );
      * PasswordChangeParams positionalAssociation = Datatypes.create(
          PasswordChangeParams.class, 
          new byte[]{'o','l','d'}, // oldPassword
          new byte[]{'n','e','w'} // password
        );
      
      CR20007105
      SparseArray
      
      * The sparse array interface org.w3c.cci2.SparseArray replaces
        org.openmdx.base.collection.SparseArray.
      * org.openmdx.base.collection.TreeSparseArray is a TreeMap base
        org.w3c.cci2.SparseArray implementation.   

      CR20007302
      Tomcat/Embedded Lightweight Container
      
      Allow the Lightweight Container to be launched in Tomcat. 
      This way openMDX based applications can be run in Tomcat without the
      need of an application server.

      CR20007901
      verifyObject
      
      The model API should provider another verifyObject() method in order
      to fulfil the following requirements:
      * accept DataproviderObject_1_0 instances 
        (as opposed to DataproviderObject instances) 
      * allow to disable derived attribute validation 

      CR20007525
      OperationAwarePlugin_1. Plugin which allows to dispatch Layer_1_0 operation 
      requests to ObjectFactory_1_0 object request. Plugin_1 extends 
      OperationAwarePlugin_1 and dispatches all Layer_1_0 requests.
      
      CR20006351
      Add jmi1/cci2 binding implementation. The bindings are implemented as 
      dynamic proxies which delegate to the existing accessor.jmi implementation.
      
      CR20007302
      Run LWC in Tomcat
      
      Introduce openmdx-launcher.jar including
      * org.apache.naming
      
      CR20007500
      Cache emptying
      
      RefPackage_1_3.clear() allows to the clear the cache.
      
      CR20007301
      openmdx-system.jar
      
      Contains the classes which must really be in the system class  
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20009001
      Runtime Exceptions
      
      Dataprovider_1RemoteConnection's ejbObject-Member should be released
      in case of any RemoteException, not only for retriable ones.            
      
      CR20007105
      List Classes
      
      The following list classes have been removed from
      org.openmdx.base.collection and added to
      org.openmdx.compatibility.base.collection: 
      * AbstractFilteringList
      * AbstractListIterator
      * ChainingList
      * FilteringList
      * MergingList

      CR20007105
      Sparse Array Classes
      
      The following org.openmdx.base.collection.SparseArray based
      classes have been removed from org.openmdx.base.collection 
      and added to org.openmdx.compatibility.base.collection: 
      * org.openmdx.base.collection.SparseArray
      * org.openmdx.base.collection.PopulationIterator
      * org.openmdx.base.collection.AbstractSparseArray
      * org.openmdx.base.collection.TreeSparseArray
      * org.openmdx.base.collection.MarshallingSparseArray
      
      CR20007302
      Replacement of deprecated deployment option
      
      The following classes use now Enterprise Application and Resource 
      Archives instead of depoloyment configuration files:
      * org.openmdx.compatibility.base.dataprovider.replication.ExportXml
      * org.openmdx.compatibility.base.dataprovider.replication.ImportXml
      * org.openmdx.compatibility.base.dataprovider.replication.Replicate 
      
      That's why two command line arguments "connector" and "application"
      have been added.
      
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES

      CR20007105
      List Classes
      
      The following list classes have been removed from
      org.openmdx.base.collection and added to
      org.openmdx.compatibility.base.collection 
      * AbstractFilteringList
      * AbstractListIterator
      * ChainingList
      * FilteringList
      * MergingList

      CR20007105
      Sparse Array Classes
      
      The following org.openmdx.base.collection.SparseArray based
      classes have been removed from org.openmdx.base.collection 
      and added to org.openmdx.compatibility.base.collection: 
      * org.openmdx.base.collection.SparseArray
      * org.openmdx.base.collection.PopulationIterator
      * org.openmdx.base.collection.AbstractSparseArray
      * org.openmdx.base.collection.TreeSparseArray
      * org.openmdx.base.collection.MarshallingSparseArray
      
      CR20007105
      CollectionMarshaller
      
      The org.openmdx.base.collection.CollectionMarshaller interface with its
      unmarshal() method throwing a ServiceException in case of failure has 
      been replaced by org.openmdx.base.object.spi.Marshaller with its 
      unmarshal() method throwing now an IllegalArgumentException
      in case of failure. 
      
      CR20007105
      Version
      
      The deprecated method org.openmdx.*.Version.getVersion() has been removed.

      CR20007105
      Configuration_2_0
      
      The (up to now only package locally used) interface 
      org.openmdx.base.object.spi.Configuration_2_0 has been removed.
       
      CR20007302
      Removal of deprecated classes
      
      Some of the following classes, which had been deprecated for years, have 
      been removed finally, some will be reomved in the neaer future:
      * org.openmdx.compatibility.base.naming.InitialContainerContextFactory
      * org.openmdx.compatibility.base.application.cci.Application
      * org.openmdx.compatibility.base.application.cci.ServiceLocator_1_0
      * org.openmdx.compatibility.base.application.container.SimpleServiceLocator
      * org.openmdx.compatibility.base.application.container.LightweightContainer_1
      * org.openmdx.compatibility.base.application.j2ee.ApplicationServerManager_1
      * org.openmdx.compatibility.base.application.j2ee.StandardServiceLocator
      * org.openmdx.compatibility.base.application.j2ee.WlsManager_1
      * org.openmdx.compatibility.base.application.spi.CommandOptions_1
      * org.openmdx.compatibility.base.application.spi.JndiServiceLocator_1
      * org.openmdx.compatibility.base.application.spi.SimpleServiceLocator_1
      * org.openmdx.compatibility.base.application.spi.StandardServiceLocator_1
      * org.openmdx.compatibility.base.dataprovider.kernel.ConnectorContainer_1
      * org.openmdx.compatibility.base.dataprovider.kernel.WlsDataproviderConnectionManager_1
      * org.openmdx.compatibility.base.dataprovider.transport.none.DataproviderConnection
      * org.openmdx.compatibility.base.dataprovider.transport.none.DataproviderConnectionFactory
      * org.openmdx.compatibility.base.dataprovider.transport.none.DataproviderContainer_1
      * org.openmdx.compatibility.base.dataprovider.transport.none.ManagedDataproviderConnectionFactory
      * org.openmdx.kernel.naming.LocalContext
      * org.openmdx.kernel.naming.LocalContext.Factory


==============================================================================
Version 1.19.16                                                     2008-02-04
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20008200 
      Unnecessary get requests made by state view
      
      State view has been optimized to avoid unecessary get request for non-
      stated objects.
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.15                                                     2008-01-17
==============================================================================

1.    NEW FEATURES

      CR20007901
      verifyObject
      
      The model API should provider another verifyObject() method in order
      to fulfil the following requirements:
      * accept DataproviderObject_1_0 instances 
        (as opposed to DataproviderObject instances) 
      * allow to disable derived attribute validation 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none      
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.14                                                     2008-01-07
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS

      CR20007519
      Performance Improvement
      
      Correct filtering.

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.13                                                     2007-12-21
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007519
      Performance Improvement
      
      Eliminate unnecessary state caching when iterationg over collections 
      of non-stated objects prefetched in a time-point view.

2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.12                                                     2007-12-20
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS

      CR20007528
      Erroneous Object Path
      
      Some object paths contain erroneously semicolons  

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.11                                                     2007-12-20
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007519
      Performance Improvement
      
      Eliminate unnecessary state caching when iterationg over collections 
      of stated objects prefetched in a time-point view.

      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.10                                                     2007-12-14
==============================================================================

1.    NEW FEATURES
      
      CR20007520
      states
      
      The EnableShowDB option allows the showDB() invocation when logging at
      trace level.
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007519
      Performance Improvement
      
      Eliminate unnecessary state caching when navigating to objects prefetched
      in a time-point view.

      CR20007520
      states
      
      The EnableShowDB option is false by default.
      
      
2.1.  FIXED BUGS
      
      CR20007517
      EnableDisjunctStateCreation
      
      The state1 plug-in's EnableDisjunctStateCreation option could not be set 
      to false, neither implicitely nor explicitely. 
      
      Now it's false by default.
      

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.9                                                      2007-12-02
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007102
      Improve ignoreCheckForDuplicates
      
      A unique constraint violation detected with the activated 
      ignoreCheckForDuplicates flag return a DUPLICATE exception instead of
      a MEDIA_ACCESS_FAILURE, provided the SQL state returned by the database 
      driver is either 23000 or 23505.
      
2.1.  FIXED BUGS

      CR20007104
      XmExport of stated objects  
      
      XmlExporter fails if the startPath collection contains an instance of 
      BasicState.
      
      CR20007200
      XmlExporter exception handling
      
      Sometimes the XmlExporter exception stack's initial cause contains an 
      assertion failure (Detected a recursion flaw within the exception stack. 
      The exception is fixed but some information had to be discarded...) 
      
      CR20007107
      Traversal failure
      
      The object view's instance-of filter property evaluation did ignore
      the sub-classes of a candidate's class.
      
      CR20007106
      Erroneous object selection by TimeRange View
      
      A time range view's collection of children did ignore non-readable 
      objects, which was  wrong.
      
      A time range view's collection of children must ignore deleted objects 
      only, but include all others, whether readable or not.

==============================================================================
Version 1.19.8                                                      2007-11-28
==============================================================================

1.    NEW FEATURES
      
      CR20006414 
      Query on persistent-new object trees
      
      * Support JDO's IgnoreCache==false setting 
      * No round-trips should be made when making queries on a persistent-new 
        object's containers.      
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR10006485
      Attribute Specifiers are ignored by ITERATION_CONTINUATION 
      
      CR20006420
      Date or DateTime filter properties
      
      Date or DateTime filter properties for non-stated objects are not 
      converted to any other DB format than String when issued via a state
      view.
      
      
==============================================================================
Version 1.19.7                                                      2007-11-22
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006388
      State View HashCode
      
      Different state view instances referring to the same object should share 
      the same hashCode.  

      CR20006386
      UnitOfWOrk_1_0 getDateTime() 
      
      It should throw an ILLEGAL_STATE exception if no unit of work is active 
      instead of returning null.
      
2.1.  FIXED BUGS
      
      CR20006387
      A residual period of one day
      
      A residual period of one day is "swallowed" during commit by the
      DateState_1 plug-in. 
      
      CR20006376
      refSetOutermostPackage caches the wrong object with the tie approach
      
      The user provided instance has been cached instead of the proxy 
      instance.
      
      
==============================================================================
Version 1.19.6                                                      2007-11-21
==============================================================================

1.    NEW FEATURES
      
      CR20006383
      StateIncapable
      
      State incapable BasicState instances are marked with a StateIncapable 
      context by the
      org.openmdx.compatibility.base.dataprovider.layer.model.StateIncapable_1 
      and org.openmdx.compatibility.base.dataprovider.layer.model.NoState_1 
      plug-in. 

      CR20006384
      Unstated children of stated parents should be supported
      
      Especially the cascading delete operation has to be aware of it:
      Unstated children of stated objects are involved to cascading deletes
      if their parent has no more valid states.


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20006385
      Dependency Aware Explorer Fallback 

      Add lenient ordering in case of circular references:
      Fall back to ordering by by states and children only as opposed to the 
      original order.
      
2.1.  FIXED BUGS
      none
      
      
==============================================================================
Version 1.19.5                                                      2007-11-20
==============================================================================

1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006380
      DateState Views's "readable" predicate
      
      The DateState Views's "readable" predicate ignores deleted states now.

      CR20006380
      Add the "deleted" predicate to the DateStateViews state retrieval 
      criteria
      
      All methods exposing the "invalidated" predicate should expose the 
      "deleted" predicate as well          
         
      CR20006378
      Persistence: RID lookup for PG. DBOSlicedWithIdAsKey generates rid lookup 
      statements of the form ((v." + database.OBJECT_ID + " > ?) AND 
      (v." + database.OBJECT_ID + " < ?)). Because string comparison does not 
      work as expected for PG on Unix the form using LIKE should be used instead, 
      i.e. (v." + database.OBJECT_ID + " LIKE ?).


2.1.  FIXED BUGS

      CR20006382 
      RID/OID with dbObject2 
      
      The RID is not included in dbObject2's SELECT statement 
      
      CR20006376
      DateState View's Reference Container
                         
      A DateState view's reference container did ignore the filter part of
      a query for non-stated objects as soon as an order was specified.
      
      
==============================================================================
Version 1.19.4                                                      2007-11-16
==============================================================================

1.    NEW FEATURES

      CR20006376
      Removal Propagation
      
      DateState Views are now able to propagate removal operations for a given
      time range to their children.                       

      CR20006376
      NoState_1 detection
      
      DateState Views allow now the modification of the stateValidFrom and 
      stateValidTo attributes of DateState instances provided by a service
      using the NoState_1 plug-in.


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006376
      View For Initialized State
      
      The DateState views for initialized states no longer ignore values 
      provided by client side JMI plug-ins.


2.1.  FIXED BUGS

      CR20006376
      DateState View's Reference Container
                         
      A DateState view's persistent-new reference container occasionally
      ignored all its children.
      
      
==============================================================================
Version 1.19.3                                                      2007-11-15
==============================================================================

1.    NEW FEATURES
      none
                       

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20006376
      DateState View's Reference Container
      
      A DateState view's reference container no longer includes objects 
      removed in the current unit of work, i.e. objects with their 
      refIsDeleted() flag set are excluded.      

2.1.  FIXED BUGS

      CR20006376
      DateState View's Reference Container

      Iterator could erroneously terminate - probably due to the fact that
      objects fetched or created or fetched during the iteration.
                         
==============================================================================
Version 1.19.2                                                      2007-11-14
==============================================================================

1.    NEW FEATURES
      none
                       

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006371
      State Removal
      
      The remove operation does no longer return any former attributes.


2.1.  FIXED BUGS
      
      CR20006371
      Multiple State Removal
      
      The AbstractState_1 sometimes rejected state removal requests during
      its after completion phase.
      
      Sometimes identical invalidated states were written to the database in
      a single transaction.

      CR20006371
      State queries for persistent-new objects
      
      State queries for persistent-new objects did ignore the cache.

      CR20006371
      DateState views for persistent-new objects
      
      Creating views for persistent-new objects did not work.
      
      CR0006371
      Duplicate state entries created by getViewForPropagatedState 

                   
==============================================================================
Version 1.19.1                                                      2007-11-07
==============================================================================

1.    NEW FEATURES

      CR20006371
      DateState Views

      Added
      * the ability to access provider with No_State_1-Plug-ins.
      * the ability to retrieve objects of "other" views by another mean than
        DateStateViews' static methods: 
        The predicate "statedObject().isNonNull() returns different states
        of a given object in different views with identical refMofId()s:
        - valid states' views are time range views for the states' validity.
        - invalidated states' views are time point views (valid for the
          beginning of the states' validity and valid at one millisecond
          before its invalidation).
           
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20006371
      DateState Views

      API changes (in regard to request 20006291)
      * The two static writable views (write-only time-range view and 
        read-write mixed view) have been replace by a single dynamic one
        (writable time-range view which is readable depending on the cache 
        content).
      * The null return policy has been changed from "null if object does not 
        exist" to "null if either object does not exist or if there is no
        valid state in the given time range".

      CR20006371
      Exporter

      Added
      * the ability to export the states of objects unavailable at
        the time of export.


      CR20006291 
      DateState Views

      Adding a new state is no longer optimistic but pessimistic, i.e. a
      DUPLICATE exception is thrown immediately in case of a conflict.

2.1.  FIXED BUGS

      CR20006371
      State Views & JMI Plug-ins
      
      The state view supports now with client and server side JMI plug-ins.


                   
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.19.0                                                      2007-10-13
==============================================================================

1.    NEW FEATURES

      #20006291 
      DateState Views
      
      Date State view support allows to set the context on a RefRootPackage
      bases as opposed to the connection based ServiceHeader apporach.
      These RefRootPackage views share the same unit of work.
      
      CR20006356
      NoState_1
      
      The layer configuration option "SingleStateMode" tells, whether the
      NoState_1 plug-in holds a single state per object instead of an object 
      which is valid forever.
      
      The default value is false, i.e. no state mode where each object is
      valid forever.
      
      CR20006291
      DateState Views
      
      The marshalling objects implement the Delegating_1_0 interface now. 
      
      CR20006340
      Extend Layer interface
      
      The Layer_1_2 interface has two new signatures
      
	    /**
	     * This method is called by the INTERCEPTION layer before procss()ing
	     * the given request.
	     * 
	     * @param header
	     * @param request
	     */
	    void prolog(
	        ServiceHeader header, 
	        UnitOfWorkRequest request
	    );
	    
	    /**
	     * This method is called by the INTERCEPTION layer after procss()ing
	     * the given request.
	     * 
	     * @param header
	     * @param request
	     */
	    void epilog(
	        ServiceHeader header, 
	        UnitOfWorkRequest request,
	        UnitOfWorkReply reply
	    );
      
      If these methods are overridden in a subclass they have to call their
      super implementation in order to notify the other layers as well.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006291
      DateState Views
      
      The marshalling object's delegate is now available through the protected
      method getDelegate(), but no longer as field. 

2.1.  FIXED BUGS

      CR20006296
      Database_1: multiple reads on columns. ResultSet.getObject(columnName) 
      must NOT be called more than one time on the same row (at least for numeric 
      columns with SQL Server). The second and subsequent calls may return invalid 
      values without throwing an exception. The class FastResultSet already handles 
      this case, however not for indexed columns (introduced with embedded features 
      and legacy tables). 
      
                  
2.2.  DEPRECATED FEATURES
      
      CR20006339
      Deprecate org::openmdx::compatibility::role1 
            
2.3   REMOVED FEATURES

      CR20006291
      DateState Views
      
      The marshalling object's delegate is no longer available as field.


==============================================================================
Version 1.18.3                                                      2007-09-03
==============================================================================

1.    NEW FEATURES
      
      CR20006252
      The DependencyAwareExplorer changes the request order unnecessarily. 
      
      The DependencyAwareExplorer changes the request order only if necessary
      if the newly introduced RELUCTANT_REORDERING flag is on.
        
      CR20006291
      org.openmdx.compatibility.state1.view package
      
      org::openmdx::compatibility::state1 view API added
      
             
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006287 
      Oracle Datums

      Resolved the erroneous behaviour if Oracel Datums.     
      
      CR20006284
      XMLExporter 
      
      startPoints.size() > 1 leads to exception
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none



==============================================================================
Version 1.18.2                                                      2007-08-26
==============================================================================

1.    NEW FEATURES
      
      CR20006287 
      Oracle Datums
      
      The Oracle Datum conversion routine has been made available via the
      org.openmdx.oracle.base.Datums class.
      
      CR20006281
      Database: Existence query during object creation. 
      IGNORE_CHECK_FOR_DUPLICATES allows to ignore the check-for-duplicate 
      test on object creation. By default, the database plugin asserts that no 
      two objects with the same identity are created. An object is only created 
      if an object retrieval with the same identity throws NOT_FOUND. The check 
      is not performed if the option is set to true. In this case it is 
      strongly recommended to set primary key constraints on the object_id / 
      idx columns.
      
      NOTE: if case of duplicate objects ids and IGNORE_CHECK_FOR_DUPLICATES 
      and database constraints turned on, a ServiceException is thrown with 
      error code MEDIA_ACCESS_FAILURE and a db-specific SQLException as cause.      
      
      SF1010664
      Eclipse projects
      
      Versioned Eclipse projects are now included in the binary distribution.
      
      CR20006258
      Database_1 allows to handle multiple connection managers. Connection
      managers are configured according to the name pattern ../datasource[0],
      ../datasource[1], etc. in the provider's deployment descriptor. The database 
      plugin accesses the connection managers by calling the method 
      getConnectionManager(DataproviderRequest request). By default the method 
      returns the first configured connection manager. However, the method can be 
      overriden so that it returns a connection manager according to a user-defined 
      criteria derived from the actual request.
      
      CR20006251
      Audit_1: add option returnAllInvolved. An object retrieval of an involved 
      object returns by the default the requested object or throws a NOT_FOUND 
      exception. When the option is set to true all objects involved in a unit 
      of work are returned in the same fetch set.
      
      CR20006687
      RSM6 / UML2 model export is now supported in addition to Together,
      MagicDraw and Together. The model exporter accepts the new option
      --format=uml2.openmdx-1 (see ant/etc/ant/build-library.xml and
      jre-1.4-properties, jre-1.5-properties and jre-1.6-properties).
      
      CR20006259
      Database_1: support join tables. joinTable, joinColumnEnd1 and joinColumnEnd2 
      allow to access the configured db object using a join table. The view to 
      access the configured db object is constructed as SELECT T v INNER JOIN 
      joinTable vj ON v.object_id = vj.joinColumnEnd2. Normally a find request 
      results (depending on the configured db object type) in SELECT T v WHERE 
      p$$parent = ?. With a join table the find request looks as SELECT T v INNER 
      JOIN joinTable vj ON v.object_id = vj.joinColumnEnd2 WHERE vj.joinColumnEnd1 = ?.
      Currently, join tables are only supported for DBOSlicedWithParentIdAsKey.
      
      CR20006247
      JDO: Embedded multivalued fields 
      
      Specifying for example "embedded=3" in the openmdxjdo declaration for 
      field "embeddedField" leads to the following fields in the main object
      * embeddedField_0 
      * embeddedField_1 
      * embeddedField_2 
      and the following columns in the main table
      * EMBEDDED_FIELD_0 
      * EMBEDDED_FIELD_1 
      * EMBEDDED_FIELD_2       
      while the following field in the main object
      * embeddedField_size
      and the following field in the slice table
      * embeddedField
      are suppressed together with their corresponding columns.
      
      CR20006245
      Sounds like

      SOUNDS flag support added to StringTypePredicate

      CR20006237
      Allow query context's being added to JMI queries. A query such as

        SegmentQuery query = this.clock1.createSegmentQuery();
        QueryFilter context = this.datastore1.getQueryFilter().createQueryFilter();
        context.setClause(
            "SELECT something FROM somewhere WHERE b0 = ?b0 AND i0 = ?i0 AND i1 = ?i1 AND i2 = ?i2"
        );
        context.setBooleanParam(
            new boolean[]{true}
        );
        context.setIntegerParam(
            new int[]{1, 2, 3}
        );
        query.thereExistsContext().equalTo(context);        

			leads to a filter similar to
			
			[org.openmdx.compatibility.base.query.FilterProperty (THERE_EXISTS object_instanceof IS_IN [org:openmdx:test:clock1:Segment]): {
				quantor = "THERE_EXISTS"
				name = "object_instanceof"
				operator = "IS_IN"
				values = [
					0: "org:openmdx:test:clock1:Segment"
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:object_class PIGGY_BACK [org:openmdx:compatibility:datastore1:QueryFilter]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:object_class"
				operator = "PIGGY_BACK"
				values = [
					0: "org:openmdx:compatibility:datastore1:QueryFilter"
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateParam"
				operator = "PIGGY_BACK"
				values = []
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:decimalParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:decimalParam"
				operator = "PIGGY_BACK"
				values = []
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:clause PIGGY_BACK [SELECT something FROM somewhere WHERE b0 = ?b0 AND i0 = ?i0 AND i1 = ?i1 AND i2 = ?i2]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:clause"
				operator = "PIGGY_BACK"
				values = [
					0: "SELECT something FROM somewhere WHERE b0 = ?b0 AND i0 = ?i0 AND i1 = ?i1 AND i2 = ?i2"
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:booleanParam PIGGY_BACK [true]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:booleanParam"
				operator = "PIGGY_BACK"
				values = [
					0: true
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:integerParam PIGGY_BACK [1, 2, 3]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:integerParam"
				operator = "PIGGY_BACK"
				values = [
					0: 1
					1: 2
					2: 3
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateTimeParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateTimeParam"
				operator = "PIGGY_BACK"
				values = []
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:stringParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:stringParam"
				operator = "PIGGY_BACK"
				values = []
			}]

			The database plugin includes the filter clause in the WHERE clause as
			SELECT ... WHERE <query filter clause> AND <other criteria>. The parameter
			placeholders ?<type><index> are replaced by their corresponding parameter 
			values as follows:
			
				?i<index>: integerParam at index
				?n<index>: decimalParam at index
				?s<index>: stringParam at index
				?b<index>: booleanParam at index
				?d<index>: dateParam at index
				?t<index>: dateTimeParam at index		  
			      
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006288
      SLF4J 1.4.3
      
      Upgrade to SLF4J 1.4.3 with the following main changes
      * by SLF4J
        - Mapped Diagnostic Context support 
        - Trace level support 
      * by openMDX
        - Use SysLogLoggerFactory as fallback if no LoggerFactoryBinder is 
          available (as oppesed to SLF4J's orginal implementaion which fails 
          in this case) 
          
          IMPORTANT NOTE:
          An SLF4J-Implementation JAR must be BEFORE openmdx-kernel.jar in the 
          system classpath!

      CR20006283
      RSM project naming conventions. RSM projects renamed to:
      * openMDX 1 ~ Core (RSM)
      * openMDX 1 ~ Portal (RSM)
      * openMDX 1 ~ Security (RSM)
      As a consequence the projects must be referenced in thirdparty projects using
      the new project name, e.g. href="platform:/resource/openMDX%201%20~%20Core%20(RSM)/..."
      
      CR20006280 
      Inefficient equalTo 
      
      "For all" or "there exists" give mathematically the same result in case
      of mandatory attributes, but a DB query should use "there exists" to 
      avoid "OR NULL" leading very often to full table scans. 
      
      CR20006273 
      SLF4JLoggingMechanism logger selection
      
      The SLF4JLoggingMechanism selects the logger by the event's class name
      instead of the Log name.
      
      CR20006255
      Database_1: DataproviderReplyContexts.TOTAL. TOTAL is set at ITERATION_START 
      the following cases:
      1. last object is reached. TOTAL is set to position + number of returned 
         objects
      2. result set is non-indexed. TOTAL is calculated with SELECT COUNT(*)      
      
      CR20006250
      XRI Validity
      
      Sub-segments with invalid characters must be escaped, e.g.
      * .../($t*ces*jqxhIol0EdiUc%2BAQxhsSOg)/... instead of 
        .../jqxhIol0EdiUc+AQxhsSOg/...
      
      CR20006248
      state1: fix derived associations. Associations StateBelongsToBasicState, 
      StateExtendsBasicState, StateBelongsToBasicObject must be modeled with 
      isDerived=true.
      
      CR20006245
      Sounds like
      
      Support SOUNDS flag with like() instead of soundLike().
      
      CR20006242
      RSM: XMI2 parser supports RSM 7. XMI2Parser accepts .emx files in format 
      RSM 7.

2.1.  FIXED BUGS
      
      CR20006286
      JMI marshalling failure for dates less than 1000-01-01
      
      1-01-01 should be converted to 00010101 instead of 10101
            
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR20006245
      Sounds like
      
      "soundLike(term)" predicates have been removed in favour of 
      "like(SOUNDS, term)"


==============================================================================
Version 1.18.1                                                      2007-06-14
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006233
      Database_1: filterPropertyToSql invalid translation of type patterns 
      to value patterns. The translation of type patterns to filter property value 
      patterns is invalid in some cases. Type wildcards :* are not translated to 
      sql wildcards %.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR20006245
      Sounds like
      
      soundLike() and soundsUnlike() operations removed.

==============================================================================
Version 1.18.0                                                      2007-05-31
==============================================================================

1.    NEW FEATURES
      
      CR20006724
      EJB 2.1 support by Lightweight Container
      
      Support forLightweight Container Support for EJB 2.1 compliant 
      stateleless session beans added,
      
      The following schema locations are supported:
      * http://java.sun.com/xml/ns/j2ee 
        http://java.sun.com/xml/ns/j2ee/application_1_4.xsd
      * http://java.sun.com/xml/ns/j2ee 
        http://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006222
      SimpleDateFormat restrictions 
      
      org::w3c::dateTime values < 1970-01-01T00:00:00.000Z are represented
      * correctly in case of UTC
      * incorrectly for a lot of other time zones 

      The problem was detected under the following conditions
      * org::w3c::dateTime value < 1970-01-01T00:00:00.000Z 
      * SQL type TIMESTAMP WITH TIMEZONE 
                  
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.17.0                                                      2007-05-09
==============================================================================

1.    NEW FEATURES

      CR20006725
      Import Ignoring Referential Integrity
      
      A DataproviderRequest is lenient if its "lenient" context is
      set to Boolean.TRUE. Layers having their "bypassedByLenientRequests" 
      flag activated are bypassed by such lenient requests.
      
      Restriction: Either all requests of a unit of work or none must be
      lenient.
      
      The XMLImporter constructor for stated providers has an additional
      lenient argument defining whether the DataproviderRequests' "lenient"
      context is set to Boolean.TRUE or not.
      
      CR0002400 
      Logging Framework
      
      openMDX is now using SLF4J 1.3.1 with the following changes
      * The SLF4J sources have been re-included in the openMDX/Core source 
        tree 
      * The Logger interface has been changed into a jt file for proper Java 5 
        support 
      * The new slf4j-openmdx1.jar file delegates SLF4J logging request to 
        openMDX' native logging system 
        
      CR20006721
      Standard_1: notify preDelete option. Add configuration option 
      MODEL/notifyPreDelete. If true, calls notifyPreDelete() before an object 
      is removed. notifiyPreDelete() is called for the removed object and 
      recursively for each of its composite (references must have composite 
      aggregation kind composite and changeability set to true) objects. 
      
      CR20006690
      NoState_1      
      
      The MODEL plug-in 
      org.openmdx.compatibility.base.dataprovider.layer.model.NoState_1
      allows to store classes implementing
      org::openmdx::compatibility::state1::BasicState as normal objects, 
      i.e. without any state information.
      
      CR20006688 
      Logging mit Log4J 
      
      1. openMDX 1 uses internally an openMDX specific logging API.
         But the log events may be forwarded via SLF4JLoggingMechanismus 
         to a foreign log system, e.g. to
         * JDK 1.4 Logger 
         * LOG4J 
         * Logback 
         * Jakarta Commons Logging (JCL) 
         * x4juli 
      2. openMDX 2 uses SLF4J as logging API.
         The log events may be processed either directly by log systems
         supporting SLF4J, e.g.
         * x4juli 
         * Logback (LOG4J's successor) 
         or they may be forwared to a foreign log system, e.g.
         * JDK 1.4 Logger 
         * LOG4J 
         * Jakarta Commons Logging (JCL) 
         
      You have the following configuration options:
      1. with openMDX log configuration
         * the new SLF4JLoggingMechansim forwards log events to SLF4J
         * the pre-exisiting configuartion options have not changed
      2. without openMDX log configuration
         * if the classes org.slf4j.impl.StaticLoggerBinder and 
           org.slf4j.impl.StaticMarkerBinder are both available in the
           system class path then all log events from log level detail
           on are forwarded to the SLF4JLoggingMechanism unless the
           slf4 would delegate back to the openMDX' native logging 
           system
         * Log events from log level warning on are forwarded to 
           openMDX' StandardErrLoggingMechanism in all other cases.

      CR0002400
      Logging Framework
      
      We are going to swithc to SLF4J
      1. In a first step we delegate Jakarta Commons Logging requests via 
         SLF4J to SysLog
      2. In a later step we are going to delegate AppLog and SysLog requests 
         to SLF4J 

      Via SLF4J one is be able to delegate to one's preferred logging 
      framework such as
      * LogBack
      * x4juli
      * JDK14
      * Log4j
      * Simple
      * Simple-Log
      * Jakarta Commons Logging
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none 

2.1.  FIXED BUGS
      
      CR20006682
      Audit: getChangedAttributes() must perform data type conversion if configured.
      
      CR20006645
      Filter re-use
      
      Clear destroys a filter's instance-of property.
                  
2.2.  DEPRECATED FEATURES
      
      CR20006588
      …jdo.Persistence_1
      
      The primitiveTypes packages
      * org.omg.primitiveTypes.cci
      * org.omg.primitiveTypes.jmi
      are deprecated and will be removed in the near future
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.4                                                      2007-02-23
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006645
      Filter re-use
      
      Clear destroys a filter's instance-of property.
                  
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.3                                                      2007-02-20
==============================================================================

1.    NEW FEATURES
            
      CR20006586
      Persistent identifier types
      
      New primitive types for openMDX 2:
      * org.ietf.UUID
      * org.ietf.OID
      * org.oasis-open.XRI
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS

      CR20006642 
      StandardDbObject.remove() fails if length of dbObjectForUpdate1 or 
      dbObjectForUpdate2 is 0. Remove is only allowed for db objects != null
      and length > 0.
                  
2.2.  DEPRECATED FEATURES

      CR20006586
      Alias types
      
      The following alias types should no longer be used
      * org.openmdx.base.ObjectId
      * org.openmdx.base.uuid
      * org.oasis-open.xri
            
2.3   REMOVED FEATURES
      
      CR20006586
      org.openmdx.kernel.id.XRI


==============================================================================
Version 1.16.2                                                      2007-02-06
==============================================================================

1.    NEW FEATURES
      
      CR003086
      CCI2, JMI1, JDO2 mappings

      The openMDX 2 compliant mappings maybe generated.
      They require Java 5 or Java 6 platform.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20006609
      ESCAPE CHARACTER 
      
      The select statements should be able to supply an ESCAPE clause as a
      lot of databases do not have '\' as default escape character.
      
      ESCAPE '\' is provided for the following databses at the moment
      (see jdbc-driver-sql.properties):
      * ORACLE
      * Microsoft SQL Server
                  
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.1                                                      2007-01-17
==============================================================================

1.    NEW FEATURES
      
      CR20006517
      Möglichkeit, TIMESTAMP WITH TIMEZONE mit einer konfigurierbaren Zeitzone
      zu speichern.
      
      There is new configuration option defining how org:w3c::date and
      org::w3c::datetime values are stored
      
      1. dateType
         * STANDARD
           Use the jdbc-driver-sql property DATE.TYPE.STANDARD           
         * DATE
           Store durations as SQL dates
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings

      2. dateTimeType
         * STANDARD
           Use the jdbc-driver-sql property DATETIME.TYPE.STANDARD           
         * TIMESTAMP
           Store durations as SQL TIMESTAMPs
         * TIMESTAMP_WITH_TIMEZONE
           Store durations as SQL TIMESPATMPs WITH TIMEZONE
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
         * Numeric
           Store as Number of seconds that have passed since 1970-01-01 
           00:00:00.000 UTC, including a fractional part

      3. dateTimeZone
         dateTimeZone defaults to TimeZone.getDefault().getID().
         Some configuration examples are:
         * UTC
         * GMT+02:00
         * Europe/Zurich

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20006520
      Attributes of defaultFetchSet are not marked as read if value is null 

      CR20006505 & mantis.0004034
      XmlExporter does not propagate exception
      
      Most xceptions are logged but not proagated to the caller.
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.0                                                      2006-12-31
==============================================================================

1.    NEW FEATURES
      
      CR0004043 
      Model Mapper Plugin Support
      
      One can specifiy any class implementing the interface
      org.openmdx.model1.mapping.Mapping_1_0 as format in addition to the 
      predefined values
      * jmi.openmdx-1
      * xmi.openmdx-1
      * uml.openmdx-1
      * together.openmdx-1
      * cci2
      * jmi1
      * jdo2

      Such a class will be created by its public parameterless constructor.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004045
      Audit ObjectCreation fails with native datatypes 
      
      The Audit_1 persistence plug.in did not convert XML Datatype instances
      into ISO compliant Strings before sending them to the audit provider.

      Incident 20006541
      Multivalued Reference Query Mapping
      
      org.omg.model1.query.AssociationEndQuery.qualifierType() for example 
      returns. org.w3c.cci2.OptionalFeaturePredicate instead of 
      org.w3c.cci2.MultivaluedFeaturePredicate.
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.4                                                      2006-12-04
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0004007 
      Database: replace LIKE clause in DBOSlicedWithIdAsKey in order to improve
      performance with DB2.
      
2.1.  FIXED BUGS
      
      CR0004033 
      Database with PostgreSQL: missing columns in db objects for private 
      columns.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.3                                                      2006-11-30
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004024 
      XML Schema
      
      * The Authorities in the Edit-Schema lack providers.
      * XMLSpy 2005 does not allow for empty xsd:all elements.      
             
      CR0004015
      optimisticLocking mit xmlDatatypes
      
      ORACLE TIMESTAMP WITH TIME ZONE leads to a CONCURRENT_ACCESS failure 
      when OPTIMISTIC LOCKING is ON.

2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.2                                                      2006-11-27
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004007 
      Database: remove() does not delete all composite objects.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

==============================================================================
Version 1.15.1                                                      2006-11-27
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004008 
      Database: slicedNonIndexed does ignores column object_idx to exclude.
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.0                                                      2006-11-21
==============================================================================

1.    NEW FEATURES

      CR0003988
      Dependcy in rose models
      
      Dependencies will be ignored.
      
      CR0003966 
      Import/Export 
      
      * Export
        1. All states of a stated object are exported with empty </_content>.
        2. The object itself is exported with empty </_object>
      * Import
        1. All invaildated states are ignored
        2. Objects modified not later than "modifiedSince" are ignored if
           "modifiedSince" is specified and not null.  
                
      without attributes but with
      CR0006093
      Database: DBOSlicedWithIdAsKey. The new object format allows to store
      object references in a single column. The standard format sliced stores
      object references in two columns:
      1) the object reference (rid)
      2) the object key (oid)
      DBOSlicedWithIdAsKey allows to store the object reference in a single
      column by appending rid and oid, i.e. id = rid + '/' + oid. The naming
      conventions for id type columns are:
      * object_id: the identity of the object
      * p$$parent_id: the identity of the parent object
      * <ref>: the identity of the referenced object <ref>
      * p$$ref_parent: the identity of the parent of the referenced object <ref>
      
      CR0006093
      Database: normalize multi-valued columns. The database plugin allows to
      store single- and multi-valued attributes in different columns. If the
      configuration objects 'dbObject' and 'dbObject2' are specified for a
      specific type, then
      * the single-valued attributes are stored in table 'dbObject'
      * the multi-valued atributes are stored in sliced format in table 'dbObject2'
      For query object use 'dbObjectForQuery' and 'dbObjectForQuery2'. Below is
      a sample for the normalized table app1_Address:
      
			CREATE TABLE app1_Address (
				object_referenceid bigint NOT NULL ,
				object_objectid varchar (200) NOT NULL ,
				object__class varchar (200) NULL ,
				description varchar (200) NULL ,
				created_at varchar (20) NULL ,
				modified_at varchar (20) NULL ,
				postal_code varchar (100) NULL ,
				street varchar (100) NULL ,
				country varchar (100) NULL ,
				city varchar (100) NULL ,
				house_number varchar (100) NULL ,
				address varchar (100) NULL
			);
			
			CREATE TABLE app1_Address_N (
				object_referenceid bigint NOT NULL ,
				object_objectid varchar (200) NOT NULL ,
				object_idx int NOT NULL ,
				modified_by varchar (50) NULL ,
				created_by varchar (50) NULL,
				address_line varchar (100) NULL ,
			);
      
      The corresponding database configuration looks as follows:
      
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:type">
				<_object>
					<value>
						<_item>xri:@openmdx:org.openmdx.test.app1/provider/:*/segment/:*/address/:*</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObject">
				<_object>
					<value>
						<_item>app1_Address</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObject2">
				<_object>
					<value>
						<_item>app1_Address_N</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>																								
			<org.openmdx.deployment1.DataproviderIntegerProperty qualifiedName="PERSISTENCE:pathNormalizeLevel">
				<_object>
					<value>
						<_item>0</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderIntegerProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObjectFormat">
				<_object>
					<value>
						<_item>sliced</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObjectForQuery">
				<_object>
					<value>
						<_item/>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
            
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006216 
      PathComponents 
      
      Make the path components class XRI cross reference aware
      
      Behaviour
      1. current behaviour for path components
         * Double colons are used as field separator 
         * Single colons are forbidden 
      2. required behaviour for XRI segments
         * Double colons are used as sub-segment separator 
           (to be translated into an asterisk in XRI 2 except for 
           @openmdx authority segments) 
         * Single colons are allowed in cross-references only 
      
2.1.  FIXED BUGS
      
      CR0003994
      Oracle TIMESTAMP 
      
      * Oracle data type TIMESTAMP:
        The UTC value passed to openMDX will be converted the the local
        time zone before being stored.
      * Oracle data type TIMESTAMP WITH TIMEZONE
        The UTC value passed to openMDX will be stored as is together
        with the infomration about the local time zone.
      * Oracle data type TIMESTAMP WITH LOCAL TIME ZONE 
        not yet supported       
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.14.8                                                      2006-09-25
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
       
      CR0003925 
      state1: The reference DateState.extends must be renamed to 
      DateState.statedObject in order to match the leading RSM model.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES


==============================================================================
Version 1.14.7                                                      2006-09-25
==============================================================================

1.    NEW FEATURES
      
      CR0006109
      Database: Support for autonum columns. The new option autonnumColumn allows
      to configure autonum columns as follows (also see Javadoc of class
      LayerConfigurationEntries):
      
      * the configuration option is 'autonumColumn'
	    * the format is dbObject.columnName [AS format]
	    * the database plugin handles autonum colums as follows:
  	    - autonum is applied for object slice creation with index 0
	        when a column is specified as autonum and no value is supplied with
	        the create request, a value of the form 'NEXTVAL(sequence name)'
	        is generated in the 'VALUES' clause of the INSERT statement
	      - a corresponding sequence with name 'namespace_columnName_SEQ'
	        must exist. For databases which do not support sequences a table 
	        namespace_columnName_SEQ must exist with column nextval.
	      - if the optional format is specified with 'AS format' a cast
	        is applied to the sequence value, e.g. CAST(sequence name AS CHAR(20)).
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003869
      Redeployment of WebLogic versioned applications
      
      The RemoteInvocationHandler's invoke() method maps now all 
      java.lang.RuntimeExceptions to java.rmi.ServerRuntimeException - as
      opposed to mapping all javax.ejb.EJBExceptions to 
      java.rmi.ServerExceptions.
      
2.1.  FIXED BUGS
      
      CR0003913 
      Rose model export throws NullPointer. The models state2, role2 and audit2
      use modeling features not supported by openMDX 1. The models are removed
      from the openMDX 1 distribution.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES


==============================================================================
Version 1.14.6                                                      2006-09-11
==============================================================================

1.    NEW FEATURES

      CR0003869
      Redeployment of WebLogic versioned applications
      
      RuntimeExceptions thrown by Handle.getEJBObject() are wrapped into
      java.rmi.ServerRuntimeExceptions in order to be handled by openMDX'
      retriable remote exceptions mechanism. 
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003869
      Redeployment of WebLogic versioned applications
      
      weblogic.work.WorkRejectedException added to 
      retrieable-remote-exceptions.properties.
      
      java.rmi.ServerRuntimeException*javax.ejb.EJBException added to
      retrieable-remote-exceptions.properties.
      
      The AbstractGateway_1Bean allows for another try after resetting
      the context in order to cope with WebLogic's erroneous anonymous
      initial access after connection establishement.
      
2.1.  FIXED BUGS
      
      CR0003868
      Missing JNDI name in Lightweight Container's EJB Handle
      
      This results in the client's unability to reconnect to a restarted
      lightweight container.
      
      CR0003887 & CR0003888
      CompactSparseList.equals() is erroneous  
      
      CompactSparseList.equals() may return erroneously true if 
      this.size() == 1 && that.size() > 1. 
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.14.5                                                      2006-08-22
==============================================================================

1.    NEW FEATURES
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003856
      close method for Connections 
      
      WebLogics expects a close() method for resource adapter connection 
      testing.
            
      CR0003860
      Proxy Bean Retrial Attempts
      
      EJB create() should have two attempts as well.

      java.rmi.AccessException sould be added to the retriable
      remote exceptions.
      
2.1.  FIXED BUGS
      none
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      
      CR0003844
      LightweightContainerLookupFactory
      
      The deprecated class LightweightContainerLookupFactory has been
      removed.


==============================================================================
Version 1.14.4                                                      2006-08-21
==============================================================================

1.    NEW FEATURES
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003852
      Missing credential mapping
      
      Missing credential mapping for a key store resource adapter leads now 
      to a SecurityException instaed of a NullPointerException.
            
2.1.  FIXED BUGS
      
      CR0006106
      Database: support % for paths. A wildcard path (path with trailing %) 
      typically matches more than one dbObject type. The current implementation 
      does a) not a proper mapping to an externalized path, b) does ignore 
      multiple matching types.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.14.3                                                      2006-08-21
==============================================================================

1.    NEW FEATURES
      
      CR0003843
      openmdx-connector.jar
      
      The openmdx-connector.jar contains classes to support resource adapter
      deployment.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003846
      Default JMI format  
      
      The default JMI mapping format has been changed from 
      "jmi.openmdx-1.jre-1.4" to "jmi.openmdx-1".
      
      The difference between these two mappings is
      * the jmi.openmdx-1.jre-1.4 mapping was based on 
        org.openmdx.uses.javax.xml.datatype classes 
      * the jmi.openmdx-1 mapping is based on javax.xml.datatype classes  
      
      CR0003771
      Key- und Certificate Provider für wls 9
      
      Withg the introduction of the key store resource adapter pattern
      key and certificate provider factories are put into the JNDI tree
      (as opposed the key and certificate providers themselves).
      
      The following classes have therefore been changed accordingly
      * org.openmdx.base.security.pki.DeployedCertificateProvider
      * org.openmdx.base.security.pki.DeployedKeyProvider   
      
2.1.  FIXED BUGS
      
      CR0006105
      Database: missing ORDER BY. Object slices must be ordered by object rids, 
      oids, idx for object retrievals.

      CR0003837
      Lightweight Container Class Path
      
      openmdx-kernel.jar refers to openmdx-base.jar classes.
             
      CR0003838
      Methods and interfaces in openmdx.base.security.pki classes  
      
      Some openmdx.base.security.pki classes have to override some methods or 
      to implement more interfaces in order to be accepted by WebLogic 9's 
      resource adapter container 

2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR0003846
      Removed JMI format  
      
      The JMI mapping "jmi.openmdx-1.jre-1.4" is no longer supported.
      

==============================================================================
Version 1.14.2                                                      2006-08-11
==============================================================================

1.    NEW FEATURES
      
      CR0006103
      StringBuilders
      
      Use the org.openmdx.kernel.text.StringBuilders classe to 
      * create StringBuilder instances assignemnt compatible to CharSequence 
      * cast a CharSquence references to StringBuilder 
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none      
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      
      CR0003771
      Key- und Certificate Provider für wls 9
      
      Withg the introduction of the key store resource adapter pattern
      key and certificate provider factories are put into the JNDI tree
      (as opposed the key and certificate providers themselves).
      
      The following classes have therefore been removed
      * org.openmdx.base.security.pki.DeployedCertificateProvider
      * org.openmdx.base.security.pki.DeployedKeyProvider   
      
      CR0006102
      Get rid of org.openmdx.uses.java.beans classes
      
      Replace references to org.openmdx.uses.java.beans classes by references 
      to java.beans classes wherever possible.
      
      The java.beans classes are available in the JRE from Java 2 Release 
      1.4 on, except for the IndexedPropertyChangeEvent class.

      CR0006104
      Get rid of org.openmdx.uses.java.net classes
      
      Use JDK's XML encoder and decoder
      
      JDK's XML encoder and decoder accept the encoding argument from JRE 1.4 
      on.


==============================================================================
Version 1.14.0                                                      2006-06-30
==============================================================================

1.    NEW FEATURES
      
      CR0006091
      XML Datatypes Processing Format
      
      There is new configuration option for MODEL and PERSISTENCE 
      defining how org::w3c::date and org:w3c::duration values are 
      passed to the persistence layer      
      
      1. xmlDatatype, a boolean entry
         * false (defauult): 
           Pass the ISO 8601 compliant string values instead of the XML compliant 
           datatypes to the persistence layer
         * true: 
           Pass the XML compliant datatypes instead of the ISO 8601 compliant 
           String values to the persistence layer

      CR0006090
      XML Datatype Storage Format
      
      There is new configuration option defining how org:w3c::duration values 
      are stored
      
      1. durationType
         * INTERVAL
           Store durations as SQL intervals
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
         * NUMERIC
           Store year-month durations as integers and day-time durations
           as decimals.

      2. dateType
         * DATE
           Store durations as SQL dates
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings

     3. dateTimeType
         * TIMESTAMP
           Store durations as SQL timestamps
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
  
     4. timeType
         * TIME
           Store durations as SQL times
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
         * NUMERIC
           Store the time in seconds from the beginning of the day
           as decimals.
      
      CR0003734
      Lifecycle callback
      
      jdoPreStore() is called, whenever a JMI object instance impelemnting 
      javax.jdo.listener.StoreCallback is about to be stored.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0006091
      XML Datatypes
      
      The JMI mapping of org::w3c::date and org::w3c::duration is
      javax.xml.Duration and javax.xml.XMLGregorianCalendar respectively 
      (as opposed to org.openmdx.uses.javax.xml.Duration and 
      org.openmdx.uses.javax.xml.XMLGregrianCalendar)      
      
2.1.  FIXED BUGS
      none      
             
2.2.  DEPRECATED FEATURES

      CR0006091
      XML Datatypes
      
      org.openmdx.uses.javax.xml.Duration and 
      org.openmdx.uses.javax.xml.XMLGregrianCalendar are deprecated and will 
      be removed soon.
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.6                                                      2006-06-20
==============================================================================

1.    NEW FEATURES
      
      CR0006088
      org::w3c::boolean
      
      There are three new configuration options for the database plug-in
      defining how boolean values are stored:
      
      1. booleanType
         The type used to store boolean values, i.e. one of
         * BOOLEAN (ignore booleanFalse and booleanTrue configurations)
         * CHARACTER (default)
         * NUMERIC
         
      2. booleanFalse
         The value corresponding to Boolean.FALSE, e.g.<ul>
         * false (fix in case of  booleanType BOOLEAN
         * ##false## (default in case of booleanType CHARACTER 
         * 0 (default in case of booleanType NUMERIC
          
      2. booleanFalse
         The value corresponding to Boolean.TRUE, e.g.<ul>
         * true (fix in case of  booleanType BOOLEAN
         * ##true## (default in case of booleanType CHARACTER 
         * 1 (default in case of booleanType NUMERIC
                 
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002878
      XRI 2.0 support
      
      Upgrade to openXRI 1.0.0 which is based on an additional thirdparty 
      library:
      
		Name: com/ibm/icu/
		Specification-Title: ICU for Java
		Specification-Version: 3.4.1
		Specification-Vendor: ICU
		Implementation-Title: ICU for Java
		Implementation-Version: 3.4.1
		Implementation-Vendor: IBM Corporation
		Implementation-Vendor-Id: com.ibm      
      
2.1.  FIXED BUGS
      none      
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.5                                                      2006-06-09
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003713
      Principal name 
      
      Principal and realm name must not be derived from their object's id.
      
      The name attributes of org::openmdx::security::realm1::Realm and 
      org::openmdx::security::realm1::Principal class have to be changed 
      accordingly. 
      
2.1.  FIXED BUGS
      
      CR0003028 
      Useless JmiAccessor for reference with ClassType qualifier generated 
      
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.4                                                      2006-06-07
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003702 
      Infinite loop during RefStruct creation 
      
      Creating a RefStruct instance containing a set of JMI object leads to an 
      infinite loop consuming up the VM's memory.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.3                                                      2006-06-07
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003696 
      Filter problem
      
      JMI filters ignore values of type RefObject unless they are instances of
      org::openmdx::base::ExtentCapable and 
      org::openmdx::compatibility::state1::State
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.2                                                      2006-06-06
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003686
      JMI proxy instances never implement the InstanceCallbackListener 
      interface
      
      JMI proxy instances ignore the interfaces provided by the 
      implementation.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.1                                                      2006-05-31
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003677
      Together export exception 

      The Together exporter does not convert the legal MOF Namespace name 
      "oasis-open" to the legal C++ namespace "oasis_open" but keeps the 
      original value "oasis-open" which is illegal as C++ namespace.

      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.0                                                      2006-05-21
==============================================================================

1.    NEW FEATURES
     
      CR0006070
      openMDX 2 Query interfaces
      
      openMDX 2 Query interfaces are going to replace openMDX 1 Filter 
      interfaces and classes.
      
      The advantage of this approach is, that the query interfaces are 
      accessor independent, i.e. they can be used for example by
      * JMI accessors
      * CCI accessors
      * JDO accessors
      * ?
      
      In future there will be different ways to formulate queries
      * openMDX 2 Query interfaces (using a strongly typed API)
      * JDO query language (using stringified expressions)
      * SQL (using stringified expressions)
      * EJB 3 query language (using stringified expressions)
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0006059
      Move the ui1 model and plugin to sub-project openMDX/Portal.
      
      CR0006051
      MOF to Java Name Mapping

      Make openMDX' MOF to Java Name Mapping JMI 1.0 compliant

      Rules for Splitting MOF Model.ModelElement Names into Words
      * In the MOF, the name of a ModelElement is, typically, formed from one 
        or more words in some natural language and is an instance of the 
        ?NameType? i.e., any valid UTF-16 string. Since the MOF does not 
        restrict the set of strings that can be used to name a ModelElement, 
        not all ModelElement names transform directly to valid Java 
        identifiers. For example, names that include graphic characters do not 
        map to Java identifiers.
      * However, ModelElement names (or the javax.jmi.substituteName if one is 
        provided) consisting only of ASCII letters, digits, hyphens ('-'), 
        underscores ('_') and white-space characters, and conform to the 
        following syntax are subject to a JMI identifier generation pattern 
        that will result in standardized Java identifiers being generated.
      * MOF identifier syntax subject to JMI identifier mapping:
        Let ?ALPHA? be the set of upper-case alphabetic characters;
        Let ?alpha? be the set of lower-case alphabetic characters;
        Let ?num? be the set of numeric characters.
        Then:
        word ::= [ALPHA] [ALPHA | num]* [alpha | num]* | [alpha] [alpha | num]*
        white-space::= SP, CR, LF, HT, VT
        non-sig ::= { '_' | '-' | white-space }*
        MOF-identifier ::= [non-sig] word { non-sig word }* [non-sig]
      * The above syntax defines a heuristic for splitting names into a 
        sequence of words. The Java identifier is generated by reassembling the 
        words. The "non-sig" characters are non-significant to the Java 
        identifier generation rules and are discarded.
  
      Rules for Generating Identifiers
      * Identifier naming is an important issue for automatically generated 
        Java interfaces, especially when the interfaces are intended to be 
        used by applications written by human programmers. The mapping has to 
        reach a balance between conflicting requirements: 	 	
        - Syntactic correctness
          all identifiers in the mapped Java must conform to the Java syntax.
        - User friendliness
          identifiers should convey as much information as possible without 
          being overly long.
        - Conformance to existing conventions
          identifiers should conform to existing stylistic conventions.
      * In JMI, all identifiers (i.e., names of packages, names of class 
        proxies, names of operations, names of parameters, names of constants, 
        and names enumeration literals) shall conform to the following rules:
        - Package names:
          The identifier consists of lower-case alphabetic characters only.
        - Class proxy names: 
          The identifier consists of lower-case alphabetic characters with 
          the following exceptions.The first letter of the identifier is 
          capitalized. If the identifier consists of multiple words, the first
          letter of each word in the identifier is capitalized.
        - Operation names
          The identifier consists of lower-case alphabetic characters with the
          following exception. If the identifier consists of multiple words, 
          the first letter of each word except the first word, is capitalized.
        - Attribute names:
          The identifier consists of lower-case alphabetic characters with the
          following exception. If the identifier consists of multiple words, 
          the first letter of each word except the first word, is capitalized.
        - Constants
          The identifier consists of all upper-case alphabetic characters and 
          the ?_? character (used to separate words).
        - Enumeration literals
          The identifier consists of all upper-case alphabetic characters and 
          the character ?_? (used to separate words).
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.12.1                                                      2006-03-27
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0006052
      refInitialize() throws NullPointer
      
      CR0006053
      ObjectInspectorServlet: IE7 support
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.12.0                                                      2006-02-20
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003585
      Classpath URL validation
      
      An IOException with a message of the form «?ClassLoaderType? classloader 
      ?ModuleName? can't validate URL ‹URL›» containing the initial reason as 
      cause should be thrown.
      
      CR0003587 
      References used as filter values
      
      There are two changes in the RefFilter_1_0 implementation regarding the
      
          refAddValue(
            String fieldName,
            short quantor,
            short operator,
            Collection values
          );
          
      method:
      * The «values» argument accepts now members of type «Path» in addidtion 
        to «RefObject_1_0» instances.
      * For members which are instances of both «State» and «ExtentCapable»
        «getIdentitiy()» is used as opposed to the usual «refGetPath()».         
      
      CR0003589
      State-parameters in path for object creation
      
      If a JMI accessor retrieves a container belonging to an instance of 
      both State and ExtentCapable whichs is persistent but neither new nor
      deleted then it returnes one based on the object's identity rather than 
      the object's path.
      
      CR0003591 
      DateMarshaller throws RuntimeException
      
      No exceptions are thrown for incomplete or early dates, but each date is 
      marshalled AS IS.
      
2.1.  FIXED BUGS
      
      SF1260974
      Mistake in RefStruct
      
      The standard RefStruct interface is used when openMDX 2 JMI mappings
      are generated.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.11.6                                                      2006-01-19
==============================================================================

1.    NEW FEATURES
      
      CR0003588
      Extent requests for stated objects
      
      Allow extent requests for subclasses of 
      org::openmdx::compatibility::state1::State and 
      org::openmdx::base::ExtentCapable.
      
      CR0003584
      XMLImporter und Dates

      An XMLIMporter extension allows to enter date time entries without 
      timezone, i.e. as local date time values.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003585
      Preference Logging
      
      Lack of database preferences should be logged at info instead of warning
      level.
      
2.1.  FIXED BUGS

      CR0003585
      NullPointerException during deployment descriptor parsing
      
      openmdx-ejb-jar.xml deployment descriptor entries without matching
      ejb-jar.xml deployment-descriptor entries lead to NullPointerException.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.11.5                                                      2006-01-06
==============================================================================

1.    NEW FEATURES

      CR0006038
      ObjectInspectorServlet: selectable values. AttributeValue has a method 
      returning a list of values which are rendered as drop-down. The method 
      returning the values is user-definable. This extension is e.g. useful 
      for input parameter fields of type object reference:
      
			public List getSelectableValues(
			    ApplicationContext application,
			    RefObject_1_0 context,
			    String qualifiedFeatureName
			) {
			    RefPackage_1_0 rootPkg = (RefPackage_1_0)context.refOutermostPackage();
			    Path contextIdentity = new Path(context.refMofId());
			    // org:opencrx:kernel:base:ExecuteWorkflowParams:workflow
			    if("org:opencrx:kernel:base:ExecuteWorkflowParams:workflow".equals(qualifiedFeatureName)) {
			        org.opencrx.kernel.workflow1.cci.Segment workflowSegment = 
			            (org.opencrx.kernel.workflow1.cci.Segment)rootPkg.refObject(
			                "xri:@openmdx:org.opencrx.kernel.workflow1/provider/" + contextIdentity.get(2) + "/segment/" + contextIdentity.get(4)
			            );
			        Collection wfProcesses = workflowSegment.getWfProcess();
			        List selectableValues = new ArrayList();
			        for(Iterator i = wfProcesses.iterator(); i.hasNext(); ) {
			            selectableValues.add(
			                new ObjectReference((org.opencrx.kernel.workflow1.cci.WfProcess)i.next(), application)
			            );
			        }
			        return selectableValues;
			    }
			    else {
			        return super.getSelectableValues(
			            application,
			            context,
			            qualifiedFeatureName
			        );
			    }
			}           
      
      CR0006036
      ObjectInspectorServlet: 'All' filter. Allow to customize the filter which 
      shows 'All' objects in a grid. The filter should also be the underlying 
      filter for all class and user-defined filters. This allows to customize 
      grids which show a customizable object subset which can not be overriden 
      by the user.
      
			<void index="8">
			  <object class="org.openmdx.application.gui.generic.servlet.Filter">
			    <void property="name">
			      <string>account:0</string>
			    </void>
			    <void property="condition">
			      <array class="org.openmdx.base.query.Condition" length="2">
			        <void index="0">
			          <object class="org.openmdx.base.query.IsInCondition">
			            <void property="quantor">
			              <short>2</short>
			            </void>
			            <void property="feature">
			              <string>object_instanceof</string>
			            </void>
			            <void property="fulfil">
			              <boolean>true</boolean>
			            </void>
			            <void property="value">
			              <array class="java.lang.String" length="1">
			                <void index="0">
			                  <string>org:openmdx:workshop1:TeamMember</string>
			                </void>
			              </array>
			            </void>
			          </object>
			        </void>
			        <void index="1">
			          <object class="org.openmdx.base.query.IsInCondition">
			            <void property="quantor">
			              <short>1</short>
			            </void>
			            <void property="feature">
			              <string>disabled</string>
			            </void>
			            <void property="fulfil">
			              <boolean>true</boolean>
			            </void>
			            <void property="value">
			              <array class="java.lang.Boolean" length="1">
			                <void index="0">
			                  <boolean>false</boolean>
			                </void>
			              </array>
			            </void>
			          </object>
			        </void>
			      </array>
			    </void>
			    <void property="groupName">
			      <string>~</string>
			    </void>
			  </object>
			</void>

      CR0006035
      ObjectInspectorServlet: additional element definitions for object 
      containers. This allows to define multiple object containers based on the 
      same model reference.
      
			<org.openmdx.ui1.ElementDefinition name="org:opencrx:kernel:account1:Segment:account">
				<_object>
					<active>true</active>
					<toolTip>
						<_item>all Accounts</_item>
					</toolTip>
					<label>
						<_item>Accounts</_item>
					</label>
					<order>
						<_item>0</_item>
						<_item>0</_item>
						<_item>10</_item>
					</order>
					<maxMember>21</maxMember>
					<showMaxMember>9</showMaxMember>
				</_object>
				<_content>
					<additionalElementDefinition>
						<org.openmdx.ui1.AdditionalElementDefinition id="0" _operation="create">
							<_object>
								<toolTip>
									<_item>all Accounts (additional)</_item>
								</toolTip>
								<label>
									<_item>Accounts (additional)</_item>
								</label>
								<order>
									<_item>0</_item>
									<_item>0</_item>
									<_item>11</_item>
								</order>
								<maxMember>21</maxMember>
								<showMaxMember>9</showMaxMember>
							</_object>
							<_content/>
						</org.openmdx.ui1.AdditionalElementDefinition>
					</additionalElementDefinition>
				</_content>
			</org.openmdx.ui1.ElementDefinition>
      
      CR0006033
      ObjectInspectorServlet: allow to set requestedAt / requestedFor. Allow to 
      set requestedAt / requestedFor for the service header used to construct the 
      data package. A wizard implemented as JSP can set requestedAt/requestedFor 
      as follows:
      
			  ApplicationContext app = (ApplicationContext)session.getValue("ObjectInspectorServlet.ApplicationContext");
			  app.setDataRequestedAt(requestedAt);
			  app.setDataRequestedFor(requestedFor);
			
			The setting becomes active if the user clicks 'refresh objects' (this 
			creates a new object factory).      
      
      CR0002709
      JMI collection mapping. Map
      * stereotype <<list>> to java.util.List
      * stereotype <<set>> to java.util.Set
      For Java 2 Platform 5.0 support
      * stereotype <<list>> to java.util.List<...>
      * stereotype <<set>> to java.util.Set<...> 
      
      CR0003297
      Database_1: Supports mode without REF table. Use the following configuration
      options:
      * PERSISTENCE/referenceIdFormat
        - refTable: RIDs are normalized and managed in REF table
        - typeWithPathComponents: RIDs are stored as compressed Paths in
          the format <typeName>{'/' <path component>}. Type names are
          configured for each type with the option 'typeName'.
      * PERSISTENCE/useNormalizedReferences: If true, references read from the 
        database are converted to paths using the normalized reference columns, 
        i.e. p$$<reference>__rid, p$$<reference>__oid.
      
      CR0002987
      afterCompletion
      
      In case of non-transactional units of work one can experience the 
      following behaviour:
      * persistent-new objectes become transient during a client-side rollback
      * persistent-new become persistent after a server-side rollback
      
      A persistentNewObjectsBecomeTransientUponRollback flag has been added to 
      the Provider_1 constructor which allows to override its default value 
      transactionPolicyIsNew().

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002878 
      XRI 2.0
      
      The non-antlib namespaces provided by the build library use an XRI 2.0
      compliant XRI (e.g. "xri://(antlib:fr.jayasoft.ivy.ant)" instead of
      "xri:(antlib:fr.jayasoft.ivy.ant)")
      
      CR0002664, CR0002708
      JMI: getX(FilterX) with an integer as qualifier fails with 
      ClassCastException (a MarshallingList is returned and the container 
      cast fails). Such an assoiciation corresponds to a list 
      (java.util.List). The signature getX(filter) is removed from
      the API.

      CR0002453
      JMI: class-level get<X>(object) marshals object. The class level
      get operation is implemented as follows:
      * object instanceof Path --> of.getObject(p) and wrap the object 
        to JMI without marshalling. objGetClass() is not called.
      * object instanceof Object_1_0 --> object is wrapped to JMI without 
        marshaling. objGetClass() is not called.
      This behaviour is not consistent to RefPackage_1_0.refObject() which 
      marshals Object_1_0. The new implementation must marshal Object_1_0 
      the same way as refObject() does.
      
      CR0006032
      Replace Velocity based model mapper by Java based. As preparation for 
      Java 5 and openMDX 2 support replace velocity base model mappers by 
      Java based mappers. This allows a more robust implementation of
      the model mappers.
      
      CR0006021
      State plugin: Disabling of (technical) history.
            
      * The configuration entry "DisableHistoryPathPattern" is deprecated in
        favour of "DisableHistoryReferencePattern":
        
          <env-entry>
	        <env-entry-name>MODEL/DisableHistoryPathPattern[0]</env-entry-name>
	        <env-entry-type>java.lang.String</env-entry-type>
	        <env-entry-value>xri:@openmdx:org.openmdx.test.compatibility.state1/provider/:*/segment/WithoutHistory/%</env-entry-value>
          </env-entry>
      
2.1.  FIXED BUGS
      
      CR0002360
      Modeling: endless loop when defining circular alias types. If the model 
      contains an alias type definition whose type points directly or indirectly 
      to the same alias type, dereferencing the type ends in and endless loop.
      
      CR0006037
      ObjectInspectorServlet: NumberValue throws IllegalArgumentException. In 
      case the underlying value can not be retrieved NumberValue throws a 
      IllegalArgumentException. Instead it should return #ERR and log the cause 
      of the failed value retrieval.

      CR0002943
      Jmi: Jmi-Plugin setBoolean(boolean). Setters with native Java types
      or not invoked in JMI plugins, e.g. void setFeature(boolean newValue)
      is not invoked. RefObjectFactory_1 does now find setter methods with
      native Java types.
      
      CR0003563
      Root object without valud states
      
      A stated object's root object remains in the data store upon the 
      object's removal even if history states are disabled.
      
      CR0006031
      Database: store strings > 4K as CLOB with Oracle. Strings > 4K must be 
      stored as oracle.sql.CLOB.
      
      CR0003557
      1D-History
      
      "DisableHistoryReferencePattern"s configuration is applied correctly only
      when all patterns end with "/%". 

      CR0003556 
      OBJECT_RID is BigDecimal not Long 
      
      Sigrnatur of getReferenceFormatRefTable changed:
    
        private Path getReferenceFormatRefTable(
          Connection conn,  
          Number referenceId
        ) throws ServiceException;
      
2.2.  DEPRECATED FEATURES

      CR0006021
      State plugin: Disabling of (technical) history.
            
      * The configuration entry "DisableHistoryPathPattern" is deprecated
        
          <env-entry>
	        <env-entry-name>MODEL/DisableHistoryPathPattern[0]</env-entry-name>
	        <env-entry-type>java.lang.String</env-entry-type>
	        <env-entry-value>xri:@openmdx:org.openmdx.test.compatibility.state1/provider/:*/segment/WithoutHistory/%</env-entry-value>
          </env-entry>

        in favour of "DisableHistoryReferencePattern".
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.11.4                                                      2005-11-26
==============================================================================

1.    NEW FEATURES
      
      CR0006021
      State plugin: Disabling of (technical) history.
      * State management ignoring the (technical) history of an object. 
      * Only validFrom/validTo are relevant for state managment. requestedAt/
        requestedFor are ignored.
      * The list of stated objects with disabled (technical) history are
        configured on the plugin, e.g.
        
        <env-entry>
	      <env-entry-name>MODEL/DisableHistoryPathPattern[0]</env-entry-name>
	      <env-entry-type>java.lang.String</env-entry-type>
	      <env-entry-value>xri:@openmdx:org.openmdx.test.compatibility.state1/provider/:*/segment/WithoutHistory/%</env-entry-value>
        </env-entry>
        
      * The plugin returns the context org:openmdx:compatibility:state1:StateCapable
        with the boolean attribute keepingInvalidatedStates for all stated
        objects. This allows a client to decide at runtime whether the 
        technical history of an object is active.

        static boolean isKeepingIvalidStates(
	       State statedObject
        ){
	       ContextCapable contextCapable = (ContextCapable)statedObject;
	       StateCapable stateContext = (StateCapable) contextCapable.getContext(State_1_Attributes.STATE_CONTEXT);
	       return stateContext.isKeepingInvalidatedStates();
        }
        
      CR0006027
      Database: use preferences provider. Allow to read type and column mapping
      configuration from a preference provider. The deployment descriptor based
      deployment is still supported. The configuration retrieved from the
      preference provider overloads the deployment descriptor based configuration.
      
      NOTE: With openMDX 1 the configuration is read directly from the hard-coded 
      table PREFS_Preferences. The table has the schema:
      
			CREATE TABLE prefs_Preference(
			    object_rid nvarchar(100) NOT NULL,
			    object_oid nvarchar(200) NOT NULL,
			    object_idx int NOT NULL,
			    object__class nvarchar(100) NULL,
			    name nvarchar(100) NULL,
			    description nvarchar(100) NULL,
			    absolute_path nvarchar(200) NULL,
			    parent nvarchar(100) NULL,
			    string_value ntext NULL,
			    integer_value int NULL,
			    boolean_value nvarchar(10) NULL,
			    uri_value nvarchar(200) NULL,
			    decimal_value numeric(18,9) NULL,
			    CONSTRAINT PK_PREFS_Preferences PRIMARY KEY (object_rid, object_oid, object_idx)
			)
            
      With openMDX 2 the hard-coded access to the table PREFS_Preferences will 
      be replaced by a configurable preferences provider.
      
      CR0006028
      Add preferences1 model. Will be used in openMDX 2 for a preferences1 
      provider. Serves as specification for a database plugin specific 
      implementation in openMDX 1.

      CR0003440
      ObjectInspectorServlet: customizable operations. It is be possible 
      to extend the ObjectInspectorServlet by user-defined JSPs. The JSPs
      must be located under ./wizards/<locale>. They naming conventions
      are:
      * file name: <qualified class name>-<servlet name>.JSP
      * Tags:
		    <meta name="label" content="<label of menu entry>">
		    <meta name="toolTip" content="<tool tip of menu entry>">
		    <meta name="targetType" content="_blank|_this,...">
		  Registered JSPs are shown as menu entries in objects of type
		  <qualified class name>.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0006028
      generic1: Attribute names of subclasses of Property changed:
      * value:boolean -> booleanValue:boolean
      * value:string -> stringValue:string
      * value:decimal -> decimalValue:decimal
      * value:integer -> integerValue:integer
      * value:uri -> uriValue:uri      
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR0006029
      Database: decommit reference caching. Reference caching is complex, 
      does not work in all situations and is not used by any application. 
      Remove it.
      

==============================================================================
Version 1.11.3                                                      2005-11-08
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0006019
      Database: Split createObject() into createObjectSlice(index, slice) and 
      createMultiValuedObject(object). This allows a user-defined DbObject 
      implementation to distinguish between slice and object creation.
      
2.1.  FIXED BUGS
      
      CR0003461
      NullPointerException in AbstractFileLoggingMechanism  
      
      Illegal configurations lead to a NullPointerException in 
      AbstractFileLoggingMechanism. 

      CR0003467
      Object Inspector Crash
      
      Externally reported Object Inspector servlet bugs fixed.       
      
      CR0003474
      Objekt Inspector Servlet and stated objects
      
      Externally reported Object Inspector servlet bugs fixed. 
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.11.2                                                      2005-11-02
==============================================================================

1.    NEW FEATURES

      CR0003480
      ObjectInspectorServlet: Allow enable/disable top/left pane.
      
      CR0003478
      ObjectInspectorServlet: Allow to set page size. The number of rows 
      returned in a grid can be set by the user.      


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.11.1                                                      2005-10-20
==============================================================================

1.    NEW FEATURES
      
      CR0003474 
      ObjectInspectorServlet: new option 'retrieveByPathPattern[i]' allows to
      configure path patterns for objects which have to be retrieved by their
      path instead of their identity (refMofId).
      
      CR0003475
      Document upload from webapp does not work
      
      The AbstractDatabase_1 layer in the package org.openmdx.compatibility
      .base.dataprovider.layer.persistence.jdbc has two new
      configuration parameters for the streaming at unit of work
      boundaries:
      * PERSISTENCE/streamBufferDirectory
        Defines where the temporary files (beginning with their
        unit of work id and ending in ".tmp") should be placed.
        Defaults to the VM's temp directory.     
      * PERSISTENCE/chunkSize
        Defines how many bytes or characters are transferred at once.
        Defaults to 10000. 
      

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003413
      Streaming into database 
      
      The streaming mode selected by the presence of selected system 
      properties:
      * "weblogic.Name" ? WebLogic RMI 
      * "was.install.root" ? IIOP 
      * default ? JRMP 

      Two configuration parameters in the UnitOfWork_1Bean in the package 
      org.openmdx.compatibility.application.dataprovider.transport.ejb
      .transaction has have new names:
      * PERSISTENCE/streamBufferDirectory
        Defines where the temporary files (beginning with their
        unit of work id and ending in ".tmp") should be placed.
        Defaults to the VM's temp directory.     
      * PERSISTENCE/chunkSize
        Defines how many bytes or characters are transferred at once.
        Defaults to 10000. 
      
      
2.1.  FIXED BUGS
      
      CR0006018
      ObjectInspectorServlet: back action may crash session. The back 
      action may crash the session in case the back object is not accessible.
      
      CR0003475
      Document upload from webapp does not work
      
      WebLogic requires the transactions being suspended.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR0003413
      Streaming into database 
      
      Two configuration parameters in the UnitOfWork_1Bean in the package 
      org.openmdx.compatibility.application.dataprovider.transport.ejb
      .transaction has have new names, the following names have therefore
      been removed:
      * TRANSACTION/streamBufferDirectory
      * TRANSACTION/streamChunkSize


==============================================================================
Version 1.11.0                                                      2005-10-10
==============================================================================

1.    NEW FEATURES
      
      CR0003474 
      ObjectInspectorServlet: new option 'retrieveByPathPattern[i]' allows to
      configure path patterns for objects which have to be retrieved by their
      path instead of their identity (refMofId).
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR0003475
      Document upload from webapp does not work
      
      WebLogic requires the callbacks being anonymized.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.10.2                                                      2005-10-09
==============================================================================

1.    NEW FEATURES
      
      CR0003413
      Streaming into database 
      
      IIOP support has been added to openMDX streaming.
      
      The streaming mode selected by the presence of selected system 
      properties:
      * "weblogic.Name" ? WebLogic RMI 
      * "was.install.root" ? IIOP 
      * default ? JRMP 

      The UnitOfWork_1Bean in the package org.openmdx.compatibility
      .application.dataprovider.transport.ejb.transaction has two new
      configuration parameters for the streaming at unit of work
      boundaries:
      * TRANSACTION/streamBufferDirectory
        Defines where the temporary files (beginning with their
        unit of work id and ending in ".tmp") should be placed.
        Defaults to the VM's temp directory.     
      * TRANSACTION/streamChunkSize
        Defines how many bytes or characters are transferred at once.
        Defaults to 10000. 

      CR0003473
      DB Object Format slicedNonIndexedParentRidOnly
      
      Add a new DB object format called slicedNonIndexedParentRidOnly. 
      
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
 
      CR0003413
      Streaming into database 
      
      Logs mode at detail level
      
      
2.1.  FIXED BUGS
      
      CR0003413
      Streaming into database 
      
      The RMI streaming's transaction suspension interferes with the 
      database's trasaction handling, especially in case of XA transactions.

      CR0003457
      slicedNonIndexed
      
      Segment deletion failed when a slicedNoIndexd DB object was defined.
      
      CR0002666 & CR0003454
      Remote backward iteration fails
      
      The standard application and persisetnce plugins ignore the
      dataprovider request's direction directive which leads which prevents
      correct execution of the requested list iterator's previous() method.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.10.1                                                      2005-09-27
==============================================================================

1.    NEW FEATURES

      CR0003459
      Fetch set should be able to include children
      
      Allow to include an object's children in its fetch set. 
      
      CR0003458 & SF1212068
      additional tagged values in rose models
      
      If there are additional tagged values in rose models (for example in a 
      class or association end) I get errors importing the model. On other 
      elements it is possible.
      
      The reason why I need additional tagged values is to build a to which 
      generates DDLs and deployment descriptors with the extra information.
      
      CR0003392
      Multi-valued 'forReference' in filter definitions. Multi-valued 
      'forReference' in filter definitions to reduce redundant filter definitions.
      Filter definitions must look as follows:
      
			<?xml version="1.0" encoding="UTF-8"?>
			<java version="1.3.1_11" class="org.openmdx.uses.java.beans.XMLDecoder">
				<object class="org.openmdx.application.gui.generic.servlet.Filters">
					<void property="forReference">
						<array class="java.lang.String" length="1">
							<void index="0">
								<string><qualified refernce name></string>
							</void>
						</array>
					</void>
					<void property="filter">
						<array class="org.openmdx.application.gui.generic.servlet.Filter" length="2">
		  ...      
      
      CR0006012
      XmlExporter: support for wildcard reference filter. referenceFilter 
      allows patterns with wildcards (:*) as reference names. A wildcard 
      reference matches all composite, non-derived references.
      
      CR0006006
      Dataprovider_1HttpConnection should support retries
      
      Dataprovider requests should be retried depending on the HTTP status.
      
      The retriable status codes are configured in the resource 
      retriable-status-codes.properties located in the directory
      org/openmdx/compatibility/base/dataprovider/transport/http.
      
      CR0006004
      Model_1: getElement() accepts qualified element names specified as List.
      RefStruct.refTypeName() returns qualified element names as List of name 
      components. It is now possible to to pass the result of refTypeName() 
      to getElement().

      CR0003433
      Ui_1: support coloring of Inspector. Support the definition attributes 
      color and backColor for inspectors.
      
      CR0002878 
      XRI 2
      
      Support for XRI 2 based URLs such as
      * xri://+zip*(file:/C:/var/a.zip)/index.txt
      * xri://+resource/org/openmdx/test/kernel/url/resource.txt
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002878 
      XRI 2
      
      XRI 1 based URLs are deprecated in favour of XRI 2 based URLs and their 
      usage is logged at info level.     
      
2.1.  FIXED BUGS

      CR0003456
      LighweightContainer's callbacks
      
      The lightweight container must not invoke ejbActivate and ejbDeactivate 
      for stateless session beans. 
      
      CR0006014
      Model_1: missing features in allFeatureWithSubtype. In some cases 
      allFeatureWithSubtype does not contain all features of all subtypes 
      of a class.

      CR0006013 
      Endless recursion with JmiServiceException
      
      Exceptions raised when preparing a JmiServiceException's parameters are
      now caught.
      
      CR0003401 & SF1260974
      JMI Version in use
      
      RefStruct's refTypeName() method should return a List, not a String. 
      
2.2.  DEPRECATED FEATURES
      
      XRI 1 based URLs such as the following ones are deprecated:
      * xri:+zip.(file:/C:/var/a.zip)/index.txt
      * xri:+resource/org/openmdx/test/kernel/url/resource.txt
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.10.0                                                      2005-08-14
==============================================================================

1.    NEW FEATURES
      
      CR0003090
      Streamable Data Types
      
      The following model elements have been added:
      * org::w3c::byte 
      * org::w3c::character 

      CR0002447 & SF968114 
      Add Customization point to change the behaviour of UnitOfWork 
      
      From openMDX 2 on you can do the following:
      1. Provide your own UnitOfWork class:
         * The class must be an instance of javax.jdo.transaction.
         * The class may be an instance of 
           javax.jdo.listener.InstanceLifecycleListener 
         * The class needs a public constructor with its PersistenceManager as 
           single argument 
      2. Configure this UnitOfWork class:
         * Specify the org.openmdx.jdo.UnitOfWorkName property for the JDO 
           PersistenceManagerFactory 
         * invoke setUnitOfWorkName() on the JDO PersistenceManagerFactory 
         
      CR0003086
      Object_2_0
      
      JDO 2.0 API added
      
      CR0003364
      Property Resolution in Lightweight Class Loader 
 
      Support property resolution in the lightweight class loader, e.g.
      * Implementation-URL: ${OPENMDX_HOME}/jre-1.4/core/lib/openmdx-base.jar

      System properties are now expanded for Implementation-URL manifest 
      entries.     

      CR0003365
      ObjectInspectorServlet: Editable Grids. Grids (object containers) can be 
      customized as inPlace editable (ui configuration). If customized as 
      editable, the user can switch such a grid (which is being viewed on "show" 
      mode") to "edit" mode (without server roundtrip). Once a grid is in edit 
      mode it cannot be switched back to show mode without either committing / 
      saving or discarding changes. The edit grid supports cloning of existing 
      and creation of new empty rows.
      
      CR0003378
      JMI: add RefObject_1_0.refInitialize(RefObject). refInitialize() allows 
      to initialize a RefObject based on an existing RefObject. 
      
      CR0003381 
      BasicExceptions do not include a Throwable's cause
      
      BasicException's DefaultMapper should take into account a Throwable's
      cause from JRE 1.4 on.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003086
      Object_2_0 

      The method

	    /**
	     * Disassociates a connection from this managed connection
	     * 
	     * @param connection
	     */
	    void disassociateConnection(
	        Object connection
	    );
      
      to be found in the interface ManagedConnectionCallback in the package
      org.openmdx.kernel.application.container.spi.resource has been replaced 
      by the method

	    /**
	     * To tell that an object has been closed.
	     * 
	     * @param closed the object which has been closed.
	     */
	    void postClose(
	        Object closed
        );
      
      to be found in the interface CloseCallback in the package 
      org.openmdx.kernel.callback.

      CR0003329
      Paths as PathComponents
      
      Paths as PathComponents are now converted to XRIs as following:
      * a Path with compments ["a", "b", "c", "1/2/3"] for example
        toString() "a/b/c/1//2//3"
        toXri() "xri:@openmdx:a/b/c/(@openmdx:1/2/3)"
        toUri() "spice://a/b/c/1%2f2%2f3" 
      * a Path with components ["x", "y", "a/b/c/1//2//3"] for example
        toString() "x/y/a//b//c//1////2////3"
        toXri() "xri:@openmdx:x/y/(@openmdx:a/b/c/(@openmdx:1/2/3))"
        toUri() "spice://x/y/a%2fb%2fc%2f1%2f%2f2%2f%2f3"
        
      CR0003380
      org.openmdx.uses.org.apache.commons.fileupload
      
      The org.openmdx.uses.org.apache.commons.fileupload package should not be
      included in openmdx-kernel as it requires the Servlet API leading to 
      class loader conflicts wehn deployed on Tomcat 5 for example.
      
      The org.openmdx.uses.org.apache.commons.fileupload package has been moved
      to the openmdx-application.jar.
            
2.1.  FIXED BUGS
      
      CR0003390
      Code Accessor
      
      Manager_1 had a memory leak of about 50k per not found request.
      
      Manager_1 is going to listen to PRE_CLEAR events in order to detect an 
      object's inaccessablity. 
      
      CR0003376
      Using LightweightContainer RemoteDeployment in Junit Tests
      
      LightweightContainer was forked with an empty environment.

      Adjustment of wrong property set led to UnsupportedOperationException.
      
      CR0003379 
      org.openxri 
      
      org.openxri packages are now included in the openmdx-kernel.jar.     
      
2.2.  DEPRECATED FEATURES
      none
      
2.3   REMOVED FEATURES

      CR0003090
      Streamable Data Types
      
      The following model elements have been removed:
      * org::openmdx::base::blob 
      * org::openmdx::base::clob


      CR0003086
      Object_2_0 

      The interface ManagedConnectionCallback in the package
      org.openmdx.kernel.application.container.spi.resource has been replaced 
      by the interface CloseCallback in the package 
      org.openmdx.kernel.callback.

      
==============================================================================
Version 1.9.7                                                       2005-07-25
==============================================================================

1.    NEW FEATURES
      
      CR0003361
      Implementation-URL support
      
      The LightweightContainer should use
      * Implementation-URL entries
      instad of
      * Class-Path entries
      to load the Java classes from a different place and ignoring that 
      archive's MANIFEST.MF.
                               
      CR0002878
      XRI 2.0
      
      org.openxri package added.
      
      CR0003375 
      KeyProvider configuration
      
      A class implementing KeyProvider can be used in both cases:
      * Tomcat 
      * WebLogic 
      
      The following accessor classes have been added:
      * org.openmdx.base.security.pki.DeployedCertificateProvider 
      * org.openmdx.base.security.pki.DeployedKeyProvider 
      Their default JNDI lookup string is "java:comp/env/pki/provider".
              
      CR0003376  
      Using LightweightContainer RemoteDeployment in Junit Tests
      
      Constructors added to RemoteDeployment:
      
        /**
         * Constructor
	     * 
	     * @param properties 
	     *        the properties are never null and may include for example
	     *        * org.openmdx.deploy.connector.urls
	     *        * org.openmdx.deploy.application.urls
	     *        * org.openmdx.rmi.registry.port
	     *        * org.openmdx.rmi.naming.service
	     * @param connectors 
	     *        connectors overrides the corresponding properties entry 
	     *        unless it is null
	     * @param applications 
	     *        applications overrides the corresponding properties entry 
	     *        unless it is null
	     * @param detailLog 
	     *        the detail log may be null
	     * @param exceptionLog 
	     *        the exception log may be null
	     */
	    protected RemoteDeployment(
	        Map properties,
	        String connectors,
	        String applications,
	        PrintStream detailLog,
	        PrintStream exceptionLog
	    );
	    
	    /**
	     * Constructor
	     * 
	     * @param properties 
	     *        the properties are never null and may include for example
	     *        * org.openmdx.deploy.connector.urls
	     *        * org.openmdx.deploy.application.urls
	     *        * org.openmdx.rmi.registry.port
	     *        * org.openmdx.rmi.naming.service
	     * @param detailLog 
	     *        the detail log may be null
	     * @param exceptionLog 
	     *        the exception log may be null
	     */
	    public RemoteDeployment(
	        Map properties,
	        PrintStream detailLog,
	        PrintStream exceptionLog
	    );
      
2.    CHANGES
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR0003369 
      RMI Callbacks
      
      WebLogic should suspend the current transaction whene executing RMI
      callbacks.
      
      CR0003371 
      Iteration over an Extent
      
      Iteration continuation in an extent query does not use the configured 
      DbObject. 
            
2.2.  DEPRECATED FEATURES

      CR0002878
      XRI 2.0
      
      org.openmdx.kernel.id.XRI deprecated in favour of org.openxri.XRI.

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.9.5                                                       2005-07-15
==============================================================================

1.    NEW FEATURES
      
      CR0003340
      J2EE allows to specify a callback handler for an application client.  
      
      Allow the resource adapters to make use of this callback handler.  
                               
2.    CHANGES
     
2.0.  CHANGED FEATURES

      CR0003334 
      refMofId set to object identity
      
      The default fetch group is empty after commit, i.e. the object's 
      refMofId is null.
      
      refMofId() shall fall back to refGetPath().toXri() in case refMofId() 
      is null while refGetPath() is not. 
      
2.1.  FIXED BUGS
      
      CR0003342
      XMI2 parser ignores association's isDerived feature. The isDerived 
      feature is ignored by the XMI2 model importer. 
      
      CR0003354 & CR0003347
      Rose to RSM model conversion bug
      
      Some references modeled as isFrozen
      in Rose were not properly migrated to RSM as isReadOnly. JMI interfaces
      generated from non RSM modeling tools can not be compiled.
            
2.2.  DEPRECATED FEATURES
      
      CR0003349
      ObjectView_1
      
      clearStorage() has been deprecated.
      
      The clearStorage() invocations have been replaced by object factory
      replacements.

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.9.4                                                       2005-07-04
==============================================================================

1.    NEW FEATURES
      
      CR0003323
      NamingExceptions
      
      Its isRetriable() method defines which on which condition a failed
      method invocation may be retried.
      
      The retraible-naming-exceptions.properties file entries have on of the 
      two following formats:
      * <naming-exception-class>
      * <naming-exception-class>*<root-cause-throwable-class>  

      The current default property file contains the following entries:
      
        javax.naming.CommunicationException

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003335
      Standard_1: setting identity.
      
      CR0003334
      refMofId set to object identity.
      
      CR0003323
      NamingExceptions
      
      The AbstractGateway_1Bean now relies on NamingExceptions.isRetriable().
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.3                                                       2005-06-18
==============================================================================

1.    NEW FEATURES
      
      CR0003241
      XMI model importer supports IBM Rational Software Modeler. The importer
      can be invoked with a Java ant task e.g. as follows (also see
      openmdx/ant/etc/ant/build-library.xml). 
      
			<java 
				classname="org.openmdx.model1.exporter.xmi.XMIExporterMain" 
				fork="true" 
				failonerror="true" 
				maxmemory="128m"
				classpathref="${model.transformation.class.path}"
			>
				<sysproperty key="user.language" value="en"/>
				<sysproperty key="user.region" value="US"/>
				<sysproperty key="file.encoding" value="Cp1252"/>
				<sysproperty key="org.openmdx.log.config.filename" value="build/${build.target.platform}/log/model/archive-model.log.properties"/>
				<arg value="--pathMapSymbol=openmdx-core"/>
				<arg value="--pathMapPath=file:${openmdx.home}/core/src/model/rsm/"/>
				<arg value="--pathMapSymbol=openmdx-security"/>
				<arg value="--pathMapPath=file:${openmdx.home}/security/src/model/rsm/"/>
				<arg value="--url=file:src/model/rsm/models.emx"/>
				<arg value="--xmi=rsm"/>
				<arg value="--out=${build.dir}/model/models.zip"/>
				<arg value="%"/>
			</java>
      
      The path map allows to specify paths of imported model projects. RSM 
      stores the locations of model projects in the workspace. However, the
      model importer needs to know the location of all referenced model
      projects explicitely. Model projects are referenced in .emx files
      as e.g. follows:
      
			href="platform:/resource/openmdx-core/org.openmdx.base.emx
			
			where openmdx-core specifies the model name. If a path map symbol is
			specified for the model project openmdx-core then 
			platform:/resource/openmdx-core is resolved to the specified path map 
			path.
      
      The following guidelines help you migrating existing models from Rational 
      Rose to RSM:
      
      The migration is a several step process:
      
      - Prepare the .mdl/.cat files so that they can be imported by the 
        RSM Rational Rose Model importer. Also prepare all referenced
        models.
      - Import the models with the RSM Rational Rose Model importer.
      - Postprocess the imported models.

      For a more detailed description of the migration process also see
      http://www.openmdx.org/documentation.
      
      
      CR0003233
      RemoteExceptions
      
      The current default property file contains the following entries:
      
        java.rmi.ConnectException
        java.rmi.NoSuchObjectException
        java.rmi.RemoteException*java.net.ConnectException
        java.rmi.RemoteException*weblogic.rjvm.PeerGoneException      

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003311 
      Late Binding Connection
      
      LateBindingConnection_1 is now Serializable.
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.2                                                       2005-06-09
==============================================================================

1.    NEW FEATURES
      
      CR0003233
      RemoteExceptions
      
      The RemoteExceptions class has a configurable static isRetriable()
      method to be used by the framework (or applications) to determine
      whether it's safe to retry a failed remote invocation.
      
      The configuration property file is retrieved as resource from
      org/openmdx/base/exception/retriable-remote-exceptions.properties and
      each of its entries has one of following formats:
      
        <remote-exception-class>
        <remote-exception-class>*<detail-throwable-class>  
        
      The former format refers to remote exceptions retriable independent of
      its detail value, while the latter refers to remote-exceptions with
      detail value dependend retriability.
      
      The current default property file contains the following entries:
      
        java.rmi.ConnectException
        java.rmi.RemoteException*java.net.ConnectException
        java.rmi.RemoteException*weblogic.rjvm.PeerGoneException
      
                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003311 
      Late Binding Connection
      
      LateBindingConnection_1 is now Serializable.
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.1                                                       2005-06-06
==============================================================================

1.    NEW FEATURES
      
      CR0003260 
      Principal Limit
      
      Allow to define the maximum length for createdBy's and modifiedBy's 
      principal chains. 
      
      PRINCIPAL_LIMIT with its value "principalLimit" has been added to the
      MODEL layer configuration entry class, e.g.:
      * <env-entry>
          <env-entry-name>MODEL/principalLimit</env-entry-name>
          <env-entry-type>java.lang.Integer</env-entry-type>
          <env-entry-value>2</env-entry-value>
        </env-entry>

      CR0003233
      Dataprovider_1_0 Remote Connection Retry
      
      At the moment there is one retry if the RemoteException's cause is a
      ConnectException.
      
      Now you can define the set of retriable remote exceptions in the
      org/openmdx/base/exception/retriable-remote-exceptions.properties file.

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003259
      EjbConfiguration
      
      The EjbConfiguration expects the JNDI Bindings to be relative to the 
      target context (which is named by the first parameter of the list() 
      method).
      
      Accept URL names as well.  
      
      CR0003267
      Append header does not work for queries 
      
      The Hub_1Bean uses the original service headers instead of the adjusted 
      one for queries.       
            
      CR0003280 
      2-way-ssl problems
      
      Ensure that all initial context objects are closed after use.
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.0                                                       2005-05-16
==============================================================================

1.    NEW FEATURES
      
      CR0003208
      openMDX tested with WAS6. openmdx-base.jar and openmdx-application.jar 
      are not required on the system classpath anymore. However, 
      openmdx-webapplication.websphere.jar must be added to WebApp- and MDB-EARs, 
      i.e. EARs which do not contain the openMDX dataprovider remote stubs (see
      distribution openmdx-<version>-websphere.websphere-6.
                   
      CR0003229
      ObjectInspectorServlet: allow to specify 'sortable' for ValueField. The 
      'feature' is currently used to enable/disable filtering and sorting for 
      a ValueFields. There are situations where fields are sortable but not 
      filterable, e.g. fields which are mapped to CLOBs, references, etc.
      
      CR0003200
      Database_1: add jdbc-driver-sql properties. properties file should 
      allow to configure:
      * STRCAT operator 
      * AUTONUM field format. Support AUTO, SEQUENCE, NEXTVAL.
      
      CR0003202
      DataSource Pool Settings  

      The Lightweight Container should take into account the DataSource Pool 
      configuration values.       

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003236
      ObjectInspectorServlet: access history. Access history should be based 
      on the previousRequestId / previousObjectId sequence and should be 
      managed per view instead on ApplicationContext level. Do not make the 
      history persistent anymore. 

      CR0003100
      ObjectInspectorServlet: reload objects if composites are 
      created/deleted/changed.
      
      CR0003169
      ObjectInspectorServlet: Refresh all views after reload.
            
      
2.1.  FIXED BUGS
      
      CR0003220
      ObjectInspectorServlet: The manager of the parent object and the 
      new object to be added are not the same: 
			if(!this.isEditMode()) { 
			  Object[] qualifiers = (Object[])parameterMap.get("qualifier"); 
			  ((RefContainer_1_0)this.parent.refGetValue(this.forReference)).refAddValue( 
			    qualifiers.length > 0 ? (String)qualifiers[0] : "", 
			    this.object 
			  ); 
      }
      Reload the parent from the current (new) manager. 
      
      CR0003183
      ObjectInspectorServlet: NullPointerException with user-defined filters.
      
      CR0003205
      ObjectInspectorServlet: creator menus in root menu not sorted properly.
      
      CR0003212
      ObjectInspectorServlet: Setting default filter is broken.
      
      CR0003193
      ObjectInspectorServlet: Lookup inspector with bad Javascript if token 
      contains '.
      
      CR0003237
      ObjectInspectorServlet: memory leak data package. Verify that after 
      ApplicationContext.setDataPkg() the old dataPkg can be removed by the 
      garbage collector. Remove all RefObjects retrieved by the old dataPkg. 
      
      CR0003228 
      Standard_1.touchNonDerivedFeatures touches derived references. isDerived 
      is not a property of model1:Reference. Use Mode1_1_0.referenceIsDerived() 
      which queries the association's isDerived property. 
      
      CR0003203
      Invoke synchronization callback after rollback 
            
      The current Transaction implementation invokes beforeCompletion() and 
      afterCompletion() callbacks during commit() but not during rollback().      
      
      CR0003246 & SF1199480
      rmic does not accept blanks in JRE path
      
      The build-library.xml in does not allow for blanks in the JRE path when 
      invoking the RMI compiler. 
      
            
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none
     
                    
==============================================================================
Version 1.8.1                                                       2005-04-20
==============================================================================

1.    NEW FEATURES

      CR0003164 
      ObjectInspectorServlet: support binary streams. Support on-demand retrieval 
      of binary streams, i.e. attributes modeled as <<stream>> a: org::w3c::binary.
       
      CR0003137
      In-process deployment

      Example:
      * final static Dataprovider_1ConnectionFactory connectionfactory = new Dataprovider_1Deployment(
          new InProcessDeployment(
            CONNECTOR_URL,
            APPLICATION_URL,
            LOG_DEPLOYMENT_DETAIL ? System.out : null,
            System.err
          ),
          new Model_1Deployment(
            MODELS
          ), 
          JNDI_NAME  
        );

      CR0003154
      Simplify lightweight container launching
               
      Example:
      * final static Dataprovider_1ConnectionFactory connectionfactory = new Dataprovider_1Deployment(
          new RemoteDeployment(
            CONNECTOR_URL,
            APPLICATION_URL,
            LOG_DEPLOYMENT_DETAIL ? System.out : null,
            System.err
          ),
          new Model_1Deployment(
            MODELS
          ), 
          JNDI_NAME  
        );
      * The deployment is automatically destroyed, i.e. the sub-process
        terminated, when the last connection created by the factory is closed.
                               
2.    CHANGES
     
2.0.  CHANGED FEATURES

      CR0003127
      XmlExporter: allow to specify transitive export closure. 
      * referenceFilters: list of reference filters, e.g. 
        xri:@openmdx:../:*/account, xri:@openmdx:../account/:*/address 
      * attributeFilters: map of attribute filters. Key = reference filter, 
        value = Filter 

      CR0003154
      Simplify lightweight container launching
               
      The org.openmdx.kernel.application.process.Subprocess' constructor and
      fork method as well as the lightweight container's multi-argument fork
      method allow for two additional arguments:
      * outputStream 
        The stream obtains data piped from the standard output stream of the 
        process represented by this Subprocess object; or null to discard the         
        data.
      * exceptionStream 
        The stream obtains data piped from the error output stream of the 
        process represented by this Subprocess object; or null to discard the 
        data.
      
2.1.  FIXED BUGS
      
      CR0003172
      Dataprovider configuration logging fails  
      
      A dataprovider proxy in the lightweight container can't invoke its own 
      toString() method. 
      
      "toString()", "hashCode()" and "equals(Object)" invocations must not be 
      delegated to the EJB class but handled by the EJBObject instance.
      
      CR0003173 
      Lightweight Container can't process security configuration entries
      
      <method-permission> entries lead to an OutOfMemory Error.       
            
2.2.  DEPRECATED FEATURES

      CR0003154
      Simplify lightweight container launching
               
      The org.openmdx.kernel.application.process.Subprocess' constructor and
      fork method without output stream and exception stream argument are
      deprecated.
      
      CR0003137
      In-process deployment

      The classes org.openmdx.compatibility.base.application.cci.
      InProcessDataproviderConnectionFactory and org.openmdx.kernel.
      application.client.InProcessDeployment have been deprecated
      in favour of org.openmdx.compatibility.base.application.cci.
      Dataprovider_1Deplyoment and org.openmdx.base.application.deploy.
      InProcessDeployment.

2.3   REMOVED FEATURES
      none
     
                    
==============================================================================
Version 1.8.0                                                       2005-04-10
==============================================================================

1.    NEW FEATURES
      
      CR0003137
      In-process deployment
      
      Simplify in-process deployment by allowing static declaration of the 
      dataprovider connection factory.
      
      The applications and connectors should be lazyly deployed when a 
      dataprovider connection is requested.
      
      Example:
      * protected final static Dataprovider_1ConnectionFactory 
        dataproviderConnectionfactory = new 
        InProcessDataproviderConnectionFactory(
            new InProcessDeployment(
                "file:src/connector/openmdx-2/sql-server-2000.rar",
                "file:src/ear/junit-test.ear",
                System.out,
                System.err
            ),
            "org/openmdx/test/gateway1/NoOrNew"  
        );
      
      CR0000494 
      LightweightContainter Transactions
      
      The LightweightContainer does not support transaction handling.
      It can not play the role of an XA coordinator nor can it managage
      transaction aware resource managers. Applications deployed on the
      LightweightContainer are running in the auto-commit mode of the
      configured resource managers.
      
      The LightweightContainer should be extended as follows: 
      * Add a transaction manager. Provider support the configured
        transaction policies. 
      * Support XA and non-XA resource managers. This is important for
        client deployments where not all resource managers are XA
        compliant. 
      * Support of non-optimistic transactions for clients.
      
      The resource adapter configuration for Microsoft SQL Server 2000 for
      example could look that:      
      * ra.xml:
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE connector PUBLIC "-//Sun Microsystems, Inc.//DTD Connector 1.0//EN" "http://java.sun.com/dtd/connector_1_0.dtd">
        <connector>
        	<display-name>microsoft-sqlserver</display-name>
        	<description>openMDX/Test.Core Microsoft SQL Server Connector</description>
        	<vendor-name>OMEX AG</vendor-name>
        	<spec-version>1.0</spec-version>
        	<eis-type>JDBC</eis-type>
        	<version>2.0</version>
        	<resourceadapter>
        		<managedconnectionfactory-class>org.openmdx.kernel.application.container.spi.sql.ManagedDatabaseConnectionFactory</managedconnectionfactory-class>
        		<connectionfactory-interface>javax.sql.DataSource</connectionfactory-interface>
        		<connectionfactory-impl-class>org.openmdx.kernel.application.container.spi.sql.DatabaseConnectionFactory</connectionfactory-impl-class>
        		<connection-interface>java.sql.Connection</connection-interface>
        		<connection-impl-class>org.openmdx.kernel.application.container.spi.sql.DatabaseConnection</connection-impl-class>
        		<transaction-support>LocalTransaction</transaction-support>
        		<config-property>
        			<config-property-name>UserName</config-property-name>
        			<config-property-type>java.lang.String</config-property-type>
        			<config-property-value>dbUsername</config-property-value>
        		</config-property>
        		<config-property>
        			<config-property-name>Password</config-property-name>
        			<config-property-type>java.lang.String</config-property-type>
        			<config-property-value>dbPassword</config-property-value>
        		</config-property>
        		<config-property>
        			<config-property-name>ConnectionURL</config-property-name>
        			<config-property-type>java.lang.String</config-property-type>
        			<config-property-value>jdbc:microsoft:sqlserver://localhost:1433;databasename=openMDX_test;selectmethod=cursor</config-property-value>
        		</config-property>
        		<authentication-mechanism>
        			<authentication-mechanism-type>BasicPassword</authentication-mechanism-type>
        			<credential-interface>javax.resource.spi.security.PasswordCredential</credential-interface>
        		</authentication-mechanism>
        		<reauthentication-support>false</reauthentication-support>
        	</resourceadapter>
        </connector>
      * openmdx-connector.xml:
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE openmdx-connector PUBLIC "-//openMDX//DTD Connector Extension 1.0//EN" "xri:+resource/org/openmdx/kernel/application/deploy/openmdx-connector_1_0.dtd">
        <openmdx-connector>
        	<resourceadapter>
        		<connectionfactory-jndi-name>jdbc/dataproviders</connectionfactory-jndi-name>
        	</resourceadapter>
        </openmdx-connector>
              
      CR0003132
      Dynamic EJBLocalObject implementation classes  
      
      Use Proxy based EJBLocalObject implementation classes for the 
      lightweight container.        
      
      CR0003130
      ObjectInspectorServlet: multi-pane support for operations. All operations 
      are mapped to one operation pane. Allow to map operations customizable 
      operation panes. This allows to map operation panes to menus.
       
      CR0003126
      ObjectInspectorServlet: allow to pass filter criteria as operation 
      parameter. Allow to pass the stringified form of the current filter as 
      operation parameter field. The fully qualified name of the parameter 
      field is configurable. If an operation has an input parameter with the 
      configured field name the filter is set as field value before operation 
      invocation. 
      
      CR0003118
      ObjectInspectorServlet: allow to store default filter in settings. Add 
      the new filter 'Default' and the new operation 'Set as default'. This 
      allows to set a default filter per grid. The default filter settings 
      are stored in user user settings.

      CR0003116
      ObjectInspectorServlet: new option userHome. When specifying the option 
      userHome, the user settings are loaded/stored in the feature 'settings' 
      in Java property syntax.
      
      CR0003115
      ObjectInspectorServlet: support iconKey and ordering for user-defined 
      filters.
			<void property="iconKey">
				<string>ABC.gif</string>
			</void>			
			<void property="order">
				<array class="java.lang.Integer" length="1">
					<void index="0">
						<int>90</int>
					</void>
				</array>
			</void>
			
			CR0003114
			ObjectInspectorServlet: support ordering of class filters. Support 
			inspector ordering for class filters.
			
			CR0003113
			Ui_1: support ordering of inspectors.
			<org.openmdx.ui1.ElementDefinition name="org:openmdx:workshop1:TeamMember">
				<_object>
					<active>true</active>
					<toolTip>
						<_item>Contact Person</_item>
					</toolTip>
					<label>
						<_item>Contact</_item>
					</label>
					<iconKey>org:openmdx:workshop1:TeamMember</iconKey>
					<order>
						<_item>0</_item>
						<_item>0</_item>
						<_item>40</_item>
					</order>
				</_object>
				<_content/>
			</org.openmdx.ui1.ElementDefinition>
						      
      CR0003108
      Database_1: add dbObject slicedParentRidOnly.
      The 'slicedParentRidOnly' format of a DB_OBJECT contains an index-slice of 
		  an object in one row. The schema is: 
		  0 as object_rid, object_oid, p$$parent_object__rid, p$$parent_object__oid ... 
		  The sliced does not have values for the column object_rid. Instead, it provides 
		  rid and oid for the parent object. This format is useful when the calculation 
		  of the column object_rid is expensive compared to the calculation of the 
		  parent object rid|oid. 

      CR0003072
      ObjectInspectorServlet: support icon keys for code value entries. The
      servlet accepts the new optional feature iconKey for code value entries.
      Code attributes and cells in grids are rendered with the configured icon.
      
      CR0003071
      ObjectInspectorServlet: support for colored code value entries. The
      servlet accepts the new optional features color and backColor. Code
      attributes and grid rows are rendered with the specified colors. 
      
      CR0002292
      Ui_1: extend element definition by skipRow. For various layout configurations 
      it would be nice to have a "field-placeholder" available to better control 
      the layout rendering. For example, it is currently not possible to produce 
      a layout as follows (top cell of 2nd column empty):
      
			+-----+-----+ 
			| fld1|[empty]| 
			+-----+-----+ 
			| fld2| fld3| 
			+-----+-----+   
    
      CR0002851
      ObjectInspectorServlet: support for stated code value entries. The
      servlet accepts the new optional features validFrom and validTo
      for code value entries. Entries with current date outside
      [validFrom, validTo] are not shown in drop downs when editing objects.
      
      CR0003074 
      Enum Pattern for JRE < 1.5 
      
      Enumerations for JRE < 1.5 are sub-classes of 
      org.openmdx.uses.java.lang.Enum. They can't be used in switch 
      statements except when relying on their ordinal number, but 
      identity give the same result.
      
      Example:
      * public class AnEnumeration extends Enum {
          private AnEnumeration() {}
          public final static AnEnumeration X = new AnEnumeration();
          public final static AnEnumeration Y = new AnEnumeration();
          public final static AnEnumeration Z = new AnEnumeration();
          public static AnEnumeration[] values(){
            return (AnEnumeration[]) values(AnEnumeration.class);
          }
          public static AnEnumeration valueOf(String name){
            return (AnEnumeration) valueOf(AnEnumeration.class, name);
          }
        }
      * It is preferred to use
          if(a==AnEnumeration.X){
          } else if (a==AnEnumeration.Y){
          } else if (a==AnEnumeration.Z}
          }
        instead of
          switch(a.ordinal()){
            case 0: // AnEnumeration.X
            break;
            case 1: // AnEnumeration.Y
            break;
            case 2: // AnEnumeration.Z
            break;
          }
        emulating Java 5.0's 
          switch(a){
            case AnEnumeration.X: 
            break;
            case AnEnumeration.Y: 
            break;
            case AnEnumeration.Z: 
            break;
          }
	
      CR0003075
      Ui_1: maximum number of members of object container. Add atribute 
      maxMember to element definition. This restricts the number of elements 
      of an object container. 
      
      CR0003076
      Database_1: make REF entry caching and cache size configurable. The
      following  options are added:
      * enableReferenceCaching
      * referenceCacheSize

      CR0003057
      Ui_1/ObjectInspectorServlet: support for multiple reference panes.
      
                       
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003117
      ObjectInspectorServlet: replace option lastViewedObject by new option 
      accessHistory. Replace the options lastViewedObjectsReference, 
      lastViewedObjectsClass and lastViewedObjectsExclude by accessHistoryReference, 
      accessHistoryClass and accessHistoryExclude option, respectively.
      
      CR0000494 
      LightweightContainter Transactions
      
      The ExtendableUnitOfWork_1's constructor throws a ServiceException if a
      transactional non-optimistic unit of work lacks a user transaction. 
      
      The class itself has been made abstract and its constructor proteced as 
      its only purpose is the unit of work's extendability.
                  
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
            
      CR0003074
      Enum Pattern for JRE < 1.5
      
      Class org.openmdx.kernel.enumeration.ShortEnum deprecated in favour of
      org.openmdx.uses.java.lang.Enum or a Java 2 Stanadrd Edition 5.0 native 
      enum.
      
      CR0003132
      Dynamic EJBLocalObject implementation classes  
      
      The local-home-class attribute in the openMDX specific EJB deployment 
      descriptor has been deprecated and is ignored.

2.3   REMOVED FEATURES

      CR0003074
      Enum Pattern for JRE < 1.5
      
      Package org.openmdx.base.enumeration removed.

      CR0002386
      Kernel referring to Base
     
      Deprecated class org.openmdx.base.exception.BasicException removed.

     
==============================================================================
Version 1.7.1                                                       2005-03-18
==============================================================================

1.    NEW FEATURES
      
      CR0003052
      document1 truncates files in get operation
      
      Provide proxy RMI streams for proy ejb's such as gateways.
                       
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003019
      Database_1: REF table access with all path components. Always include 
      empty (#) components.
      
      CR0002999
      Suspending Connection
      
      Add a connection which allows to suspend the current transaction and to 
      execute DataproviderRequests in no-or-new transaction mode.
      
      Its usage requires the following steps:
      * Configure RequiresNew_1Bean from
        org.openmdx.compatibility.application.dataprovider.transport.ejb.transaction
        as local EJB in the application containing EJBs liking to suspend the
        current transaction.
      * Refer to it as "ejb/dataproviderRequiresNew" in the EJBs liking to 
        suspend the current transaction.
      * Create a LateBindingWrappedConnection_1 to the final (local or remote) EJB 
        in the EJBs liking to suspend the current transaction.
      
      CR0003001
      Support SSL Setup
      
      Two HostnameVerifier implementations added to the 
      org.openmdx.base.net.ssl package except for the JRE 1.3 distribution:
      * AbstractHostnameVerifier
        Accepts for example a certificate with the common name "*.openmdx.org"
        to access "any-sub-domain.openmdx.org".
      * LenientHostnameVerifier
        Accepts for example a certificate with the common name "*.openmdx.org"
        to access "any.level.of.sub-domains.openmdx.org".

      CR0003008
      Database: (re)activate hints.
      
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.7.0                                                       2005-02-26
==============================================================================

1.    NEW FEATURES
      
      CR0002947
      Ui: allow to configure default values for operation input parameters.
      
      CR0002973
      ObjectInspectorServlet: Do not throw away user-entered data if commit 
      fails (e.g. new object, edit object). Currently, if a commit fails, all 
      the data (newly entered or changed by the user) is lost - it is annoying 
      to lose all the manual input just because (for example) 1 string was too 
      long...            
                       
      CR0002975
      Principal Chain Handler. Allow to configure how the principal chain 
      shall be modified based on the current security context. 
      
      The security init parameter may be
	    * null
	      the default value: trust peer and do not modify the principal chain
      * setPrincipalName
        clear the principal chain and add the principal's name
      * setPrincipalString
        clear the principal chain and add the principal's string 
        representation
      * addPrincipalName
        add the principal's name to the principal chain
      * addPrincipalString
        add the principal's string representation to the principal chain
      * Â‹executionContextModifierClassÂ›
        the fully qualified name of a class implementing org.openmdx.
        compatibility.base.dataprovider.cci.ExecutionContextModifier_1_0.
	
      CR0002911 
      http/https based dataprovider transport      
      The server resepctivel client side implementations are:
	    * org.openmdx.compatibility.application.dataprovider.transport.http.to.
	      ejb.Dataprovider_1Servlet 
	    * org.openmdx.compatibility.application.dataprovider.transport.http.
	      lightweight.Dataprovider_1HttpConnectionFactory 	
	  
	    Note:
	    Neither of them support attributes with stereotype <<stream>> yet!
			
      CR0002961
      Ui: add isPassword property to TextBox. This allows to configure 
      password text fields.
      
      CR0002931
      Database_1: improve support for updatable user-defined db objects.
      Currently only possible, if user-defined db object has columns for oid, 
      rid, idx, object_class, etc.
      
      CR0002916
      Ui: support AdditionalElementDefinition for operations.
      
      CR0002915
      Ui: allow definition of DocumentBox.mimeType.
      
      CR0002893
      ObjectInspectorServlet: allow to customize mime type specific rendering.
      
      CR0002946
      add delete operation to XMLImporter 
      
      The operation "remove" deletes an object.
      
      CR0002958 & CR0002983
      RETRIEVAL_SIZE application layer configuration value
      
      "APPLICATION/retrievalSize" defines how many objects (including 
      referenced ones) may be returned during an object retrieval operation.
      
      Default value: 1
      
                       
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0002941
      ObjectInspectorServlet: ui and code data is loaded sorted by their
      file names.
      
      CR0002945
      Database_1: change attribute name to column name mapping in case of digits.
      Underscores in column names are mapped to uppercase letter in attribute name, 
      e.g. <prefix>_c<suffix> ==> <prefix>C<suffix>. The uppercase mapping should 
      not be applied in case a digit follows the underscore, e.g. <prefix>_d<suffix> 
      ==> <prefix>_d<suffix>.
      
      CR0002929
      XmlExporter: improve extension support, e.g. in terms of attribute 
      tagging, subclassing, delegation.
      
2.1.  FIXED BUGS
      
      CR000292
      JMI stream setters      
      Overriden JMI stream setters are not invoked. 
            
      CR0002984
      Database_1: empty REF entries. get/find requests produce empty REF cache 
      entries in case the REF entry does not exist on the database. If a second 
      database instance creates a new REF entry on the database, the empty cache 
      entry is not updated in the first instance.                  
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.6.2                                                       2005-01-15
==============================================================================

1.    NEW FEATURES
      
      CR0002904
      Database_1: add DB/2 support.
      
      CR0002900
      Database_1: string replacement macros.
      Add support for string replacement macros: stringMacroName[i], 
      stringMacroValue[i], stringMacroColumn[i].
      
      CR0002897
      Dependency Aware Explorer
      
      The Dependency Aware Explorer is used by replacing 
      org.openmdx.compatibility.runtime1.layer.application.Explorer_1 by
      DependencyAwareExplorer_1 in openMDX' gateway configuration.
      
      It tries to resolve the folowing oject request dependencies:
      * Requests creating an object have to be executed before requests
        referring to it
      * Requests removing an object have to be executed after requests
        referring to it

      It takes the following steps:
      1. Try to bundle all dataprovider requests belonging to the same exposed 
         path and to resolve the dependencies between these bundles and execute
         the bundles in the resulting order unless there are cycles.
      2. Try to resolve the dependencies between the individual dataprovider 
         requesst step 1 leads to cycles and execure the dataprovider requests
         in the resulting order unless there are cycles by bundling all 
         consecutive requests belonging to the same exposed path.
      3. Execute all dataprovider requests in the original order if step 2 leads
         to cycles by bundling all consecutive requests belonging to the same 
         exposed path. 
                 
      CR0002818
      Qualifier Options
      
      The plugins should offer different possibilities to create qualifiers 
      when they are unspecified upon object creation:
      1. UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (the default) 
      2. UID: uuuuuuuuuuuuuuuuuuuuuu 
      3. SEQUENCE: 0 .. 999999999999999999 
      4. URN: (urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx) 
      Where
      x stands for [0-9a-f] 
      u stands for [0-9A-Fa-f+\-] 

      A SEQUENCE's range is
      * SEQUENCE.MIN_VALUE = 0 
      * SEQUENCE.MAX_VALUE = 10^18-1 
      When a new object is created then the SEQUENCE's current value is
      * unchanged if the qualifier contains any other character than the 
        digits 0 to 9 or if its value is outside the SEQUENCE's range 
      * set to Long.parseLong(qualifier)+1 otherwise
      
      To get a new UID for example: 
        UUIDGenerator uuidGenerator = UUIDs.getGenerator();
        String uid = UUIDConversion.toUID(uuidGenerator.next());
      For classes extending Layer_1 there is a convenience method 
        uidAsString()
      which returns
      * a UUID unless APPLICATION/compressUID is on 
      * a UID if APPLICATION/compressUID is on 
      
      The plugins create the following default qualifiers depending on their 
      configuration:
      * UUID as default 
      * UID if APPLICATION/compressUID is on 
      * SEQUENCE if APPLICATION/sequenceSupported and 
        PERSISTENCE/sequenceSupported is on 
      * URN if SEQUENCE access fails 
      
      
2.    CHANGES
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0002855
      Database_1: Database_1. GenericDbObject uses AbstractDatabase_1.
      setPreparedStatementValue().
      
      CR0002898
      Database_1: fix PostgreSQL support.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.6.1                                                       2005-01-09
==============================================================================

1.    NEW FEATURES
      
      CR0002862
      ObjectInspectorServlet: new option lastViewedObjectsExlude[i] allows
      to exclude configured objects from last viewed objects list.
      
      CR0002887
      Qualifier placeholder replacement  
      
      Allow to configure by what qualifier palceholders are replaced:
      * UUID
        Flag APPLICATION/compressUID is off (default)
      * UID 
        Flag APPLICATION/compressUID is on
        
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0002869
      Database_1: # as null character for REF table columns.
      
2.1.  FIXED BUGS

      CR0002814
      ObjectInspectorServlet: GUI is not properly updated after the
      execution of an operation.
      
      CR0002872
      ObjectInspectorServlet: session memory is not released.
      
      CR0002864 & SF1094893
      openMDX/Ant installation required  
      
      In order to build any other openMDX 1.6.0 subproject one has 
      1. to install openmdx-1.6.0-ant 
      2. to call "ant install-src" in the ant subproject 
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.6.0                                                       2005-01-01
==============================================================================

1.    NEW FEATURES

      CR0002826
      Database_1: c$ columns in _REF table NOT NULLABLE. The c$ columns must
      be defined as NOT NULL. Unused component columns are filled with blanks.
      This allows to set a unique constraint on the columns c$0..c$n. 
      
      IMPORTANT: existing REF tables must be migrated:
      1) UPDATE ..._REF SET c$i = '' WHERE c$i IS NULL
      2) define c$i as NOT NULL
      
      The new configuration option maxReferenceComponents defines the number
      of c$i columns in a REF table which is managed by Database_1. Default
      value is 16.
      
      CR0002856
      Database_1. minimize REF table access. Two-way LRU reference cache 
      with size 10'000 added.
            
      CR0002777
      ObjectInspectorServlet: New calendar control 
      (http://sourceforge.net/projects/jscalendar/) added and dropped the 
      existing popup-calendar.
      
      CR0002628
      ObjectInspectorServlet: user defined date fields require date + time input.
      Fields of date are now supported.

      CR0002813
      Database_1: optimize column size for references. 
      Path values are stored by default in the path.toUri() format. The 
      path macros allow to modify path values before they are stored. 
      E.g. a path of the form 
      xri:@openmdx:org.openmdx.test.app1/provider/Sliced/segment/Standard/...
      can be modified to be stored as xri:*app1.Sliced.Standard/... with
      a macro pathMacroName[i] = app1.Sliced.Standard and pathMacroValue[i] =
      xri:@openmdx:org.openmdx.test.app1/provider/Sliced/segment/Standard. 
      This feature can be used e.g. for path compression and therefore to 
      save space on database tables.
      
      CR0002730
      JMI: get(), set() operations for streams  
      The get() operations for attribute of stereotype stream should follow the following pattern:
      * long getX(Writer, long); // for character data 
      * long getX(OutputStream, long); // for binary data  
      The set() operations for attribute of stereotype stream should follow the following pattern:
      * void setX(Reader, long); // for character data 
      * void setX(InputStream, long); // for binary data  
      
      CR0002815
      StringExpression 
      
      Add a string expression pattern factory in addition to the existsing SQL 
      and regular expression pattern factories.  
      
      CR0002770 & CR0002824 
      UUID conversion
      
      There is a request to represent a UUID in another form than in its 
      standard string representation xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, 
      where each x stands for a hexadecimal digit.
      
      The preferred compact representation would be a BASE64 encoding of its 
      byte[16] representation except for all '/' being replaced by '-' and the 
      two trailing '=' removed. This would reduce its size from the string 
      representations 36 to 22 ASCII characters.
      
      The preferred URN representation follows 
      http://www.ietf.org/internet-drafts/draft-mealling-uuid-urn-04.txt. 
      
      Examples:
      * UUID:   00000000-0000-0000-0000-000000000000
        URN:    urn:uuid:00000000-0000-0000-0000-000000000000
        UID:    AAAAAAAAAAAAAAAAAAAAAA
        Base64: AAAAAAAAAAAAAAAAAAAAAA==
      * UUID:   49b8c970-1a23-42a7-a094-202b746524f9
        URN:    urn:uuid:49b8c970-1a23-42a7-a094-202b746524f9
        UID:    SbjJcBojQqeglCArdGUk+Q
        Base64: SbjJcBojQqeglCArdGUk+Q==
      * UUID:   5bf95a70-538e-11d9-badc-5f1b0a0101b4
        URN:    urn:uuid:5bf95a70-538e-11d9-badc-5f1b0a0101b4
        UID:    W-lacFOOEdm63F8bCgEBtA
        Base64: W/lacFOOEdm63F8bCgEBtA== 
        
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0002825
      Database_1: remove non-prepared SQL statements.
      
      CR0002816
      Allow *** in an XRI
      
      There are three terminal wildcards:
      1. one asterisk for the remainder of the sub-segment ("*")
      2. two asterisks for the remainder of the semgent ("**")
      3. three asterisks for the remainder of the XRI ("***")
      
      Examples:
      * Paths:
            "A::B/provider/::*/segment/%"
            "A::B/provider/::org*/segment/org%"         
            "::*/provider/::org::*/segment/org::%"         
      * spice URIs: 
            "spice://A:B/provider/:*/segment/%"
            "spice://A:B/provider/:org*/segment/org%"
            "spice://:*/provider/:org:*/segment/org:%"
      * XRIs: 
            "xri:@openmdx:A.B/provider/**/segment/***"
            "xri:@openmdx:A.B/provider/org**/segment/org***"
            "xri:@openmdx:**/provider/org:**/segment/org:***"
            
      CR0002770 & CR0002824 
      UUID
      
      The UUID interface has changed from the Java 1.5 beta template
      to the JavaTM 2 Platform Standard Edition 5.0 template.
      
2.1.  FIXED BUGS
      
      CR0002852
      Database_1: NullPointer in identity filter.
      
      CR0002837 [ 1040749 ] 
      ObjectInspectorServlet: Bug with date format.
      When trying to set a date in the user defined field Date0, I get the 
      following exception : 
			  java.lang.IllegalArgumentException: Cannot format given Object as a Date
			  java.text.DateFormat.format(DateFormat.java:279)
			  java.text.Format.format(Format.java:133)
			  org.openmdx.application.gui.generic.servlet.attribute.DateValue.getValue(DateValue.java:106)
			
      CR0002841
      ObjectInspectorServlet: Corrupt views  
      Views and the contained ui elements are corrupt in the following cases: 
      * session serialize/deserialize --> views are not stored in session anymore. 
        They are managed as servlet members 
      * multiple servlet instances remove elements in ui provider --> NOT_FOUND --> 
        each servlet stores ui element in own segment. Each servlet remembers list 
        of asserted inspectors.  

      CR0002823
      Broken Link
      
      Accessing a broken link in a reference throws a NOT_FOUND exception the 
      first time it is invoked and a NOT_AVAILABLE exception later on.  
      
      Accessing a broken link in a reference should always 
      * throw a NOT_FOUND exception in openMDX 1 for compatibility reasons
      * throw a NOT_AVAILABLE exception from openMDX 2 on
      
      CR0002829
      jmiObject.removeX() behaviour
      
      The sequence
        segment.removeX(qualifier); 
        //... 
        segment.addX(qualifier, x); 
      failed with a DUPLICATE exception.
      
      CR0002860
      core/ant dependency 
      
      Add a dependency rule to openMDX/Core's build file. 
      
2.2.  DEPRECATED FEATURES

      CR0002816
      Deprecated XRI segments
       
      ":*" and "%" segments must be replaced by "**" respectively
      "***" in XRIs because
      1. ":*" will represent a single non-reassignable sub-segment in future
      2. "%" is used as escape character iand be followed by two hexadecimal 
          digits.
      That's why "new Path(String)" can accept the deprecated segment values 
      for a limited time only!
            
      Examples:
      * Path:
            new Path("xri:@openmdx:*/provider/:*/segment/%")
            representing "::*/provider/::*/segment/%"
      * spice URI: 
            "spice://A:B/provider/:*/segment/%"
      * XRI: 
            "xri:@openmdx:**/provider/**/segment/***"
            
2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.5.3                                                       2004-12-14
==============================================================================

1.    NEW FEATURES

      CR0002798
      LogEntityReader: allow streaming of log events to ObjectOutputStream.
      
      CR0002756
      ObjectInspectorServlet: improve rendering of pages for right-to-left 
      languages (rtl).
      
      CR0002503 
      Application Client Deployment.
      The lightweight container should support application clients according to 
      the J2EE specification (http://java.sun.com/j2ee/1.3/download.html#platformspec, 
      Chapter J2EE.9).
      
      CR0002774
      ObjectInspectorServer: [edit newly created object] in addition to 
      [view newly created object].
      
      CR0002693
      ObjectInspectorServlet: pass language selection from login page to 
      application. 
      
      CR0002421
      Context-sensitive code tables. 
      ObjectInspectorServlet: the names of code value containers can be of
      the following format:
      - fully qualified attribute name 
      - [NEW] <fully qualified name of composite reference type>:<attribute name>, 
        i.e. code tables can be defined for a type hierarchy.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002784       
      Replace moduleID by moduleURI. The openMDX deployment configuration parser relies 
      on its module ids (the module URIs last component) being unique.

2.1.  FIXED BUGS

      CR0002802
      ObjectInspectorServlet: Add option initPrincipal. initPrincipal allows to 
      configure a principal which is used during init for loading codes and data.
      
      CR0002800
      ObjectInspectorServlet: OK and CANCEL or not language-specific.
      
      CR0002599
      ObjectInspectorServlet: pages which are used in different contexts must prefix 
      elements with request.getContextPath(), e.g. Login.jsp.
      
      CR0002698
      ObjectInspectorServlet: fix copy/paste of object references from one browser
      window to another.
      
      CR0002737
      ObjectInspectorServlet: Lookup values corrupt when reusing input parameters.
      
      CR0002752
      ObjectInspectorServlet: improve cookie handling in Login.jsp.
      
      CR0002743
      Filtering date or dateTime fields throws class cast exception.
       
      CR0002759 
      ObjectInspectorServlet: Invalid XRI in web.xml template.
      A path like 'A::B/provider/${PROVIDER}/segment/${SEGMENT}' can't be expressed 
      as 'xri:@openmdx:A.B/provider/${PROVIDER}/segment/${BSEGMENT}' because '{' and '}' 
      are not allowed in an XRI segment.
      
      CR0002739 & SF1031875
      ObjectView_1 and unit of work life span
      
      ObjectView_1 should support 'unit of work life span'

      CR0001276
      URN schema
      
      According to the IETFs directions (dropping of non-IETF trees, no 
      hierarchical URNs yet) we are going to concentrate on OASIS' XRI 
      specification:
      1. Paths: used in compatibility mode only 
      2. spice URIs: current database representation 
      3. XRIs: openMDX standard run-time and external representation 
      4. XRI derived IRIs: the preferred future database representation 
      5. XRI derived URIs: the future fallback database representation for 
         Unicode incapable databases 

      Consequences
      * Support for the "vnd-openmdx-iri" protocol has been discontinued 
      * The "spice" protocol will be deprecated with openMDX 2. 
      
      Examples
	  1.    "" 
			"::*" 
			"A::B" 
			"A::B/::*" 
			"A::B/Fran\u00e7ois"  
			"A::B/provider/P::Q/segment/S.T/object/RR_1;state=0" 
			"A::B/provider/P::Q/segment/S.T/object/012345;transient" 
			"A::B/(xri::@openmdx::B.B0//B1)/C" 
			"A::B/(xri::@openmdx::B//B0%3AB1)/C" 
			"A::B/provider/${PROVIDER}/segment/${SEGMENT}" 
			"A::B/provider/::*/segment/%" 
			
			
	  2.	"spice:/" 
			"spice://:*" 
			"spice://A:B" 
			"spice://A:B/:*" 
			"spice://A:B/Fran%c3%a7ois" 
			"spice://A:B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"spice://A:B/provider/P:Q/segment/S.T/object/012345;transient" 
			"spice://A:B/(xri:@openmdx:B.B0%2fB1)/C" 
			"spice://A:B/(xri:@openmdx:B%2fB0%253AB1)/C" 
			"spice://A:B/provider/$%7bPROVIDER%7d/segment/$%7bSEGMENT%7d" 
			"spice://A:B/provider/:*/segment/%" 
		
	   3.	"xri:@openmdx" 
			"xri:@openmdx:*" 
			"xri:@openmdx:A.B" 
			"xri:@openmdx:A.B/:*" 
			"xri:@openmdx:A.B/Fran\u00e7ois" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/012345;transient 
			"xri:@openmdx:A.B/(xri:@openmdx:B.B0/B1)/C" 
			"xri:@openmdx:A.B/(xri:@openmdx:B/B0%3AB1)/C" 
			"xri:@openmdx:A.B/provider/$%7BPROVIDER%7D/segment/$%7BSEGMENT%7D" 
			"xri:@openmdx:A.B/provider/:*/segment/:**" 
			"xri:@openmdx:A.B/(xri:@openmdx:B/B0%3AB1)/C" 
			"xri:(ejb/e.jar)" 
			"xri:(../../somewhere/else/e.jar)" 
			
			
	   4.	"xri:@openmdx" 
			"xri:@openmdx:*" 
			"xri:@openmdx:A.B" 
			"xri:@openmdx:A.B/:*" 
			"xri:@openmdx:A.B/Fran\u00e7ois" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/012345;transient" 
			"xri:@openmdx:A.B/(xri:@openmdx:B.B0%2FB1)/C" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:@openmdx:A.B/provider/$%257BPROVIDER%257D/segment/$%257BSEGMENT%257D" 
			"xri:@openmdx:A.B/provider/:*/segment/:**" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:(ejb%2Fe.jar)" 
			"xri:(..%2F..%2Fsomewhere%2Felse%2Fe.jar)" 
			
			
	   5.	"xri:@openmdx" 
			"xri:@openmdx:*" 
			"xri:@openmdx:A.B" 
			"xri:@openmdx:A.B/:*" 
			"xri:@openmdx:A.B/Fran%C3%A7ois" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/012345;transient" 
			"xri:@openmdx:A.B/(xri:@openmdx:B.B0%2FB1)/C" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:@openmdx:A.B/provider/$%257BPROVIDER%257D/segment/$%257BSEGMENT%257D" 
			"xri:@openmdx:A.B/provider/:*/segment/:**" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:(ejb%2Fe.jar)" 
			"xri:(..%2F..%2Fsomewhere%2Felse%2Fe.jar)" 
               
      Note:

2.2.  DEPRECATED FEATURES

      CR0001276
      URN schema

      Illegal XRIs such as "xri:@openmdx:A.B/provider/:*/segment/%" should be 
      replaced as soon as possible.

2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.5.2                                                       2004-11-05
==============================================================================

1.    NEW FEATURES

      CR0002643 
      synchronized access to data source 
      
      For IBM WebSphere Application Server use org.openmdx.compatibility.
      application.dataprovider.transport.ejb.websphere.Dataprovider_1Bean 
      instead of org.openmdx.compatibility.application.dataprovider.transport.
      ejb.server.Dataprovider_1Bean, which is located in the 
      openmdx-application.websphere.jar. 
      
      CR0002673
      ObjectInspectorServlet:: support for user-defined exceptions. User-defined
      exception domain can be configured in web.xml.
      
      CR0002697
      Database_1: support java.sql.Clob.
      
      CR0002684
      "enhancement" for filterable. Ui element definitions for inspectors
      now accept the option 'filterable' which allows to customize the
      class filters.
      
      CR0002516 
      Re-connection support in LightweightContainer
      
      Its now pssible to stop and restart the LightweightContainer whithout
      need to restart for example a Tomcat instance connecting to the
      LightweightContainer.
      
      CR0002689 
      DatagramPacketFormatter  

      Add a datagram packet formatter to org.openmdx.kernel.text.format.  
      
      CR0002673
      ObjectInspectorServlet:: support for user-defined exceptions.
      
      CR0002554
      ObjectInspectorServlet: successful create/new operation should return 
      URL of created object.
      
      CR0002653
      ObjectInspectorServlet: add loadData option. Data is only loaded when 
      option loadData=true. 
      
      CR0002652
      ObjectInspectorServlet: nested grid tabs (e.g. fly-out or expand for 
      nested levels).
      
      CR0002626
      ObjectInspectorServlet: improved 'forward-scrolling' in Grid.
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002514 & SF1009767
      Platforms included in 'ant all'  
      
      "ant all" should be restricted to the platforms included in the 
      distribution.  

      Each platform configuration is able to set the build.exclude.platform
      property in order to exclude istelf from the build process due to the
      lack of some prerequisites.
      
      CR0002706
      ApplicationController  
      
      The ApplicationController should not refer to org.openmdx.application 
      classes as it belongs to the openmdx-base.jar.  
      
      Rely on inheritance instead of configuring AppLog directly.  
                
2.1.  FIXED BUGS
      
      CR0002672
      ObjectInspectorServlet:: session is not serializable.
      
      SF1036210
      XMISchemaWriter: optimize XMISchemaWriter.spaces().
      
      SF1036211
      AttributeValue: use method overriding.

      CR0002671 
      ant clean not complete  
      
      Ant clean leaves out the platform specific deliverables.  
            
      CR0002651
      ShowObject.jsp: fix img tags.
      
      CR0002640
      Erroneous XMLGregorianCalendar implementation
      
      To correct the prolem we had to shift from the Java 2 Standard Edition
      1.5.0 Beta API to the Java 2 Standard Edition 1.5.0 API, i.e.
      XMLGregorianCalendar and Duration are now abstract classes to be created
      by a DatatypeFactory instance!
      
      CR0002635
      Database_1: remove() does not remove all contained objects.
      
      CR0002634
      RefObject_1 ignores compatibility option throwNotFoundIfNull. If 
      throwNotFoundIfNull is set to true, RefObject_1 does not throw NOT_FOUND 
      as expected. 
      
      CR0002630
      ImportXml

      org.openmdx.compatibility.base.dataprovider.replication.ImportXml must
      create a (deprecated) LightweightContainer_1 instance in order to have
      access to the dataproviders configured in deployment configuration XML
      files.
      
      CR0002633
      MatchResult implementation  
      
      MatchResult.groupCount() 
      * was incorrect up to 1.5.0, i.e. returned 'groupCount + 1' 
      * is correct for JRE 1.4 from 1.5.1 on 
      * should be corrected for JRE 1.3 as well 

      StandardDbObject relies on the erroneous behaviour and has to e adapted 
      together with all foreign classes using MatchResult.groupCount()!
      
      CR0002645 
      j2ee-apis
      
      Avoid unnecessary rebuilds 
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      
      CR0002716
      ShiftOne usage  
      
      Remove the ShiftOne classes from the distribution as they are not going 
      to be used by the openMDX framework .
      

==============================================================================
Version 1.5.1                                                       2004-10-05
==============================================================================

1.    NEW FEATURES

      CR0002624
      DelegatingObjectFactory  
      
      Replace the 
      org.openmdx.kernel.naming.tomcat.LightweightContainerLookupFactory by 
      the more general 
      org.openmdx.kernel.naming.tomcat.DelegatingObjectFactory. 
      
      The delegating object factory's configuration values are "remoteName" 
      (to be used to lookup the object in the delegate initial context) and 
      any JNDI context properties, e.g.
      * jndiName="org/openmdx/gateway/NoOrNew" 
      * java.naming.provider.url="//localhost:19523/org.openmdx.rmi.naming" 
      * java.naming.factory.initial=
        "org.openmdx.kernel.naming.initial.ContextFactory"  
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002432
      Regular Expression Engine  

      The jre-1.4 editon should use the JRE's regular expression engine.

      This would replace the org.openmdx.uses.org.apache.regexp package. 

                
2.1.  FIXED BUGS
      
      CR0002511
      Mis-coded characters 

      Non-ASCII characters hsould be escaped as the source files are stored
      with ISO-Latin-1 encoding.

      The following characters have been replaced by their unicode escapes:
      * '\u00ab' 
      * '\u00bb'

2.2.  DEPRECATED FEATURES

      CR0002624
      DelegatingObjectFactory  
      
      Replace the 
      org.openmdx.kernel.naming.tomcat.LightweightContainerLookupFactory by 
      the more general 
      org.openmdx.kernel.naming.tomcat.DelegatingObjectFactory. 

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.5.0                                                       2004-09-26
==============================================================================

1.    NEW FEATURES
      none
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                
2.1.  FIXED BUGS
      
      CR0002611
      Ui_1: active=true override not possible in subclass. if an element 
      definition is set to active=false in a class X it can not be set to 
      active=true in class Y, if Y is subclass of X.
       
      CR0002607
      ObjectInspectorServlet: classes without customized icon cannot be opened 
      from grid.
      
      CR0002606
      ObjectInspectorServlet: changeable=false should hide 'create Object' 
      button.
      
      CR0002603
      ObjectInspectorServlet: ui refresh not working. Automatic ui refreshing 
      works again.

      CR0002608
      Unclear Error Message
      
      org.openmdx.compatibility.base.application.j2ee.SessionBean_1 tried to 
      load the org.openmdx.compatibility.base.application.cci.Application 
      class from the system class path while it is to be found in the 
      openmdx-base.jar.  
   
      The deprecated org.openmdx.compatibility.base.application.cci.Application 
      class is no longer loaded by 
      org.openmdx.compatibility.base.application.j2ee.SessionBean_1.  
      
      CR0002604
      NotSerializableException: 
      org.openmdx.compatibility.base.dataprovider.transport.rmi.RMIMapper 
      
      happens e.g. during JBoss shutdown.
      
      CR0002542
      MarshallingSet behaves like a Collection
      
      MarshallingSet implements Set but behaves like a Collection.
      
      Now the marshalling set's add operation tests the containment before
      delegating to a Collection's add method unless the collection is itself
      a Set.      
      
2.2.  DEPRECATED FEATURES

      CR0002399
      Application Context Replacement 
      
      ApplicationServerManager_1 and WlsManager_1 have been deprecated.

2.3   REMOVED FEATURES

      CR0002432
      Regular Expression Engine  

      The jre-1.4 editon uses the JRE's regular expression engine.

      The org.openmdx.uses.org.apache.regexp package has been removed from 
      the jre-1.4 edition.



==============================================================================
Version 1.4.3                                                       2004-09-20
==============================================================================

1.    NEW FEATURES
      
      CR0002431
      StackTrace API. The jre-1.4 edition uses the JRE's stack trace api.
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.4.2                                                       2004-09-17
==============================================================================

1.    NEW FEATURES
      
      CR0002574
      ObjectInspectorServlet: support for option loadCodes. Codes are verified 
      each time on servlet startup. loadCodes=false should allow to skip 
      loading.
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002431 
      StackTrace API

      The jre-1.4 edition should use the JRE's stack trace api.
                
2.1.  FIXED BUGS
      
      CR0002577
      ClassCast exception in RefObject_1. Velocity template fixed which produces 
      refGetValue() with wrong signature.
      
      CR0002596
      ObjectInspectorServlet: remove trailing empty strings for loaded codes.
      Oracle maps empty strings to NULL values. When using Oracle, the 
      Database_1 plugin reports errors for replace requests with objects having 
      trailing string values with length zero.
       
      CR0002572
      UTF-8: can not get objects with n-byte char in qualifier.
      
      CR0002570
      Database_1: Complex check in abstract_database_1 is not case sensitive.

      CR0002573
      ObjectInspectorServlet: remove static members. Some static members 
      prevent deployment of multiple applications.
      
      CR0001950 
      Find Request with duplicate entries in the result
      
      This bug can be reproduced in plugins using JMI based delegation.
      
      CR0002553
      Logger displays wrong Class, Method and Line
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.4.1                                                       2004-08-31
==============================================================================

1.    NEW FEATURES
      
      CR0002536
      UTF-8 support for ObjectInspectorServlet.
      
      CR0002167
      Database_1: support Firebird 1.5+. Sub-Selects of the form SELECT * FROM
      (SELECT ...) are eliminated for sliced db object types. The format generic
      is NOT supported. The filter SOUNDS_LIKE is NOT supported.

      CR0002167
      Database_1: support PostgreSQL 7.2+. All plugin features are supported.

      CR0002549
      Additional getCause() method
      
      Extend BasicException.Wrapper by a new getCause(String) method.
      
      /** 
       * Returns the cause belonging to a specific exception domain. 
       * 
       * @param exceptionDomain the desired exception domain, 
       * or <code>null</code> to retrieve the initial cause. 
       * 
       * @return either the cause belonging to a specific exception domain or 
       * the initial cause if <code>exceptionDomain</code> is 
       * <code>null</code>. 
       */ 
       public BasicException getCause( 
           String exceptionDomain
       ); 
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002526
      GridControl: change default operator for strings from SOUNDS_LIKE 
      to IS_LIKE.
      
      CR0002538
      Add locale fallback to ObjectInspectorServlet. Add locale fallback based 
      on language instead of fully qualified locale string. The fallback
      algorithm works as follows:
      - Iterate all locales configured in web.xml starting from 0, i.e.
        locale[0], locale[1], ..
      - Try to load resources from locale i, i.e. config/code/<locale i>,
        config/ui/<locale i>, config/texts/<locale i>. 
      - If no resources are found at locale i fallback to resources of 
        locale j, where j = max(J), J = {0} + {j, locale[i].lang == locale[j].lang}.
      If e.g. the locales en_US, de_CH and de_DE are configured and no resources
      are available for de_DE then de_DE falls back to de_CH.

          
2.1.  FIXED BUGS
      
      CR0002520
      Exception while Xml-Importing. _operation="update" is now handled
      correctly: the object is now stored with correct digest.
      
      CR0002547 [ 1018266 ]
      XMIExporter throws NullPointer for top-level classes. A NullPointer is 
      thrown for non-scoped classes, i.e. is located top-level. Non-scoped 
      classes are not supported by openMDX --> throw NOT_SUPPORTED exception 
      instead.
      
      CR0002543
      ObjectInspectorServlet: modify field defined as AlternateElementDefinition 
      not possible.
      
      CR0002519
      AttributeValue.getValue() throws NullPointer.
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.4.0                                                       2004-08-18
==============================================================================

1.    NEW FEATURES
      
      CR0002167
      Database_1: support PostgreSQL.
      
      CR0002478
      prepare target  
      
      An Ant "prepare" target should be added to unify the usage of source and 
      binary distributions.  
      
      The target should do the following:
      * Do nothing in case of a binary distribution 
      * Delegate to "install-bin" in case of a generic distribution 
      * Delegate to "deliverables" in case of a source distribution 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002518  
      Java2 Project  
      
      Put Enterprise Edition and Extension Libraries into a separate project.  
      
      The libraries will be moved from core/thirdparty to java2.  

      CR0002477 
      [ 1002026 ] XmlImporter  
      
      This class does not properly handle Whitespace in XML:      
      * This XML fails: 
        <deploymentOrder> 
          1002 
        </deploymentOrder> 
      * This XML works: 
        <deploymentOrder>1002</deploymentOrder> 
        
      The XML Importer is going to trim the input data for all types 
      except org::w3c::string 

          
2.1.  FIXED BUGS
      
      CR0002491
      XmlImporter: wrong set/create semantics when target is Map.
      XmlImporter currently implements remove/create behaviour ignoring the 
      user-defined _operation=".." setting. 

      CR0002441
      Database_1: type configuration does not support non-wildcard object ids.
      Database_1.getTypeConfigurationEntry() now uses path.isLike() method.
      
      CR0002385
      Bug fixed in multiplicity handling in Model.verifyObject().

      CR0002513
      NullPointerException when deploying a ejb to Wls 8
      
      You should be able to
      * leave out 
        -Dorg.openmdx.compatibility.base.application.cci.Application.register=
        <startup-class> unless you rely on a deployment configuration XML file 
      * rely upon -Dweblogic.Name=<server-name>
      * define -Dorg.openmdx.compatibility.base.application.j2ee.domain=
        <domain-name>
         
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.3.6                                                       2004-08-01
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                  
2.1.  FIXED BUGS
      
      CR0002441
      Database_1: type configuration does not support non-wildcard object ids.
      Database_1.getTypeConfigurationEntry() now uses path.isLike() method.
      
      CR0002385
      Bug fixed in multiplicity handling in Model.verifyObject().
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.5                                                       2004-07-16
==============================================================================

1.    NEW FEATURES

      CR0002395
      MultiLineStringRepresentation marker interface 
      
      Objects with a toString() method returning a multi-line string 
      representation of themselves should implement the 
      MultiLineStringRepresentation marker interface.
      
      CR0002359
      JRE 1.4 support
      
      Alpha release of the jre-1.4 platform support.
            
      CR0002422
      Multi-Edition support
      
      The new mandatory project.platform.list (e.g. "jre-1.4/jre-1.3")
      which to which values build.target.platform will be set (in the
      given order) by an "ant all" command. The values are separated 
      by a slash character ('/'). The last value is the default for
      all ant targets except "all".


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002396
      ResourceAdapterDocorator Properties  

      Use the resource 
      org/openmdx/kernel/application/deploy/jdbc-driver-url.properties to 
      define the well-known URL/Driver mappings.
      
      Its current entries are:
      * com.microsoft.jdbc.sqlserver.SQLServerDriver jdbc:microsoft:sqlserver:
      * weblogic.jdbc.mssqlserver4.Driver            jdbc:weblogic:mssqlserver4:
      * oracle.jdbc.driver.OracleDriver              jdbc:oracle:
      * com.sap.dbtech.jdbc.DriverSapDB              jdbc:sapdb:

      CR0002422
      Multi-Edition support
      
      An additional  platform directory (e.g. jre-1.4, jboss-3, ...) has been  
      introduced where necessary.

      CR0002423 
      Velocity Log System  

      Tell the velocity engine to use the openMDX Log System.  
      
      CR0002430
      XML-Fragements  

      Could the XML-Fragments be replaced by XML-Documents?
      
      If they were XML-Documents one could use XML-Editors such as XML-Spy to edit 
      them.  

      The XML Fragments have been replaced by complete ant project documents.
                  
2.1.  FIXED BUGS
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      A few classes had to be moved from kernel to base or vice versa. 
      
2.2.  DEPRECATED FEATURES
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      As a consequence org.openmdx.base.exception.BasicException has been 
      deprecated in favour of org.openmdx.kernel.exception.BasicException. 

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.5                                                       2004-07-27
==============================================================================

1.    NEW FEATURES
      
      CR0002257
      ObjectView plugin. 

      ObjectView plugins allow to prepare temporary (unit of work) application-level 
      objects. The objects are analogous to rows in SQL views. E.g. a code provider 
      prepares code table entries according to definitions (templates, views, entries) 
      retrieved from a code definition provider. Or a calendar provider prepares
      calendar, year and day objects (see sample org:openmdx:test:calendar1 and
      TestObjectView_1).
      
      CR0002440
      Component deployment order  
      
      Keep the components deployment in the same order as they appear in the 
      module's XML file.  
      
      The modules are deployed in application.xml's order at the moment, while a 
      module's components are deployed in any order.  

      CR0002408 
      Error-message when resolving manifest class-paths
      
      The LighweightClassLoader validates now all URLs.


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002311 & CR0002413
      ejbCreate in activate  
      
      Use LateBindingConnection_1 in Dataprovider_1 EJB activation code.  
                  
2.1.  FIXED BUGS

      none      
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.5                                                       2004-07-16
==============================================================================

1.    NEW FEATURES

      CR0002395
      MultiLineStringRepresentation marker interface 
      
      Objects with a toString() method returning a multi-line string 
      representation of themselves should implement the 
      MultiLineStringRepresentation marker interface.
      
      CR0002359
      JRE 1.4 support
      
      Alpha release of the jre-1.4 platform support.
            
      CR0002422
      Multi-Edition support
      
      The new mandatory project.platform.list (e.g. "jre-1.4/jre-1.3")
      which to which values build.target.platform will be set (in the
      given order) by an "ant all" command. The values are separated 
      by a slash character ('/'). The last value is the default for
      all ant targets except "all".


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002396
      ResourceAdapterDocorator Properties  

      Use the resource 
      org/openmdx/kernel/application/deploy/jdbc-driver-url.properties to 
      define the well-known URL/Driver mappings.
      
      Its current entries are:
      * com.microsoft.jdbc.sqlserver.SQLServerDriver jdbc:microsoft:sqlserver:
      * weblogic.jdbc.mssqlserver4.Driver            jdbc:weblogic:mssqlserver4:
      * oracle.jdbc.driver.OracleDriver              jdbc:oracle:
      * com.sap.dbtech.jdbc.DriverSapDB              jdbc:sapdb:

      CR0002422
      Multi-Edition support
      
      An additional  platform directory (e.g. jre-1.4, jboss-3, ...) has been  
      introduced where necessary.

      CR0002423 
      Velocity Log System  

      Tell the velocity engine to use the openMDX Log System.  
      
      CR0002430
      XML-Fragements  

      Could the XML-Fragments be replaced by XML-Documents?
      
      If they were XML-Documents one could use XML-Editors such as XML-Spy to edit 
      them.  

      The XML Fragments have been replaced by complete ant project documents.
                  
2.1.  FIXED BUGS
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      A few classes had to be moved from kernel to base or vice versa. 
      
2.2.  DEPRECATED FEATURES
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      As a consequence org.openmdx.base.exception.BasicException has been 
      deprecated in favour of org.openmdx.kernel.exception.BasicException. 

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.4                                                       2004-07-16
==============================================================================

1.    NEW FEATURES

      CR0002419
      Database_1: add format 'slicedNonIndexed' 
      
      Add the class DbObjectSlicedNonIndexed and at the same time support the 
      type in the database configuration. In cases where non-indexed slices are 
      returned this type can improve the performance of queries. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
            
2.1.  FIXED BUGS
      
      CR0002414
      env entries without values  
      
      env entries without values should be allowed according to the DTD.  

      
2.2.  DEPRECATED FEATURES
      none
      
2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.3                                                      2004-07-13
==============================================================================

1.    NEW FEATURES

      CR0000825
      Lightweight Container
      
      LightweightContainer_1 with its proprietary deployment configuration 
      files and lookup classes have been deprecated in favour of 
      LightweightContainer, a JNDI and partially J2EE compliant
      implementation.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002386
      Kernel referring to Base

      - org.openmdx.base.exception.BasicException and 
        org.openmdx.base.exception.StackedExceptions deprecated in favour of
        org.openmdx.kernel.exception.BasicException.
      - org.openmdx.base.enumeration.* deprecated in favour of
        org.openmdx.kernel.enumeration.*.
            
2.1.  FIXED BUGS

      CR0002352
      List iterates to the end
      
      The isEmpty() method calculates the list's size mostly looping over the whole
      collection.
      
      isEmpty() can be determined after the first roundtrip from now on.
      
2.2.  DEPRECATED FEATURES

      CR0002386
      Kernel referring to Base

      - org.openmdx.base.exception.BasicException and 
        org.openmdx.base.exception.StackedExceptions deprecated in favour of
        org.openmdx.kernel.exception.BasicException.
      - org.openmdx.base.enumeration.* deprecated in favour of
        org.openmdx.kernel.enumeration.*.
        
      CR0000825
      Lightweight Container
      
      LightweightContainer_1 with its proprietary deployment configuration 
      files and lookup classes have been deprecated in favour of 
      LightweightContainer, a JNDI and partially J2EE compliant 
      implementation.
      
2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.2                                                       2004-07-06
==============================================================================

1.    NEW FEATURES
      
      CR0002372
      Database_1: use ResultSet.TYPE_FORWARD_ONLY instead of 
      ResultSet.TYPE_SCROLL_INSENSITIVE. Database only scrolls forward on 
      result sets. Using TYPE_FORWARD_ONLY instead of TYPE_SCROLL_INSENSITIVE 
      can improve performance of find() operations dramatically 
      (especially with MS-SQL). 
      
      CR0000825
      Lightweight Container 
      
      The LightweightContainer supports:
      * EAR deployment, even in exploded form 
      * RMI Transport, using standard EJB intefaces 

      CR0002359
      JRE 1.4 Support
      
      The Ant build process should support the configuration of the source and 
      target version to be used by the Java compiler.
      
      The default values are:
      * build.source.version="1.3"
      * build.target.version="${build.source.version}"


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002365
      j2ee-apis and tomcat 5  
      
      Wenn ich die Bibliothek zusammen mit Tomcat 5 verwende gibt es
      Versionskonflikte. Entfernen aller servlet-apis hilft. 
      
      serlvet-api.jar content separated from the remaining j2ee-apis.jar 
      content.	
            
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES

      CR0000825
      Lightweight Container 

      LightweightContainer_1 is deprecated in favour of LightweightContainer.

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.1                                                       2004-06-27
==============================================================================

1.    NEW FEATURES
      
      CR0002348
      Database_1: support for MaxDB (http://www.mysql.com/products/maxdb/).
      
      CR0002343
      Model export supports wildcards. In addition to fully qualified model 
      names wildcards should be allowed for the model export. E.g. 'org:%' 
      exports all 'org' models, '%' exports all models.
      
      CR0002232
      Add a generic servlet which allows browsing and editing of provider 
      objects. Take rendering info from ui1 provider.
      
      CR0002145, CR0002231
      Database_1: support for user-defined schemas. Subclassing DbObject
      allows to use existing tables and schemas. For more information see
      javadoc of DbObjectType.
      
      CR0002241
      Database_1: allow to configure fetch size for prepared statements. The
      new configuration option 'fetchSize' was added.
      
      CR0002267
      Pool support  
      
      Add the following packages to openMDX
      * org.openmdx.uses.org.apache.commons.collections 
      * org.openmdx.uses.org.apache.commons.pool 
      
      CR0002269 
      Serializability of Structure_1_0 implementations
      
      The following Structure_1_0 implementations are now Serializable:
      * org.openmdx.compatibility.base.dataprovider.transport.delegation.MapStructure_1
      * org.openmdx.compatibility.base.dataprovider.transport.delegation.ListStructure_1
      
      CR0001014 
      BasicException Mappers
      
      A BasicException.Mapper for NamingExceptions has been added.
      
      CR0002338
      StreamMarshaller: Output Stream Handling
      
      The StreamMarshaller should handle output streams correctly.  
      
      They are marshalled correctly at the moment, but not yet unmarshalled. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002252
      Database_1: optimize and fix remove. In case of a large number of sliced
      tables remove scanned all tables which is unnecessary. In addition remove
      does not require anymore the presence of the _GENERIC table.
      
      CR0002327 
      ZIP protocol handler 
      
      The zip URL protocol is used by openMDX as well as some Apache software.
      
      Replace openMDX' ear, rar, war and zip URL protocol handlers by an xri 
      URL protocol handler resolving "+zip" authorities in order to avoid 
      conflicts.
      
      Examples:
      * xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/index.txt 
      * xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/index.txt 
      * xri:+zip.(xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/a.war)/index.txt 
      * xri:+zip.(xri:+zip.(xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/a.war)/WEB-INF/lib/a.jar)/index.txt 
      * xri:+zip.(xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/a.war)/WEB-INF/lib/a.jar 

      CR0002328
      JRE version  
      
      The JRE-Version must be included in the distrbution file names.  
      
      Classes built for JRE 1.4 are usually bytecode 1.2 compliant as opposed to 
      bytecode 1.1 for JRE 1.3. 
      
      Examples:
      * openmdx-1.3.1-core.jre-1.3.zip
      * openmdx-1.3.1-core.jre-1.3.tar.gz

      CR0002315
      Lightweight Container Package  
      
      The Lightweight Container and its closure must be moved to the 
      openmdx.kernel subtree.  
      
      The reason is, that the openMDX/Library openmdx-base.jar may be put into 
      the enterprise application archive and its content would therefore not 
      be available for deployment.  
   
            
2.1.  FIXED BUGS

      CR0002360
      endless loop when defining circular alias types
      
      circular alias type definitions are now detected and reported by means of a ServiceException
      
      CR0002304
      RefObject_1.refRemoveValue(): remove non-persistent objects with objMove.
      
      CR0002310, SF955864
      dateTime not supported as parameter type.
            
      CR0002284, SF955867
      RefObjectFactory_1.createStructure(): wrong ordering of structure fields.
      
      CR0002341
      Strict_1 does not recognize inherited operations. Strict_1 does not 
      recognize operations which are defined in supertypes of referenced type 
      and supertypes of subtypes of referenced type. 
      
      CR0002342
      RefStruct_1.refGetValue() throws ClassCast for non-String types.
      
      CR0002323
      Ui_1 plugin: ordering of operation definitions is ignored.
      
      CR0002319
      RefStruct_1.refGetValue() does not marshal single-valued object references.
      
      CR0002303
      JMI: RefObject_1.refRemoveValue(feature, object) must not delegate to 
      objRemove(). 
      
      CR0002275
      XMIParser should not crash if SAX locator is not set
      
      In case of some parsing failures (e.g. file not found), the XMIParser 
      throws a NullPointerException instead of a proper exception.
      
      CR0002271
      A ServiceException thrown by a Spice_2 Plugin is not converted in a 
      JmiServiceException 
      
      JmiAccessor throws a MarshalException in case that the plugin throws a 
      ServiceException.
      
      CR0001693
      Replace State_1.iterateModelForstatefulReferencePaths() by a more robust 
      algorithm.
      
      The algorithm has been changed to avoid endless looping.
      
      CR0002307
      Iteration continuation with states not supported for non stated objects.
      
      CR0002351 
      LightweightContainer_1 with more than one Database connection driver
      
      Logging the driver properties failed.
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none
      
==============================================================================
Version 1.3.0                                                       2004-05-06
==============================================================================

1.    NEW FEATURES

      CR0001270
      Project Tree
      
      Use the "ant install" command to install the distribution files
      into the original directory structure.

      CR0002250
      XmlImporter: cache schemas and type definitions.
      
      CR0001278
      JMI: org:w3c:duration. Map org:w3c:duration to
      org.openmdx.uses.javax.xml.datatype.Duration.
      
      CR0002081
      JMI: org:w3c:date. Map org:w3c:date to
      org.openmdx.uses.javax.xml.datatype.XMLGregorianCalendar. 
      
      CR0002227
      SparseArray classes 
      
      SparseArray classes belong to org.openmdx.base.collection.  


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0001980
      JMI: SortedMap get<feature>() should be only signature in case of 
      stereotype <sparsearray>.
      
      CR0001978
      JMI: add signature List get<feature>(RefFilterSubClass) in case of shared 
      and composite references.
      
      CR0001977
      JMI: remove signature remove<feature>(RefObjectSubClass) in case of shared 
      and composite associations. A remove must currently be implemented as 
      > container = (Container)object.get<feature>();
      > container.remove(element).
      
      CR0000916
      Should RefDelegatingObject_1.objGetValue() dispatches all features
      (derived, non-derived, attributes, references) to JMI methods.

      CR0002216
      view, context and role  
      
      Separate ViewCapable/"view" from ContextCapable and RoleCapable.  
      
      Diese Aenderung beinhaltet folgende Schritte:
      1. Wir lassen "view" wie es ist. 
         Es dient nur zur Unterstuetzung des Modells 
         org::openmdx::compatibility::audit1.
         Diese Pattern werden wir in openMDX 2 nur noch im Zusammenhang mit 
         Object_1_0/DataproviderObject unterstuetzen, das heisst, die 
         Anwendungen muessen auf org::openmdx::audit2 umsteigen, um die neuen 
         Infrastrukturkomponenten nutzen zu koennen. 
      2. Wir entkoppeln "ContextCapable" von "ViewCapable".
         "ContextCapable" dient zur Unterstuetzung der 
         Nichtkompatibilitaetsmodelle wie org::openmdx::lock1 und 
         org::openmdx::datastore1. 
         Im DataproviderObject werden ContextCapable-Features durch das Praefix 
         "context:" ausgezeichnet. 
      3. Wir entkoppeln RoleCapable von "view". 
         Im DataproviderObject werden RoleCapable-Features durch das Praefix 
         "role:" ausgezeichnet. 

      CR0002226
      Use Sun's backtrace format  

      Start each backtrace entry with "at ".
      
      This allows IDE's such as Eclipse to recognize backtrace entries. 

      CR0002227
      SparseArray classes 
      
      SparseArray classes belong to org.openmdx.base.collection.        
      They should be removed from org.opnemdx.compatibility.base.collection.

      CR0002239 
      JNDI implementation
      
      Add an own JNDI implementation.
      
      It should be complete yetlighweight in order ot be used with openMDX' 
      own container.  
      
      The packages are:
      * org.openmdx.kernel.naming.spi 
      * org.openmdx.base.naming.exception 
      * org.openmdx.base.naming.protocol.java 
      * org.openmdx.base.naming.protocol.openmdx 

      
2.1.  FIXED BUGS

      CR0001306
      JMI: Fully qualified class names in generated JMI methods.
      This avoids the necessity for such unqualified imports as java.math.* 
      leading to an "unused import" warning issued by some IDEs.
       
      CR0002222
      Poseidon XMI import crashes if a class has no features

2.2.  DEPRECATED FEATURES

      CR0002213
      UIDFactory  
      
      org.openmdx.base.net.UIDFactory, a subclass of
      org.openmdx.compatibilty.base.net.UIDFactory, has been left there for
      compatibility reasons.
      
      CR0002244      
      Service Lookup Unification
      
      The ServiceLocator_1_0 instances remain available in the 1.x releases 
      for compatibility reasons although using JNDI directly is the preferred 
      way to locate services.
      
      * Use SimpleServiceLocator to retrieve the SimpleServiceLocator_1 
        singleton which uses the Local JNDI tree only. 
      * Use StandardServiceLocator to retrieve the StandardServiceLocator_1 
        singleton which uses
        - the local JNDI tree if the registratioId does not contain a '/' 
        - a foreign JNDI tree accessed throught "new InitialContext()" if the 
          registrationId contains one or more '/'  


2.3   REMOVED FEATURES

      CR0002227
      SparseArray classes 
      
      SparseArray classes should be removed from 
      org.openmdx.compatibility.base.collection.  

      CR0002244      
      Service Lookup Unification
      
      Remove 
      org.openmdx.compatibility.kernel.application.cci.SimpleServiceLocator_1 
      as it is a duplicate of SimpleServiceLocator.  
   
      
==============================================================================
Version 1.2.1                                                       2004-04-10
==============================================================================

1.    NEW FEATURES
      
      CR0002201
      Reactivate support for Together.

      CR0002213
      UUID  
      
      Replace the proprietary UID format by an ISO/IEC 11578:1996 compliant 
      one.
      
      Resolution based on 
      http://java.sun.com/j2se/1.5.0/docs/api/java/util/UUID.html and
      http://www.ietf.org/internet-drafts/draft-mealling-uuid-urn-03.txt. 
      
      The following Plugins are available from 1.2.0+ on:
      * org.openmdx.kernel.id.plugin.TimeBasedUUIDGeneratorUsingRandomBasedNode 
      * org.openmdx.kernel.id.plugin.RandomBasedUUIDGenerator 
      Plugins such as the following ones can be developped on demand:
      * TimeBasedUUIDGeneratorUsingMACNode
      * TimeBasedUUIDGeneratorUsingTemplateBasedNode  

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002199
      XMI files should no longer be unpacked.  
      
      Replace
      1. unpacking to XMI JAR files to ${thirparty.model.dir} 
      2. adding $(thirparty.model.dir} to the JUnit classpath 
      by
      1. copying the XMI JAR files as they are to the $(thirparty.model.dir} 
      2. creating a file named ${root.model.jar.name} in the 
         $(thirparty.model.dir} and adding it the the JUnit classpath 
         
      CR0002213
      UIDFactory moved from org.openmdx.base.net to 
      openmdx.compatibility.base.net.
      
      CR0002040
      Substitute StringBuffer by a non-synchronized implementation
 
      StringBuilder moved to org.openmdx.uses.java.lang  
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES

      CR0002213
      UIDFactory  
      
      The UIDFactory has been deprecated in favour of UUIDGenerator instances.
      
==============================================================================
Version 1.2.0                                                       2004-04-04
==============================================================================

1.    NEW FEATURES

      CR0002008
      Port 'Java Pet Store Demo' to openMDX.
      
      CR0001687
      Extent support: InMemory_1.
      
      CR0000045
      URL protocol handlers for the lightweight container
      
      Addressing of files in nested archives supported:
      1. JAR 
      2. WAR or RAR 
      3. EAR 
      4. ZIP 
      
      E.g.:
      * zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/index.txt
      * ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/index.txt
      * war:ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/a.war;/index.txt
      * jar:war:ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/a.war;/WEB-INF/lib/a.jar!/index.txt
      * war:ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/a.war;/WEB-INF/lib/a.jar      
      

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002173
      The XMIImporter_1 no longer creates isFrozen constraints when importing 
      into the MOF repository. RosePoseidonMagicDrawRepositoryDiff now reports
      zero differences between Rose (mdl/cat files), MagicDraw (XMI1.2/UML1.4) 
      and Poseidon (XMI1.2/UML1.4) imports.
      
      CR0002171
      Non-ASCII character in source code
        
      Non ASCII-Characters in the source code should be escaped. 
      
      Resolved as following:
      * The Java program text uses ASCII characters only 
      * Some comment will continue using non-ASCII Unicode characters and may 
        be misinterpreted if the editor or viewer is not aware of the 
        corresponding character encoding. 

2.1.  FIXED BUGS
      
      CR0002175
      Audit_1 plugin crashes in prolog.

      CR0002176
      Database_1: fehlender CAST NULL. 
      Replace statement.append(", NULL AS " + getColumnName(aj, 0)); by
      satement.append(", CAST(NULL AS CHARACTER) AS " + getColumnName(aj, 0));
      The 'NULL AS CHARACTER' expression can be configured with the option
      'nullAsCharacter'. Default value is NULL, a value for databases which
      require a type-safe cast is 'CAST(NULL AS CHARACTER)'.

      CR0002172
      RoseExporter: do not generate constraint element for constraint 
      'isFrozen'.

      CR0002177
      NOT_FOUND Exception bei Operation OBJECT_SETTING im prolog 
      
      Despite the fix it is strongly recommended to avoid the deprecated "set" 
      operations as they interfere with the optimizations introduced in the
      meanwhile.
      
      Set operations will be supported client-side only in the future because
      they interfere with the state tarnsitions as defined by JDO: 
      Only transitions of the form TRANSIENT -> PERSISTENT-NEW -> PERSISTENT 
      allow the appropriate instance callback methods to be invoked. 
      Server-side set operations on the other side would require a state like
      MAYBE-PERSISTENT-MAYBE-PERSISTENT-NEW, meaning for example that "maybe" 
      postLoad should be invoked.
      
      The XML importer is going to handle set operations itsef from openMDX 
      2.0 on, ledinbg to an additional roundtrip per object: 
      
        DataproviderObject o = null;
		boolean persisten;
		try {
			o = queryChannel.addGetRequest(accessPath)
			persistent = true;
		} catch (ServiceException exception) {
			persistent = false;
			if(exception.getExceptionCode != StackedException.NOT_FOUND) throw exception;
			o = new DataproviderObject(accessPath);
		}
		// populate o;
		if(persistent){
			unitOfWorkChannel.addRplaceRequest(o);
		} else {
			unitOfWorkChannel.addCreateRequest(o);
		}

     instead of the current implementation
     
		o = new DataproviderObject(accessPath);
		// populate o
		unitOfWorkChannel.addSetRequest(o);

      CR0002192
      DUPLICATE Handling  

      Evict during rollback fails for persistent containers of objects involved 
      in a BasicException.Code.DUPLICATE exception during commit.  
      
      All containers of objects involved in a BasicException.Code.DUPLICATE 
      exception during commit are cleared during rollback. 

            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.1.0                                                       2004-03-18
==============================================================================

1.    NEW FEATURES

      CR0002029
      datastore1: add operation describe(): string to class Database
      This operation describes the namespace. Database_1 returns the optimized
      type definitions for all classes found in the model. This information can
      be taken as input to generated slided tables.      

      CR0002161
      Add ear protocol handler
      
      The ear protocol handler allows direct access to archives embedded in an 
      EAR. The separator is ",/" as opposed to "!/" for the jar protocol.  
      
      The URL 
      "jar:ear:file:etc/resource/org/openmdx/test/kernel/url/an.ear,/a.jar!/index.txt" 
      for example refers to the file "index.txt" located in the JAR "a.jar" 
      which is itself located in the EAR 
      "etc/resource/org/openmdx/test/kernel/url/an.ear".  
      
      CR0002143
      Support for MagicDraw UML (No Magic, Inc.)
      
      It is now possible to import XMI 1.2 files (based on the UML metamodel)
      generated by MagicDraw UML into the MOF repository. In addition whenever
      a package is externalized, an XMI file is generated that can be imported 
      into MagicDraw UML to view the model. This allows the use of MagicDraw 
      UML as modeling tool for openMDX applications without any restrictions.
      
      CR0002062
      Support for Poseidon for UML (Gentleware AG)
      
      It is now possible to import XMI 1.2 files (based on the UML metamodel)
      generated by Poseidon for UML into the MOF repository. In addition whenever
      a package is externalized, an XMI file is generated that can be imported 
      into Poseidon for UML to view the model. This allows the use of Poseidon 
      for UML as modeling tool for openMDX applications without any restrictions.
      
      CR0002136
      Port openMDX to .NET.
      
      CR0002111
      JMI/Modeling: support stereotype <<map>> for attributes and 
      references-stored-as-attribute.
      
      CR0002121
      Fetch size overriding.

      CR0002139
      modification dates must be set from the server time only  
      
      createdAt and modifiedAt dates must be set depending on the time of server. 
      
      The UnitOfWork_1 EJB's default behaviour should be that the requestedAt 
      value is ignored for modification requests.  
   
       A "SECURITY/trustTransactionTime" configuration entry with default value 
       "false" has been added. 

      The UnitOfWork_1 EJB
      * sets the ServiceHeader's requestedAt value if it is null 
      * replaces it in case of a transactional unit of work if 
        "SECURITY/trustTransactionTime" is "false" 
      * keeps it if the unit of work is non-transactional or 
        "SECURITY/trustTransactionTime" is "true" 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002001
      refMofId should return id in new XRI format.
      
      CR0002027
      Modeling: get rid of ch:omex:generic:path.
      
      CR0002028
      Optimize model export.
      
      CR0000015
      Minimize use of singletons.      

2.1.  FIXED BUGS
      
      CR0002123
      RoseImporter_1 does not work on Unix.
      
      CR0002132
      runtime1 package name  

      Replace the incorrect org::openmdx::runtime1 model name by the correct 
      value org::openmdx::compatibilit
                    =====================================
                             CHANGE LOG openMDX
                    =====================================


==============================================================================
<<<<<<< HEAD
Version 2.12.0                                                      2013-02-20
=======
Version 2.11.5+                                                     2013-02-19
>>>>>>> 5125d1be6c72bacc0a8718b2a1e324ee8dc1521a
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.11.2
      
1.    NEW FEATURES

      CR20020284
      Model XMLs as WBXML
      
      The models may be provided as either WBXML or XML.
      
      CR20020217
      META-INF resources

      The methods
        org.openmdx.kernel.loading.Resources.getMetaInfResources(
          java.lang.ClassLoader, 
          java.lang.String
        );
      and
        org.openmdx.kernel.loading.Resources.getMetaInfResources(
          java.lang.String
        );
      read resources from
        * the META-INF directory in case of a JVM
        * the org.openmdx.dalvik.metainf directory in a Dalvik VM
        
      CR20020217
      Separation of client and server packages
           
      There is a new class org.openmdx.kernel.jdo.ReducedJDOHelper which
      does not depend on javax.naming and which is able to replace 
      javax.jdo.JDOHelper in most cases. 
      
      The method org.openmdx.base.persistence.cci.PersistenceHelper.
      currentUnitOfWork(PersistenceManager) returns a
      org.openmdx.base.persistence.cci.UnitOfWork instance which now provides
      the javax.jdo.Transaction functionality without implementing the
      javax.jdo.Transaction interface. It is now the preferred interface for
      openMDX itself.
        
      The interface org.openmdx.base.persistence.cci.Synchronization provides
      the synchronization functionality for 
      org.openmdx.base.persistence.cci.UnitOfWork clients (as opposed to
      javax.jdo.Transaction clients). 
      
      The java archive openmdx-dalvik.jar contains Java beans support for
      dalvik.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020291
      CONCURRENT_ACCESSS_FAILURE mapping
      
      In general a CONCURRENT_ACCESSS_FAILURE should lead to a 
      JDOOptimisticVerificationException.
      
      At the moment a CONCURRENT_ACCESSS_FAILURE is mapped
      *  to a JDOFatalDataStoreException during flush
      * to a JDOOptimisticVersifcationException during commit      
      
2.1.  FIXED BUGS
      
      CR20020292
      Lazy-view-creation-safe event listener
      
      Firing a post load event may lead to a java.util.ConcurrentModificationException.
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.11.5                                                      2013-02-18
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.11.2
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020237
      NullPointerException in retrieveAllDescendants
 
      The exception occurs in case of transient non-contained objects.      
      
      CR20020217
      Separation of client and server packages

      The classes referring to javax.naming or javax.transaction classes
      (except for javax.transaction.Synchronization) have been put into
      org.openmdx.application packages.
      
      This change is externally visible mainly for the following reason:
      * The class org.openmdx.base.resource.adapter.UserTransactions has been
        deprecated in favour of 
        org.openmdx.application.transaction.UserTransactions.
      * The class org.openmdx.application.rest.spi.EntityManagerProxyFactory_2 
        has been deprecated in favour of
        org.openmdx.base.rest.connector.EntityManagerProxyFactory_2.
        
      The method org.openmdx.base.aop0.UpdateAvoidance.touchAllDirtyObjects
      takes now a javax.jdo.Persistence manager argument rather than a 
      javax.jdo.Transaction argument.  

2.1.  FIXED BUGS

      CR10011193
      Nested Structs
      
      Deserialization of nested JMI structs are now supported by the runtime 
      environment.
          
2.2.  DEPRECATED FEATURES

      CR20020217
      Separation of client and server packages
      
      The method
         org.openmdx.kernel.loading.Classes.getPackageResource(Class<?>, String)
      has been deprecated in favour of
         java.lang.Class.getResource(String)
         
      The methods
         org.openmdx.kernel.loading.Classes.getApplicationResource(String)
         org.openmdx.kernel.loading.Classes.getKernelResource(String)
         org.openmdx.kernel.loading.Classes.getSystemResource(String)
         org.openmdx.kernel.loading.Classes.getRequiredResource(String)
      has been deprecated in favour of
         org.openmdx.kernel.loading.Resources.getResource(String)
         
      The method 
        org.openmdx.base.text.conversion.JavaBeans.fromXML(
          java.lang.CharSequence, 
          java.beans.ExceptionListener
        );
      has been deprecated in favour of 
        org.openmdx.base.text.conversion.JavaBeans.fromXML(
          java.lang.CharSequence, 
          org.openmdx.base.exception.ExceptionListener
        );
      and moved to the Transformer class: 
        org.openmdx.base.beans.StandardJavaBeanTransformer.fromXML(
          java.lang.CharSequence, 
          java.beans.ExceptionListener
        );       
      
      These classes have been deprecated:
      * org.openmdx.base.resource.adapter.UserTransactions
      * org.openmdx.application.rest.spi.EntityManagerProxyFactory_2 
      
      org.openmdx.base.accessor.rest.spi.Synchronization_2_0 has been deprecated.
      Instead of casting a transaction instance to Synchronization_2_0 you should
      access to unit of work directly by invoking
      PersistenceHelper.currentUnitOfWork(transaction.getPersistenceManager())

2.3.  REMOVED FEATURES

      CR20020288
      preferences1 model
      
      The deprecated org::openmdx::preferences1 model has been removed
        
        
==============================================================================
Version 2.11.4                                                      2013-02-06
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.11.2
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020282
      Invalid cardinality for single valued features
      
      Detect for SlicedDbObject2NonIndexed and recover in case of equal values.
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
        

==============================================================================
Version 2.11.3                                                      2013-01-24
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.11.2
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR20020266
      getAllDescendants
      
      getAllDescendants fails for containers with abstract base classes. 
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
        

==============================================================================
Version 2.11.2                                                      2013-01-07
==============================================================================

0.    KNOWN ISSUES

      CR20020252	 
      Join for RID/OID Query Databases
      
      Not yet implemented for
      * shared associations
      * references to descendants of root classes 

      CR20020142
      JDOHelper.getVersion()
      
      The method returns null under certain circumstances.
      
      Validate its behaviour especially
      * in case of an entity manager proxy
      * in case of a hollow object  
      
1.    NEW FEATURES
      
      CR20020252	 
      Join for RID/OID Query Databases
      
      Resolved for
      * references stored as attributes
      * containment references
      * parent references
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019742
      JTA access
      
      The issue is now addressed by 
      org.openmdx.base.rest.adapter.TransactionManagerFactory.
      
      CR20019860
      JDK 7
      
      JUnit Tests adapted to JRE 7 behaviour
      
2.1.  FIXED BUGS

      CR20020256
      Transient Container
      
      An object could not be removed by its id from a transient container.
      
      CR10011193
      Nested Structs
      
      Nested structs are now supported by the runtime environment.
      
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      
      CR20019860
      JRE 5.0
      
      JRE 5.0 support discontinued
        

==============================================================================
Version 2.11.1                                                      2012-12-04
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019370
      Transaction Manager Lookup
      
      A transaction manager is required for suspend/resume only.
      A UserTransaction is sufficient in all other cases.
      
      CR20020212
      Model Validation
      
      ImportHelper provides now non-static methods. Schema validation is an 
      (optional) constructor argument which defaults to false.
      
      The (optional) META-INF/openmdxmof-validation.properties file
      supports the following entries:
      
        validate-xml=true (default: false)
        validate-elements=true (default: false)
        validate-classifiers=true (default: false)
        validate-checksum=true (default: false)
        dump-on-failure=true (default: false)
        retry-limit=3  (default: 0)        
        checksum=85ede1b91f7e8ed4141c399c524d801b (default: none)
        
      The checksum can be
      * calculated with Model_1Factory.claclulateChecksum()
      * printed to System.out with Model_1Factory.main()

      CR20020217
      Separation of client and server packages

      The classes referring to javax.naming or javax.transaction classes
      (except for javax.transaction.Synchronization) have been put into
      separate packages.
      
      This change is externally visible mainly for the following reason:
      * The class org.openmdx.application.rest.http.RestServlet_2 has been
        deprecated in favour of 
        org.openmdx.application.rest.http.servlet.RestServlet_2.
      * The class org.openmdx.application.rest.http.RemoteUserLoginModule has
        been deprecated in favour of
        org.openmdx.application.rest.http.servlet.RemoteUserLoginModule.  
      * The class org.openmdx.application.rest.http.RequestCallbackHandler has
        been deprecated in favour of
        org.openmdx.application.rest.http.servlet.RequestCallbackHandler.   
      * The class org.openmdx.application.rest.http.TrustingLoginModule has
        been deprecated in favour of
        org.openmdx.application.rest.http.servlet.TrustingLoginModule. 

2.1.  FIXED BUGS

      CR10011193
      Nested Structs
      
      Nested structs are now supported by the runtime environment.
      
      CR20020236
      State Cache Problem
      
      The preClear() method evicts the state cache, too.
      
      CR20020237
      NullPointerException in retrieveAll
 
      The cache is guarded against transient objects now.
          
2.2.  DEPRECATED FEATURES

      CR10011145
      NamingConfigurationProvider
      
      The naming configuration provider has been deprecated      
                     
2.3.  REMOVED FEATURES
      
      CR20020217
      Removal of deprected classes and features
      
      Deprecated classes:
      * The class org.openmdx.kernel.resource.ResourceAdapter_1 has been
        removed.
      * The deprecated class org.openmdx.kernel.Version has been removed.
      * The deprecated class 
        org.openmdx.application.dataprovider.spi.ResourceHelper.

      Deprecated features:
      * The deprecated method 
        org.openmdx.base.rest.spi.Facades.newQuery(DataObject_1_0) has been
        removed.
        

==============================================================================
Version 2.11.0                                                      2012-11-11
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES

      CR20020129
      ClassToTableMapping
      
      The formatter is now pluggable.

      CR20020128
      thereRemainDirtyFeaturesAfterRemovingTheUnmodifiedOnes
      
      As opposed to its former objIsModified() counterpart this method drops unmodified
      dirty derived features as well.
       
      CR20020128
      org.openmdx.preferences2.prefs.Retrievable
      
      The Retrievable interface allows to retrieve a preferences node with
      all its descendants.
      
      CR20020208 
      LOB streaming
      
      The new database configuration flag "getLargeObjectByValue" tells, whether
      large object streams shall be copied into memory or not.

      There are two new SQL driver properties
      * SET.BINARY.LARGE.OBJECT
      * SET.CHARACTER.LARGE.OBJECT
      accepting the values
      * TALLYING (determine the size in advance, default)
      * STREAMING (stream directly, whether the size is known or not)
      * BY_VALUE (convert large object to byte[] or String respectively) 
      
      CR20019671
      XA Datasource support
      
      The openMDX' lightweight container supports now (multiple) XA data 
      sources provided the optional thirdparty library "Bitronix Transaction 
      Manager" is found in the classpath and enabled by using
      "org.openmdx.kernel.lightweight.naming.BitronixInitialContextFactory" 
      as initial context factory.
      
      The XA JDBC URLs have the follwoing (single-line) form
      jdbc:xa:<XA-DataSource-Class>?<Property-Name>=<Value>&..., e.g.
      jdbc:xa:oracle.jdbc.xa.client.OracleXADataSource?UniqueName=openmdxTest
         &URL=jdbc:oracle:thin:@localhost:1521:XE
         &user=OPENMDX_TEST
         &password=testing123  
      
      An XA DataSource pool supports the following features:
        * CursorHoldability
		  Set the default cursor holdability for connections.
		* EnableJdbc4ConnectionTest
		  When set and the underlying JDBC driver supports JDBC 4 isValid(), a Connection.isValid() call
		  is performed to test the connection before handing it to the caller.
		  If both testQuery and enableJdbc4ConnectionTest are set, enableJdbc4ConnectionTest takes precedence.
		* IsolationLevel
		  Set the default isolation level for connections.
		* LocalAutoCommit
		  Set the default local transactions autocommit mode.
		* LoginTimeout
		* PreparedStatementCacheSize
		  Set the target maximum size of the prepared statement cache. 
		  In reality under certain unusual conditions the cache may temporarily drift higher in size.
		* TestQuery
		  When set, the specified query will be executed on the connection acquired from the pool before being handed to the caller. 
		  The connections won't be tested when not set. Default value is null.
		* AcquireIncrement
		  Define the amount of connections to be created at once when the pool needs to grow.
		* AcquisitionInterval
		  Set the amount of time in seconds the pool will wait before trying to acquire a connection again after an
		  invalid connection has been attempted to be acquired.
		* AcquisitionTimeout
		  Define the amount of time in seconds a call to get a connection from the pool will wait when the pool is empty.
		* AllowLocalTransactions
		  Set if the transaction manager should allow mixing XA and non-XA transactions. 
		  If you know all your transactions should be executed within global (ie: XA) scope it is a good idea to set 
		  this property to false.
		* ApplyTransactionTimeout
		* AutomaticEnlistingEnabled
		  Specify if the XA resource wrapper should enlist/delist this resource automatically in global transactions.
		  When set to false, you have to enlist resources yourself with javax.transaction.Transaction.enlistResource(javax.transaction.xa.XAResource)
		  and delist them with javax.transaction.Transaction.delistResource(javax.transaction.xa.XAResource, int).
		* DeferConnectionRelease
		  Define the transaction interleaving capability of the database.
		  Should be true only if the database can run many transactions on the same connection.
		* Disabled
		* IgnoreRecoveryFailures
		  Defaults to TRUE.
		* MaxIdleTime
		  Define the amount of seconds and idle connection can stay in the pool before getting closed.
		* MaxPoolSize
		  Define the maximum amount of connections that can be in the pool.
		  Defaults to 8.
		* MinPoolSize
		  Define the minimal amount of connections that can be in the pool.
		* ShareTransactionConnections
          Defaults to true (as opposed to Bitronox' default!)		
		* TwoPcOrderingPosition
		* UniqueName
		  Specify the resource unique name to be used to identify this resource during recovery. 
		  This name will be registered in the transactions journal so once assigned it must never be changed.
		  Mandatory without default!
		* UseTmJoin
		  Specify if the transaction manager should try to join resources by calling javax.transaction.xa.XAResource#start(javax.transaction.xa.Xid, int) 
		  with javax.transaction.xa.XAResource.TMJOIN. 
		  The transaction manager checks if two branches can be joined by calling javax.transaction.xa.XAResource.isSameRM(javax.transaction.xa.XAResource).
		  It should only be set to true if the underlying implementation supports resource joining.
     
      CR20020193
      Support for multiple query extensions. Multiple query extensions can 
      be added to query.      
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020129
      ClassToTableMapping
      
      The former isChildOfDBObjectType() workaraound can't be used any more!
      
      CR20020128
      Preferences Synchronization
      
      Optimize sync() & syncSpi() by making use of PersistenceHelper.retrieveAllDescendants()
      
      CR20019671
      Streamed Values
      
      Streamed values no longer belong to the default fetch group (also known
      as typical attributes).
      

2.1.  FIXED BUGS

      CR20020129
      ClassToTableMapping
      
      Node.getAbsolutePath works now for DatabasePreferences, too.
      
      CR20020128
      Update Avoidance
      
      Update avoidance must intercept preStore insetad of flush.
      
      CR20020206
      BLOB support
      
      Optional BLOBs are now supported for proxy connections, too.

      CR20020207
      CLOB support
      
      Optional CLOBs are now supported for proxy connections, too.
      CLOBs are now supported for WBXML connections, too
      
      CR20020187
      Connection Adapter Swallows Runtime Exceptions
      
      Runtime exceptions are only logged but not propagated.

2.2.  DEPRECATED FEATURES
      none      
                     
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.10.3                                                      2012-09-07
==============================================================================

      CR20020212
      Model Validation
      
      The (optional) META-INF/openmdxmof-validation.properties file
      supports the following entries:
      
        validate-classifiers=true (default: false)
        validate-checksum=true (default: false)
        dump-on-failure=true (default: false)
        retry-limit=1  (default: 0)
        checksum=85ede1b91f7e8ed4141c399c524d801b (default: none)
        
      The checksum can be
      * calculated with Model_1Factory.claclulateChecksum()
      * printed to System.out with Model_1Factory.main()

       
==============================================================================
Version 2.10.2                                                      2012-09-15
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES

      CR20020102
      Unique Query Support
      
      Unique query support has been extended from the database plug-in to
      the in-memory provider.
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020173
      WBXML Code Page 0
      
      Update:
      - "group"
      + "features"
      + "request"
      
      CR20020102
      Unique Query Support
      
      Depending on the INTERCEPTION plug-in object retrieval uses
      * a NOT_FOUND exception to signal non-existence in case of 
        org.openmdx.application.dataprovider.layer.interception.Classic_1
      * an empty result set to signal non-existence in case of 
        org.openmdx.application.dataprovider.layer.interception.Standard_1

2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES

      CR20020102
      Unique Query Support
      
      The following methods have been deprecated
      * org.openmdx.application.dataprovider.cci.ServiceHeader.toServiceHeader(
            javax.security.auth.Subject
        );
      * org.openmdx.application.dataprovider.cci.ServiceHeader.toServiceHeader(
            java.lang.String, 
            java.lang.String
        );
      * org.openmdx.base.rest.spi.Facades.newQuery(
            org.openmdx.base.accessor.cci.DataObject_1_0
        );
      
                     
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.10.1                                                      2012-09-11
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.10.0
      
1.    NEW FEATURES
      
      CR20020102
      Unique Query Support
      
      Depending on the INTERCEPTION plug-in object retrieval is dispatched to
      * get() methods with 
        org.openmdx.application.dataprovider.layer.interception.Classic_1
      * find() methods with
        org.openmdx.application.dataprovider.layer.interception.Standard_1
        
      CR20020128
      Preferences Prefetch
      
      PersistenceHelper.retrieveAllDescendents() retrieves all descendants of 
      the given object.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20020112
      PersistenceManager.finalize()
      
      Avoid NullPointerExceptions when trying to clear a closed manager's
      unit of work.

2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.10.0                                                      2012-08-24
==============================================================================

0.    KNOWN ISSUES

      CR20020142
      JDOHelper.getVersion()
      
      The method returns null under certain circumstances.
      
      Validate its behaviour especially
      * in case of an entity manager proxy
      * in case of a hollow object  
      
      CR20019740
      state2-aware REST-Client 
      
      Synchronization of state2-aware proxy,
      
      The DateStateViews-API must be available in the proxy. 

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.      
      
1.    NEW FEATURES
      
      CR20019258
      newInstance() 
      
      A plug-in specific assertion for org.openmdx.state2.aop1.PlugIn_1 has 
      been added: 
      * !(StateCapable.class.isAssignableFrom(c) || (
      		(DateStateContext != null) == (BasicState.class.isAssignableFrom(c)
      	) 
      which has been amended for the org.openmdx.state2.aop1.LegacyPlugIn_1:
      * Legacy.isAssignableFrom(c) || !(StateCapable.class.isAssignableFrom(c) || (
      		(DateStateContext != null) == (BasicState.class.isAssignableFrom(c)
      	) 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019258
      resolveObjectClass
      
      Each implementation of org.openmdx.base.aop1.PlugIn_1_0 must provide a
      resolveObjectClass() method.

      CR20020086
      Context for IllegalStateException thrown by UniqueValue 
      
      The exception parameters are now amended by the object's id.
      
2.1.  FIXED BUGS

      CR20020140
      Non-query operation
      
      Invocation shall make the object dirty 
      
      CR20020084
      DateStateViews.getResourceIdentifierOfClone 
      
      getResourceIdentifierOfClone is erroneous in case of time point 
      views.
      
      The 'invalidated' argument must be either true or false, but never null.  
            
      CR20020076
      DateStateViews.getViewForPropagatedState
      
      getViewForPropagatedState does not work for time point views. 
        
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.10                                                      2012-06-01
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.9
      
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20020069
      Set Reference Java-Doc
      
      Optional reference setters' Java-Doc pretends the reference was
      mandatory. 
        
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.9                                                       2012-05-20
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.8
      
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20020068
      Duration & InboundConnection
      
      Durations are not marshaled correctly for for inbound connections.
        
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.8                                                       2012-05-16
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.7
      
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20020058
      Import of invalid XML documents
      
      Invalid features shall not lead to a NullPointerException.
            
      CR20020043
      Performance Improvement
      
      The XML Datatype Factory is now cached for clone() operations, too.
      
2.1.  FIXED BUGS
      none
        
2.2.  DEPRECATED FEATURES

      CR20020058            
      ObjectAndValidStateComparator.toString()
      
      The toString(Object,Multiplicity) method has been deprecated in
      favour of toString(Object).
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.7                                                       2012-05-01
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.6
      
1.    NEW FEATURES

      CR20020050
      TransactionManagerFactory
      
      openMDX uses now a ComponentEnvironment plug-in for its 
      TransactionManager retrieval which tries in turn:
      * Standard:
        java:comp/TransactionManager JNDI lookup ()
      * JBoss:
        java:/TransactionManager JNDI lookup
      * WebSphere: 
        com.ibm.ws.Transaction.TransactionManagerFactory.getTransactionManager() 
            
      CR20020030
      isStoredAsAttribute
      
      Method isStoredAsAttribute() added to 
      org.openmdx.base.mof.cci.ModelHelper.
       
      CR20020038
      BulkLoad
      
      Setting
      * The BulkLoad=true and BulkLoad=false parameters may be used in REST
        connection request.
      * The bulk load flag may be set on a persistence manager:
        UserObjects.setBulkLoad(persistenceManager, bulkLoad);
        
      Querying:
      * The bulk load flag may be queried from the persistence manager:
        UserObjects.isBulkLoad(persistenceManager);
      * The bulk load flag may be queried from an AbstractRestInteraction
        sub-class:
        AbstractRestInteraction.isBulkLoad();
      
      CR20020040
      The REST Servlet's Login Configuration
      
      Override getLoginConfiguration(String name) instead of 
      getLoginConfiguration() to change the default behaviour. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020040
      The REST Servlet's Login Configuration
      
      The remote user login module is now the REST servlet's only default
      module. 
      
2.1.  FIXED BUGS

      CR20020030
      Refresh
      
      Refresh is now propagated from a proxy object to its serving object.
      
      CR20020030
      ObjectRecord
      
      Erroneous key/content mapping for org:openmdx:kernel:Object records.
      
      CR10010692
      Reference handling by DetachCopy 
     
      detachCopy and detachCopyAll works for lists, sets oder sparsearrays of 
      references but fails for optional or mandatory references.
        
2.2.  DEPRECATED FEATURES

      CR20020040
      The REST Servlet's Login Configuration
      
      Overriding getLoginConfiguration() has been deprecated in favour of 
      getLoginConfiguration(String name) to to change the default behaviour. 
                     
2.3.  REMOVED FEATURES

      CR20020030
      Facades
      
      The following deprecated methods have been removed: 
      * org.openmdx.base.rest.spi.Query_2Facade.newInstance()
      * org.openmdx.base.rest.spi.Object_2Facade.newInstance()
      * org.openmdx.base.rest.spi.Facades.newObject(java.util.UUID)

      CR20020040
      PrincipalCallback
      
      The unused principal callback has been removed. 
      
      CR20020038
      refInitializeOnCreate
      
      The refInitializeOnCreate feature has been removed as the behaviour
      can be accomplished by standard plug-ins.
            
      CR20020030
      ModelUtils
      
      The deprecated class org.openmdx.base.mof.spi.ModelUtils has been
      removed.
      
      
==============================================================================
Version 2.9.6                                                       2012-03-27
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.5
      
1.    NEW FEATURES
      
      CR20020039
      Cloneable Query
      
      cci2 query objects shall be cloneable.
      
      PersistenceHelper.clone() may now be used to clone queries.

      CR20020037
      Preferences
      
      The java.util.prefs API may be used as accessor to the 
      org::openmdx::preferences2 model.
      
      CR20020032
      Disclose ORM
      
      The ORM is disclosed as Preferences 
             
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none
       
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.9.5                                                       2012-03-22
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.4
      
1.    NEW FEATURES
      
      CR20020037
      Preferences
      
      The org::openmdx::preferences2 replaces org::openmdx::preferences1.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20020031
      Absolute Positioning
      
      Do not disable absolute positioning globally.
      
      Disable absolute positioning for a specific DB object only.
         
      CR20019592
      Null values in queries shall throw an exception 
      
      Inserting a null value into a JMI query predicate throws a 
      BAD_PARAMETER JmiServiceException. 
      
      CR20019351
      Reject null in JMI lists and sets
      
      Inserting a null value in a JDO object's list or set feature throws
      a JDOUserException caused by a NullPointerException. 

2.1.  FIXED BUGS
      
      CR20020034
      Iteration over Legacy container
      
      In some cases the Legacy containers in time independent views seem to be 
      empty.
       
2.2.  DEPRECATED FEATURES

      CR20020037
      Preferences
      
      org::openmdx::preferences1 has been deprecated in favour of
      org::openmdx::preferences2.
                     
2.3.  REMOVED FEATURES
      
      CR20020038
      RestConnectionSpec
      
      Deprecated constructor
      
        public RestConnectionSpec(
          String user,
          String password,
          Object tenant 
        );
        
      removed
      
      
==============================================================================
Version 2.9.4                                                       2012-03-05
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.3
      
1.    NEW FEATURES

      CR20020022
      Query Predicate
      
      openMDX' standard type casts are now supported in addition to their 
      existing query aliases:
      * :string:
        (java.lang.String)
      * :date:
        (javax.xml.datatype.XMLGregorianCalendar)
      * :datetime:
        (java.util.Date)
      * :short:
        (java.lang.Short)
      * :int:
        :integer:
        (java.lang.Integer)
      * :long:
        (java.lang.Long)
      * :decimal:
        (java.math.BigDecimal)
      * :duration:
        (javax.xml.datatype.Duration)
              
      CR20020024
      Query URI
      
      The method
      
        PersistenceManager.newQuery(
          "OPENMDXQL",
           query
        );

      supports now two additional query object types in addition to 
      QueryRecord:
      * a java.net.URI instance containing an XRI query
      * a java.lang.String instance containing an XRI query
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20020014
      Import references in invalidated state
      
      Invalidated states are now ignored during import. 

2.1.  FIXED BUGS

      CR10010637
      Query Serialization
      
      * Query objects are now Serializable
      * De-serialized query object's can't be modified

      CR20019954 	
      Core Object Removal
      
      The core object removal protection can't be activated. 
      
      Explicit setting of the StateCapableDeletable flag is ignored as well as 
      its implicit value "false". 
      
      CR20020022
      Query Predicate 
      
      thereExistsReference().equalTo("xri://...") is ignored.
      
      CR20019750
      Separate state2 specific code
      
      Missing Rose model updates included.
       
2.2.  DEPRECATED FEATURES
      none
                     
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.9.3                                                       2012-02-20
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.2
      
1.    NEW FEATURES

      CR20020005
      Configurable Properties
      
      System properties may be used to override the configurable properties'
      default values, e.g.
      * -Djavax.jdo.option.TransactionIsolationLevel=read-committed
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019750
      Separate state2 specific code
      
      In openMDX 2.8.21 some state2 specific code was in an inappropriate 
      place (e.g. in AbstractContainer_1)
      
      validTimeUnique is now a property of org::openmdx::state2::Legacy, a
      sub-class of org::openmdx::state::StateCapable. 
      
      To keep valid-time-unique support you have to
      * use org::openmdx::state2::Legacy instead of 
        org::openmdx::state::StateCapable in your model
      * use org.openmdx.base.aop1.LegacyPlugIn_1 instead of
        org.openmdx.base.aop1.PlugIn_1 in your entity manager factory 
        configuration
      * use org.openmdx.state2.aop1.LegacyPlugIn_1 instead of
        org.openmdx.state2.aop1.PlugIn_1in your entity manager factory
        configuration
      * use org.openmdx.state2.aop0.LegacyPlugIn_1 instead of 
        org.openmdx.state2.aop0.PlugIn_1 in your data manager factory
        configuration
      * use org.openmdx.application.dataprovider.layer.model.LegacyState_2
        instead of org.openmdx.application.dataprovider.layer.model.State_2 in
        your dataprovider configuration
        
      
      CR20020009
      Layer_1 configuration
      
      Add Java bean support 
       
      CR20020012
      Audit & UpdateAvoidance
      
      Allow to disable update avoidence for audited objects, too.
      
      CR20020005
      Optimistic Locking

      A concurrent modification exception is thrown if the object is
	  * either updated by both this unit of work and another unit of work 
	    concurrently
	  * or made transactional in this unit of work and updated by another 
	    unit of work concurrently
      
      The supported optimistic transaction isolation levels are:
      * repeatable-read (default)
        The object must not be modified concurrently by another unit of 
        work starting later than the given unit of work unless it has
        been refreshed
      * read-committed
        The object must not be modified concurrently by another unit after 
        it has been read or refreshed by the given unit of work 

2.1.  FIXED BUGS

      CR20020011
      PersistenceHelper.clone()
      
      A clone may loose some of its not explicitly fetched values
      
      CR20020005
      Optimistic Locking
      
      refresh() removes the optimistic read lock, leaving the optimistic
      write lock to be checked. 
       
2.2.  DEPRECATED FEATURES

      CR20019750
      Separate state2 specific code
      
      If you don't need valid-time-unique support you should
      * use either org.openmdx.state2.aop0.ColonPlugIn_1 or
        org.openmdx.state2.aop0.BangPlugIn_1 instead of 
        org.openmdx.state2.aop0.PlugIn_1

      The following methods have been deprecated:
      * Use org.openmdx.base.accessor.jmi.cci.RefObject_1_0.refInitialize(RefObject)
        instead of org.openmdx.base.persistence.cci.PersistenceHelper.clone(T, String...)
                     
2.3.  REMOVED FEATURES
      
      CR20020009
      Layer_1 configuration
      
      The following configuration entries have been removed
      * PERSISTENCE/compressUID


==============================================================================
Version 2.9.2                                                       2012-01-13
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.1
      
1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20020006
      refInitialize) must initialize all mandatory and persistent features.
      
      CR20020005
      Optimistic Locking
      
      The request consists of two changes
      * The transaction time shall be set at the beginning of the unit of work
        (as opposed to the current lazily setting at the beginning of the
        datastore transaction)
      * Commit shall fail if a transactional object has been modified since
        the beginning of the unit of work 

2.1.  FIXED BUGS

      CR20019393
      Database: wrong SQL for nested queries with embedded features.      
       
2.2.  DEPRECATED FEATURES

      CR20020005
      Optimistic Locking
      
      Facades.newObject(UUID) has been deprecated
            
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.9.1                                                       2012-01-10
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.9.0
      
1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none
       
2.2.  DEPRECATED FEATURES

      CR20019352
      Cleanup Configuration Specification
      
      The following class has been deprecated:
      * org.openmdx.application.cci.ConfigurationSpecifier 
            
2.3.  REMOVED FEATURES

      CR20019352
      Cleanup Configuration Constants 
      
      The following configuration constants have been removed
      * KERNEL/persistenceManagerBinding
      * KERNEL/modelPackage
      * KERNEL/packageImpl
      * KERNEL/exposedPath
      * KERNEL/delegationPath
      * KERNEL/serverId
      * KERNEL/bypassedByLenientRequests
      * PERSISTENCE/optimizedType
      * PERSISTENCE/optimizedTable
      * PERSISTENCE/storageFolder

      CR20019998
      context:BeforeImage 
      
      context:BeforeImage:<feature> replies have been removed.
       
      
==============================================================================
Version 2.9.0                                                       2012-01-04
==============================================================================

0.    KNOWN ISSUES
      No changes since 2.8.37
      
1.    NEW FEATURES

      CR20019858
      UpdateAvoidance
      
      Its is now possible to disable comparison of dirty objects with
      their before image for a single unit of work:
      
         UserObjects.getPlugInObject(
            entityManager, 
            UpdateAvoidance.class
         ).touchAllDirtyObjects(
            entityManager.currentTransaction()
         );      
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019896
      Superclass callback invocation
      
      The responsibility for handling the callback interfaces
      * LoadCallback
      * StoreCallback
      * ClearCallback
      * DeleteCallback
      * ConstructCallback
      has been clarified as following:
      1. The Jmi1ObjectInvicationHandler propagates the callbacks to all 
         matching plug-ins, i.e. to all Impl classes implementing
         the corresponding callback interface.
      2. Each implementation class propagates the callbacks to its direct
         super-class it wants to suppress it on purpose.
      3. The Jmi1ObjectInvicationHandler propagates the callbacks to next
         layer provided its instance proxy implements the corresponding
         callback interface.      

      CR20019835
      Missing Mandatory Attributes
      
      Persistent and persistent-new objects are validated during commit. If
      there are some mandatory attributes missing after the before-completion
      and pre-store callbacks than a validation exception prevents the commit
      from succeeding.
       
      CR10010250
      refSetValue for multivalued primitive types
      
      refSetValue(feature,source) for all multivalued features is now 
      dispatched to:
      
          target = refGetValue(feature);
          target.clear();
          if(target instanceof Collection || target instanceof List) {
             target.addAll(asList(source)) 
          } else if (target instanceof Map) {
             target.putAll(asMap(source));
          }
            
      CR20019341
      Rose Model Update
      
      The change consists of:
      * CR20019340: StateCapable should extend ContextCapable
      * CR20019978: modifiedBy, createdBy, removedBy
      * CR20019979: audit1 
     
      CR20019978
      modifiedBy, createdBy, removedBy
      
      The attributs
      * Modifiable.modifiedBy
      * Creatable.createdBy
      * Removable.removedBy
      are now of type List<String> instead of Set<String>
      
      CR20019858
      org.openmdx.base.aop0.PlugIn_1_0
      
      The method 
      
         Object getUserObject(
            Object key
         );
         
      has been replaced by 
      
         <T> T getPlugInObject(
            Class<T> type
         );     
      
2.1.  FIXED BUGS
      
      CR20019996
      refSetValue fails with qualified name
       
      CR20019991
      Erroneous ObjectAndValidStateComparator
      
      actual != null & extected == null not recognized 
       
2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES

      CR20019835
      Missing Mandatory Attributes

      The following methods have been removed from AbstractObject:
      * protected void jdoPreClear(Class<? super N>);
      * protected void jdoPreStore(Class<? super N>);
      * protected void jdoPostLoad(Class<? super N>);
      * protected void jdoPreDelete(Class<? super N>);
      * protected void openmdxjdoPostConstruct(Class<? super N>);
      * protected final <I> Iterable<I> mixedInTargets(Class<I>,Class<? super N>...)

      CR20019981
      Multiplicites
      
      The deprecated class Multiplicites has been removed.
      
      CR20019858
      org.openmdx.base.aop0.PlugIn_1_0
      
      The method 
      
         Object getUserObject(
            Object key
         );
         
      has been removed in favour of
      
         <T> T getPlugInObject(
            Class<T> type
         );     

      CR20019979
      audit1
      
      The deprecated model package org::openmdx::compatibility::audit1 has 
      been removed.


==============================================================================
Version 2.8.37                                                      2011-11-18
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES

      CR20019260
      PersistenceHelper.getLastXRISegment
      
      This method retrieves the last segment of the object's current or future
      XRI. It returns null if the object is not contained yet.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019962
      Exception in case of null qualifier
      
      A JmiServiceException with exception domain DEFAULT_DOMAIN and
      exception code BAD_PARAMETER is thrown as opposed to the former
      ClassCastException,

      CR20019971
      Parent Accessor
      
      The parent accessor threw NullPointerException when invoked on a 
      transient object.
      
      Now it returns null if the object is not yet contained and the parent 
      object in all other cases.
      
2.1.  FIXED BUGS
      none
       
2.2.  DEPRECATED FEATURES

      CR20019927
      Path modification
      
      All path modification methods have been deprecated:
      * add()
      * addAll()
      * remove()
      * setTo()
            
2.3.  REMOVED FEATURES
      
      CR20019927
      Path.toResourcePattern
      
      The deprecated method toResourcePattern() has been removed.

      
==============================================================================
Version 2.8.36                                                      2011-11-11
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES

2.1.  FIXED BUGS
      
      CR20019968
      refresh() 

      PersistenceManager.refresh(persistenceCapable) does not afffect
      * PERSISTENT-CLEAN
      * PERSISTENT-NONTRANSACTIONAL
      instances
       
2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none

      
==============================================================================
Version 2.8.35                                                      2011-11-01
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      
      CR20019959
      Nested Query
      
      PersistenceHelper.asSubquery() wraps a query into a sub-query argument, e.g.
      * query.aReference().elementOf(
          PersistenceHelper.asSubquery(aSubQuery)
        );  
      * query.thereExistsAnotherReference().notAnElementOf(
          PersistenceHelper.asSubquery(anotherSubQuery)
        );        

      CR20019916	 
      getView for Container
      
      The getViewForTimeRange and the getViewForTimePoint method are now 
      available for containers as well.
      
      CR20019920
      Database_1: nested queries for composite parents. Nested queries support 
      composite parent features.
      
      CR20019858
      Update avoidance
      
      The UpdateAvoidance_1 AOP0 plug-in avoids unnecessary update requests to
      the persistence layer by discarding modification requests for unchanged 
      features.
      
      The same holds now for the audit2 AOP0 plug-in in respect to 
      non-audited objects.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019966
      Support for OpenJPA 2.x. Replace OpenJPA 1.x with OpenJPA 2.x.
      
      CR20019939
      State feature access
      
      The set of states involved in feature queries is now cached.
      
      CR20019916	 
      getView for Container
      
      Unification of
      * generic arguments for containers
      * RuntimeExceptions to be thrown
                  
      CR20019918
      Allow skipping of index values
      
      The index values need no longer be consecutive for the following DB 
      configuration entries:
      * String Macros
      * Path Macros
      
      CR20019913
      Multiplicity Determination
      
      Exception contains now the feature's qualified name
                        
2.1.  FIXED BUGS
      
      CR20019917
      setUserObject(Object)/getUserObject()
      
      The PersistenceManager's  setUserObject(Object) and getUserObject() 
      methods throw an exception.
      
      CR20019915
      Erroneous container proxy behaviour 
      
      The following predicate is not true in a persistence manager proxy: 
      
        propertyHolder.<Property>getProperty().size() == 
        propertyHolder.<Property>getProperty(
           (PropertyQuery)this.entityManager.newQuery(Property.class)
        ).size()

2.2.  DEPRECATED FEATURES
      
      CR20019916
      getViewForTimeRange
      
      The method 
      
        getViewForTimeRange(
          Collection,
          String, 
          XMLGregorianCalendar, 
          XMLGregorianCalendar
        )
        
      has been deprecated in favour of

        getViewForTimeRange(
          Container, 
          XMLGregorianCalendar, 
          XMLGregorianCalendar
        ).get(
          QualifierType.REASSIGNABLE,
          String
        )
      
            
2.3.  REMOVED FEATURES
      
      CR20019958
      Container Id Retrieval
 
      Remove the deprecated getContainerId and getTransientContainerId
      methods from the PersistenceHelper.
      
      CR20019916	 
      getViewForContiguousStates
 
      The unsupported method getViewForContiguousStates has been removed.

      
==============================================================================
Version 2.8.34                                                      2011-10-11
==============================================================================

0.    KNOWN ISSUES

      CR20019917
      setUserObject(Object)/getUserObject()
      
      The PersistenceManager's  setUserObject(Object) and getUserObject() 
      methods throw an exception.
      
      CR20019915
      Erroneous container proxy behaviour 
      
      The following predicate is not true in a persistence manager proxy: 
      
        propertyHolder.<Property>getProperty().size() == 
        propertyHolder.<Property>getProperty(
           (PropertyQuery)this.entityManager.newQuery(Property.class)
        ).size()

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019941
      Immutable DataType Serialization
      
      Serialization replaces an ImmutableDate or an ImmutableDateTime by its 
      mutable counterpart.      
                              
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none
 

==============================================================================
Version 2.8.33                                                      2011-09-29
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019921
      ImmutableDate to GregorianCalendar
      
      Erroneous conversion
      
      There is an offset of one month

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none
 

==============================================================================
Version 2.8.32                                                      2011-09-27
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019919
      Apply string macros to URIs

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none
 

==============================================================================
Version 2.8.31                                                      2011-09-11
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
      
      CR20019896
      Superclass callback invocation
      
      Superclass callbacks are not invoked

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019905
      Performance Improvement
      
      Get rid if SELECT statements retrieving configured values such as 
      transactionTimeUnique or validTimeUnique.
      
      There is a state plug-in to support the improvement:
      * KERNEL/MODEL=org.openmdx.application.dataprovider.layer.model.State_2
      * MODEL/transactionTimeUnique=(java.lang.Boolean)false
      * MODEL/validTimeUnique=(java.lang.Boolean)false
      
                        
2.1.  FIXED BUGS
      
      CR20019908
      Concurrent Access Failure
      
      Concurrent DB plug-in activation may lead to concurrent access failure.

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      
      CR20019907
      Database Plug-In Clean-Up
      
      Remove features which are deprecated for a long time already:
      * supportsObjectReplacement
      * createMultiValuedObject 

 
==============================================================================
Version 2.8.30                                                      2011-08-28
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019861
      Query columns have too long column names
      
      Queries create views with column aliases starting with the private
      attribute prefix, e.g. p$$.
      
      Formerly the column mapping was applied to the resulting alias requiring 
      all mappings made to avoid too long column names had to be applied twice, 
      once to the column name and once to the prefixed column name.
      
      Now the column mapping is applied to the original column name and the
      prefix is prepended to the resulting name.      
                        
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none

 
==============================================================================
Version 2.8.29                                                      2011-08-24
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
            
      CR20019861
      Database: autonum fields for Oracle. use to_char(nextval) instead of 
      CAST(nextval TO VARHAR2(n)). Refactoring of Database_1.getAutonumValue()
      and jdbc-driver-sql.properties.
                        
2.1.  FIXED BUGS

      CR20019854
      Core attribute replication
      
      Some core attributes are not replicated to their states.
      
      Queries relying on it fail therefore.
      
      CR20019859
      Database: forAll support for nested queries.
      query.forAllAddress().name().equalTo("abc");

      FOR_ALL:
      select v.* from OOCKE1_ACCOUNT v where object_id not in (select p$$parent from OOCKE1_ADDRESS vv WHERE NOT (vv.name = 'abc'))
      
      THERE_EXISTS:
      select v.* from OOCKE1_ACCOUNT v where object_id in (select p$$parent from OOCKE1_ADDRESS vv WHERE vv.name = 'abc')
      

      CR20019668
      REST and nested queries
      
      Nested queries are processed correctly in XML mode only.
      
      CR20019771
      
      ModelAware filter
      
      Complex queries are resolved correctly when passed down to the database 
      plug-in but fail when applied to a cached collection.
      
      CR20019857
      forAll in complex query
      
      
      Erroneous implementation
      
      forAll is mapped to thereExists in case of complex queries.
      
      CR20019855
      In-Memory Update
      
      Erroneous implementation
      
      Untouched properties are cleared by an in-memory PUT request.

2.2.  DEPRECATED FEATURES
      none
            
2.3.  REMOVED FEATURES
      none

  
==============================================================================
Version 2.8.28                                                      2011-08-08
==============================================================================

0.    KNOWN ISSUES

      CR20019836
      State-Aware Proxy
      
      BasicState state instances returned by a container based iterator must 
      not be updated while the iteration is in progress.

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.

1.    NEW FEATURES

      CR20019836
      State-Aware Proxy
      
      Erlaubt die Konfiguration von PlugIns f�r den DataManager-Proxy.
      
      CR20019830
      Multiplicity
      
      New classes:
      * The class oorg.openmdx.base.mof.cci.ModelHelper replaces
        org.openmdx.base.mof.spi.ModelUtils 
      * The the enumeration org.openmdx.base.mof.cci.Multiplicity replaces
        the class org.openmdx.base.mof.cci.Multiplicities.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019842
      Container interface determination is erroneous
      
      Simple name required
      
      The fully qualified names is used in case of a String argument for 
      example.
      
      CR20019840
      Persistent-new children visited twice

      CR20019717
      Dead code in dynamic WBXML Plug-in
                       
2.2.  DEPRECATED FEATURES
      
      20019830
      Multiplicity
      
      Deprecated classes:      
      * The class org.openmdx.base.mof.spi.ModelUtils has been deprecated
        in favour of org.openmdx.base.mof.cci.ModelHelper 
      * The class org.openmdx.base.mof.cci.Multiplicities has been deprecated
        in favour of the enumeration org.openmdx.base.mof.cci.Multiplicity
      
2.3.  REMOVED FEATURES
      
      CR20019384
      The MODEL layer's optimistic locking locking feature
            
 
==============================================================================
Version 2.8.27                                                      2011-06-30
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's allow now the timeout setting but
      ignores it.
       
1.    NEW FEATURES

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019825
      Transaction Timeout
      
      The lightweight transaction manager's setTimeout() implementation is 
      erroneous.

                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
            
 
==============================================================================
Version 2.8.26                                                      2011-06-28
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES

      CR20019824
      Non Managed Naming Context
      
      Support for global entries
      
      Allow creation of entries in the global context through the JNDI API.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      none
                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
            

==============================================================================
Version 2.8.25                                                      2011-06-21
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019818
      Version Logging
      
      The openMDX version is now logged upon the first logger retrieval (as
      opposed to SysLog's initialization).
      
      CR20019816
      Lenient PersistenceManager Validation
      
      When modifying references
      * do not test for their outermost package's identity
      * but for their InteractionSpec-free outermost package's identity
            
      CR20019764
      Unit of work support for transient objects
      
      makeTransactional(transientObject) throws now a 
      JDOUnsupportedOptionException.
                        
2.1.  FIXED BUGS
      
      CR20019819
      Erroneous State Merging
      
      Non-matching states are merged under the following conditions
      * two adjacent states differ only in attributes not belonging to the
        default fetch set (usually multi-valued attributes)
      * the differing attributes are not in the cache
                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019782
      Together-Exporter
      
      Support for the following formats has been removed:
      * "together.openmdx-1" (no replacement)
      * "xmi.openmdx-1" (replaced by "xmi1")
            
 
==============================================================================
Version 2.8.24                                                      2011-05-18
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      
      CR20019764
      PersistenceManager Validation

      The following methods help to comply with the persistence manager 
      validation policy:
      * org.openmdx.base.aop2.AbstractObject
        toNext(same)
        toSame(next)
      * org.openmdx.state2.cci.DateStateViews
        linkStateAndCore(state,core)
        getViewForContext(context,object)

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019764
      PersistenceManager Validation
      
      Validate whether value and target share the same PersistenceManager.
                        
2.1.  FIXED BUGS

      CR20019762
      Stack Trace Of Modelled Exception
      
      The stack trace of modelled exceptions is not printed.
      
      The printStackTrace() methods of modelled exceptions prints 
      the exception class and the exception parameters only.
                  
      CR20019763
      Code Class Arguments In Modelled Exceptions
      
      Code class arguments in modelled exceptions are mapped to null.
      
      Arguments of a type other than one of the built-in primitive types are 
      mapped to null. 
      
      The default mapping should be java.lang.String in future.
                       
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.23                                                      2011-05-17
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019761
      DateStateViews: Incomplete ValidTimeUnique support
      
      getCore() is not validTimeUniqueAware
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.22                                                      2011-05-16
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019749
      openMDX Kernel Log Entry
      
      org.openmdx.kernel.log.SysLog logs org.openmdx.base.Version instead of
      org.openmdx.kernel.Version.
                        
      CR20019751
      Caching of aspects
      
      There is no special caching for aspects anymore.
                        
2.1.  FIXED BUGS
      none
                  
2.2.  DEPRECATED FEATURES
      
      CR20019749
      openMDX Kernel Log Entry
      
      The class org.openmdx.kernel.Version is deprecated as it's information 
      is redundant to org.openmdx.base.Version.
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.21                                                      2011-05-11
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019744
      NullPointerException bei Container-Iteration
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
 
==============================================================================
Version 2.8.20                                                      2011-04-28
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES

      CR20019729
      RestServlet: RefInitializeOnCreate
      
      The connection URL parameter RefInitializeOnCreate is used to determine
      the connection's mode.


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019729
      RestServlet: RefInitializeOnCreate
      
      RefInitializeOnCreate is now set per connection. It's default is true
      in auto-commit mode and false for connections established via HttpPort.
                        
2.1.  FIXED BUGS
      
      CR20019735
      State Comparator: Validity
      
      The validity must be ignored if and only if validTimeUnique is false.
      
      CR20019730
      SimplePort ignores cookies
      
      The reply cookies must be offered to the cookie handler.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019729
      RestServlet: RefInitializeOnCreate
      
      The servlet init parameter RefInitializeOnCreate is no longer supported.
      

==============================================================================
Version 2.8.19                                                      2011-04-19
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
                  
      CR20019731
      ObjectAndValidStateComparator
      
      Use qualified feature name to select comparator and correct default 
      ignore list.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.18                                                      2011-04-18
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      
      CR20019434 & CR20019727
      Structure Factory

      The structure factory may be used for jmi1 structures as well.
            
      CR20019726
      RefContainer
      Structure Factory
      A RefContainer is now PersistenceCapable
      * two instances are equal if they share the same PersistenceManager and
        their respective transient container ids are equal
      * it may be retrieved via both
        persistenceManager.getObjectById(containerId) and 
        persistenceManager.getObjectById(transientContainerId)  
      
      CR20019723
      getTimeIndependentView
      
      The static method getTimeIndependentView(RefBaseObject) has been added to
      DateStateViews.
      
      CR20019669
      PersistenceCapable Containers
      
      The following JDOHelper methods may now be applied to containers as well
      * getPersistenceManager(container)
      * getObjectId(container)
      * getTransactionalObjectId(container)

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019584
      REST Request Exception
      
      Unparsable requests are no longer treated as system exception leading to 
      a connection destruction.

      CR20019728
      Offer Awareness
      
      ObjectAndValidStateComparator enhancement
      
      CR20019723
      getTimeIndependentView
      
      The static method getTimeIndependentView(RefObject) in DateStateViews has 
      been replaced by getTimeIndependentView(RefBaseObject).
       
      DateStateViews.
      
      CR20019724
      Jmi1ObjectInvocationHandler
      
      Improve information about ClassCastException
                        
2.1.  FIXED BUGS
                  
      CR20019591
      getObjectById fails in case of containers
      
      PersistenceManager.getObjectById(containerId)
      
      CR20019719
      SQL Placeholder
      
      The SQL placeholder determination is ignored in case of equalTo().

2.2.  DEPRECATED FEATURES

      CR20019669
      PersistenceCapable Containers
      
      The following PersistenceHelper methods have been deprecated 
      * getContainerId(container)
      * getTransientContainerId(container)
      as they have been replaced by:
      * getObjectId(container)
      * getTransactionalObjectId(container)
      
2.3.  REMOVED FEATURES

      CR20019723
      getTimeIndependentView

      The static method getTimeIndependentView(RefObject) has been removed 
      from DateStateViews.
      

==============================================================================
Version 2.8.17                                                      2011-04-11
==============================================================================

0.    KNOWN ISSUES

      CR20019584
      REST Request Exception
      
      Runtime exceptions are not yet handled properly.

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES
      
      CR20019708
      interposedSynchronization support
      
      interposedSynchronization support added to lightweight transaction. 
      

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019685
      A BasicException.Holder's Message
      
      getMessage() of a BasicException.Holder should delegate to 
      Throwables.getMessage(), i.e. returning the exception domain, the 
      exception code and the description.
                        
2.1.  FIXED BUGS
            
      CR20019716
      A lightweight transaction's afterCompletion callback
      
      The LightweightTransaction invokes afterCompletion() with status ACTIVE 
      if no resources are enlisted with a transaction.
      
      CR20019709  
      getTimeIndependentView
      
      The generic argument S is unnecessary      
      
      CR20019708
      beforeCompletion failures
      
      A beforeCompletion() failure must mark the transaction for rollback only.

      CR20019584
      REST Request Exception
      
      Rollback and rollback exceptions handled properly in auto-commit mode.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.16                                                      2011-04-05
==============================================================================

0.    KNOWN ISSUES

      CR20019649
      Container in time-point view contains null elements

      A state capable container's get method may not return null just because
      a state capable object has no states in order for the given unit tests 
      to run properly.
       
       
1.    NEW FEATURES

      CR20019630
      aop2 Impl context access
      
      Use PlugInContexts.uncheckedGetPlugInContext() instead of 
      PlugInContexts.getPlugInContext() in case of plug-in classes with
      wildcard types.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019630
      aop2 Impl context access
      
      Plug-in sub-classing support added
                        
2.1.  FIXED BUGS

      CR20019649
      Container in time-point view contains null elements

      CR20019628
      Valid Time Unique
      
      The ValidTimeUniqueType property is now evaluated properly.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.8.15                                                      2011-03-30
==============================================================================

1.    NEW FEATURES
      
      CR20019630
      aop2 Impl context access
      
      An aop2 Impl can access / create its context with this.thisContext(). 
      This context can now be retrieved via the object itself by using
      org.openmdx.base.aop2.PlugInContexts' getPlugInContext() method.
      
      CR20019663
      XML Comparator
      
      Allow feature specific methods to detect differences.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019666
      Modeled Exceptions
      
      The "typeName" parameter has been renamed to "class" to avoid naming
      conflicts.
      
      Note:
      This change requires re-generation of the JMI1 exception classes.

      CR20019663	
      Object And Valid State Comparator

      The class has been renamed from StateAwareXMLComparator to
      ObjectAndValidStateComparator.
      
      The modifiable set of ignored features has been replaced by a
      comparator callback method.
                        
2.1.  FIXED BUGS
      
      CR20019649
      Container in time-point view contains null elements
      
      The issue occurs in case of newly removed time ranges. 
      
      CR20019672
      Non-Transactional Read
      
      Non-transactional reads fail in case of a non-optimistic persistence 
      manager.
      
      CR20019670 
      Application Managed Unit Of Work
      
      No local transaction is provided for non-optimistic application managed 
      units of work.

      CR20019663	
      Object And Valid State Comparator
      
      Invalidated states must be ignored.
      
      CR20019666
      Modeled Exceptions
      
      Null descriptions lead to a stack overflow on getMessage().
      A null description is now replaced by the exception's qualified name.
      
      Note:
      This change requires re-generation of the JMI1 exception classes.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019663
      XML Comparator
      
      The modifiable set of ignored features has been removed.
      
      
==============================================================================
Version 2.8.14                                                      2011-03-22
==============================================================================

1.    NEW FEATURES

      CR20019662
      Persistence Manager Locking
      
      Allow locking the persistence manager while an application provided
      action is executed.
      
      CR20019661
      TestResultComparator
      
      The class StateAwareXMLComparator has been added

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019628
      Valid Time Unique
      
      The ValidTimeUniqueType property has been ignored in some (important) 
      cases.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.8.13                                                      2011-03-18
==============================================================================

0.    KNOWN BUGS
      none

1.    NEW FEATURES

      CR20019628
      Valid Time Unique
      
      The ValidTimeUniqueType property for the org.openmdx.state2.aop0.PlugIn_1 
      accepts the fully qualified class name of non-stated parents holding 
      children for which unique-time only is true.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019628
      Valid Time Unique
      
      Replace each
      * stateCapable.setCore(stateCapable) 
      invocation by the two following invocations:
      * stateCapable.setValidTimeUnique(true)
      * stateCapable.setTransactionTimeUnique(true)      
                        
2.1.  FIXED BUGS
      
      CR20019656
      isEmpty()'s iteration

      isEmpty() did often iterate over the whole collection.
      It should iterate as few as possible.
      
      CR20019660
      Oracle INTERVALDS
      
      INTERVALDS.toString() is erroneous:
      1.023 s are represented as 1.23 s
      
      A work-around for this Oracle bug has been added to openMDX.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019628
      Valid Time Unique
      
      The stateCapable.setCore(stateCapable) work-around support has been
      discontinued in favour of stateCapable.setValidTimeUnique(true).
      
      
==============================================================================
Version 2.8.12                                                      2011-03-15
==============================================================================

0.    KNOWN BUGS
      none

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019629	 
      Proxy has problems with flushed objects
      
      Deleted objects are subtracted twice from the container's size.
      
      CR20019654
      dereferencedType
      
      dereferencedType() is null in Container_1's getQueryType()
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.11                                                      2011-03-15
==============================================================================

0.    KNOWN BUGS

      CR20019629	 
      Proxy has problems with flushed objects
      
      Deleted objects are subtracted twice from the container's size.

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019649
      Container in time-point view contains null elements
      
      The issue occurs in case of newly populated time ranges. 
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.10                                                      2011-03-10
==============================================================================

0.    KNOWN BUGS

      CR20019629	 
      Proxy has problems with flushed objects
      
      It seems that deleted objects remain invisible after rollback.

1.    NEW FEATURES
      
      CR20019647	 
      Optimistic Unit Of Work
      
      * Loosely coupled with the JTA transaction.
      * Enable some units of work in a transaction to be committed while 
        others are rolled back.
      
      The new UnitOfWork interface provides tow methods:
      * void setForgetOnly()
      * boolean isForgetOnly()
      
      CR20019644	 
      Structure as JavaBean
      
      The method toJavaBean() has been added to the class Structures.
      
      CR20019589
      getValidStates with query
      
      The method getValidStates(Container,AnyTypePredicate) has been added to
      DateStateViews.
      
      CR20019637
      Java Bean as Structure
      
      The method fromJavaBean() has been added to the class Structures.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019635
      getViewForPropagatedState

      getViewForPropagatedState() shall delegate to getViewForTimeRange()
      where possible.
      
      The STRICT_QUERY mode has to be relaxed in the way, that the 
      underlaying state may be larger then required even if it is not new.
                        
2.1.  FIXED BUGS
      
      CR20019629	 
      Proxy has problems with flushed objects
      
      The actual fix disable caching for container proxies.

      CR20019648
      getViewForTimePoint
      
      The optimization is erroneous.
      
      CR20019636
      Transaction Time Query

      Deleted states must not be suppressed if existsAt is set.
                  
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.8                                                       2011-02-24
==============================================================================

1.    NEW FEATURES

      CR20019576
      getTimeIndependentView

      getTimeIndependentView() is a generalized version of getViewForCore().

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019576
      Query for core objects

      BasicState instance are excluded from DateStateContext-free views unless
      requested explicitely.

      CR20019625
      rollback-only

      beforeCompletion shall do nothing if rollback-only is set.
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.7                                                       2011-02-16
==============================================================================

1.    NEW FEATURES

      CR20019622
      Clone for states

      Add to clone methods to DateStateViews

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019577
      Unique Transaction & Valid Time
      
      Avoid "removedAt" access if the feature is non-persistent.
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019623
      Deprecated DateStateViews methods

      The deprecated DateStateViews methods have been removed.
      

==============================================================================
Version 2.8.6                                                       2011-02-10
==============================================================================

1.    NEW FEATURES

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019615	 
      removableReferenceIdPrefix
      
      The removableReferenceIdPrefix configuration is ignored for queries.
      
      CR20019555
      Involvement retrieval optimization
      
      Eliminate "LIKE '%'" SQL clauses.
                        
2.1.  FIXED BUGS

      CR20019613
      IRI Import
      
      Erroneous com.sun.jndi.toolkit.url.Uri reference.
      
      The import handler tries to create com.sun.jndi.toolkit.url.Uri 
      instances instead of java.net.URI instances.      
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.5                                                       2011-02-06
==============================================================================

1.    NEW FEATURES

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS

      CR20019555
      Involvement retrieval optimization
      
      Aspect queries used erroneous SQL statements.      
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.4                                                       2011-02-04
==============================================================================

1.    NEW FEATURES

      CR20019555
      Involvement retrieval optimization
      
      Avoid function based index searches for audit queries. Audit queries 
      should use persistent columns and avoid the view's derived attributes.
      
      The functionality is activated by a PERSISTENCE/referenceIdPattern
      entry, a white space separated list of 
      <feature-name>=<referenice-id-pattern> entries, e.g. 
      	
      	PERSISTENCE/referenceIdPattern=beforeImage=^([^.]+)[.](.+)$ object=^([^.]+)[.](.+)$
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019555
      Involvement retrieval optimization
      
      The referenceIdSuffixQueriesfunctionality has been replace by the
      more general referenceIdPattern functionality.
      

==============================================================================
Version 2.8.3                                                       2011-01-31
==============================================================================

1.    NEW FEATURES
      
      CR20019587
      State Query Optimization
      
      Requires a configuration change:
      * KERNEL/PERSISTENCE
        org.openmdx.application.dataprovider.layer.persistence.jdbc.Database_1 ->
          org.openmdx.application.dataprovider.layer.persistence.jdbc.RidOidQueryDatabase_1
      * PERSISTENCE/dbObjectFormat
        sliced -> sliced2
        slicedNonIndexed -> sliced2NonIndexed          
        slicedNonIndexedParentRidOnly -> sliced2NonIndexedParentRidOnly          
        slicedParentRidOnly -> sliced2NonIndexedParentRidOnly          

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019555
      Involvement retrieval optimization
      
      Requires a configuration change:
      * KERNEL/PERSISTENCE
        org.openmdx.application.dataprovider.layer.persistence.jdbc.Database_1 ->
          org.openmdx.application.dataprovider.layer.persistence.jdbc.RidOidQueryDatabase_1
      * PERSISTENCE/dbObjectFormat
        sliced -> sliced2
        slicedNonIndexed -> sliced2NonIndexed          
        slicedNonIndexedParentRidOnly -> sliced2NonIndexedParentRidOnly          
        slicedParentRidOnly -> sliced2NonIndexedParentRidOnly          

      CR20019605
      useNormalizedReferences
      
      useNormalizedReferences is used for very different switches.
      
      It is used 
      * as designed
      * as "not REF_TABLE" switch
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.8.2                                                       2011-01-24
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019555
      Involvement retrieval optimization
      
      Avoid function based index searches for audit queries. Audit queries 
      should use persistent columns and avoid the view's derived attributes.
      
      The functionality is activated by a PERSISTENCE/referenceIdSuffixQueries
      entry, a white space separated list of 
      <column-name>=<reference-id-prefix> entries, e.g. 
      	
      	PERSISTENCE/referenceIdSuffixQueries=before_image=audit* object=data*
           
                        
2.1.  FIXED BUGS
      
      CR20019599
      Empty multi-value slices
      
      Empty multi-value slices must be neither produced nor being required.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019352
      Configuration Clean-Up

      The PERSISTENCE layer configuration property 
      disableStateFilterSubstitution has been removed.
      

==============================================================================
Version 2.8.1                                                       2011-01-21
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      
      CR20019580
      InboundConnection & Partial Object
      
      The synchronization between entity manager and proxy did not work 
      correctly in case of partial objects.
      
      CR20019566
      Wrong Type Of Container Qualifier
      
      The qualifier has erroneously the member's type instead of the modeled 
      one.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.8.0                                                       2010-12-27
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                        
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.26                                                      2010-12-23
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019534
      TransactionAttributeType
      
      Copy javax.ejb.TransactionAttributeType to org.openmdx.base.transaction
      in order to get rod of openMDX' EJB dependency.
                        
2.1.  FIXED BUGS

      CR20019533
      URI Marshalling
      
      URI marshalling fails
      * for remote client calls
      * for typed queries      
      
      CR20019482
      Fetch plan propagation

      A query's fetch plan has to be propagated down to the persistence layer
      (even when used in an entity manager proxy).      

      CR20019535
      Transient Qualifier
      
      The standard plug-in does not replace transient qualifiers in case of 
      optimistic persistence managers.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.25                                                      2010-12-17
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019519
      EJB Connection does not support CharacterLargeObjects
            
2.1.  FIXED BUGS

      CR20019525
      Multi-object state retrieval

      For a given view context only the state of one object is returned.      

      CR20019519
      EJB Connection does not support BinaryLargeObjects
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.24                                                      2010-12-14
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019526
      Audit entries' unit of work id
      
      Audit entries' unit of work id must not be propagated to all multi-value 
      slices.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none

      
==============================================================================
Version 2.7.23                                                      2010-12-13
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019479
      Non-application id
      
      The RestFormat.Target's HREF prefix starts with a slash ('/') but does
      not end with a slash ('/') in accordance with the Servlet specification.
      
2.1.  FIXED BUGS
      
      CR20019519
      EJB Connection does not support BinaryLargeObjects
      
      CR20019479
      Non-application id
      
      Fails in case of proxy connections.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.22                                                      2010-12-09
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019448
      Auto-Commit
      
      A new manager shall be used by the REST-Servlet's in AUTO-COMMIT mode.      
      
2.1.  FIXED BUGS
      
      CR20019523
      Persistent-Dirty-NonTransactional
      
      Allocation of a new view manager made objects non-transactional.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019449
      setGroup() vs. setGroups(). Query_2Facade.setGroup() and .getGroup() not
      used so far. The methods are removed.


==============================================================================
Version 2.7.21                                                      2010-12-09
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019523
      Persistent-Dirty-NonTransactional

      Log statements and recovery code added.

      CR20019522
      Non-persistent features

      Allow system attributes to be made non-persistent.
      
2.1.  FIXED BUGS
      
      CR20019510
      No Multivalue Slices

      The database plug-in fails if there are no multivalue slices at all for
      a given object.

      CR20019508
      PersistenceHelper.getFeatureReplacingObjectById
      
      Enable getFeatureReplacingObjectById for BasicState instances

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20019521
      TYPE layer configuration
      
      The following unused properties have been removed
      * TYPE/transactionTimeUnique
      * TYPE/validTimeUnique


==============================================================================
Version 2.7.20                                                      2010-12-07
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019517	 
      DateStateViews.getViewForPropagatedState()

      State cloning is implemented erroneously.

      CR20019516
      DateStateViews.getStates() with boolean arguments
      
      The DateStateViews.getStates(StateCapable,boolean,boolean) method is 
      incorrectly implemented.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.19                                                      2010-12-02
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019507
      DateState_1 Equality
      
      duration.equals(null) fails with Apache's lightweight duration 
      implementation.
            
2.1.  FIXED BUGS
      
      CR20019512
      View For Propagated State
      
      The method getViewForPropagatedState() fails when nothing is overridden.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.18                                                      2010-12-01
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019507
      DateStateViews Assertions
      
      Assert reasonable time ranges: At the moment its possible to use a 
      stateValiTo which is less than the stateValidFrom.
            
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.17                                                      2010-11-30
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
            
2.1.  FIXED BUGS
      
      CR20019480
      Missing audit entries
      
      A flush()/beforeCompletion() sequence spared dirty objects from being
      audited.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.16                                                      2010-11-29
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019497      
      Erroneous Finalization
      
      Finalization of an container managed entity manager leads to flushing
      unless openMDX has been notified about the rollback-only.
      
2.2.  DEPRECATED FEATURES
      
      CR20019449
      setGroup() vs. setGroups(). Query_2Facade.setGroup() and .getGroup() not
      used so far. The methods are removed.

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.15                                                      2010-11-22
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR20019480
      Missing audit entries
      
      Improve dirty/clean handling
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.14                                                      2010-11-18
==============================================================================

1.    NEW FEATURES
      
      CR20019478
      Absolute Positioning
      
      The DB object configuration entry "disableAbsolutePositioning" with the 
      default value "(java.lang.Boolean)false" allows to disable absolute 
      positioning for the given DB object.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019445
      Premature finalization under WebSphere
      
      Protect the persistence manager's flush against premature finalization.
      
      Use close() to complete the work instead of afterBegin() and 
      beforeCompletion() if ContainerManagedtransaction is true. 
      
      CR20019473
      Long URLs
      
      The HTTP Port has to be changed the following way:
      * Query requests use POST instead of GET
      * Delete requests use PUT with a "?FunctionName=DELETE" suffix
      
      CR20019473
      REST Queries
      
      REST connections use POST instead of GET now.
      
      CR20019472
      Dirty objects without "really" modified features
      
      If modfiedAt and modifiedBy are cleared if they are the only modified
      features unless the object is an instance of 
      org::openmdx::base::AspectCapable.
      
2.1.  FIXED BUGS

      CR20019437
      Remote client MIME type
      
      The REMOTE client may now use text or binary format:
      * application/xml
      * application/vnd.openmdx.wbxml
      
      CR20019439
      Connection URL
      
      The cnnection URL's query parameters shall be encoded.
      
      CR20019433
      View For Time-Range Without Holes
      
      Creates erroneously overlapping states.

      CR20019472
      "Empty" audit entries
  
      org::openmdx::state2 erroneously treats them as removed.
  
      CR20019430
      flush
      
      Flush leaves dirty objects in an erroneous state:
      * Atttributes are somtime unreadable
      * Committing of persistent-new instances fails with a concurrent 
        modification exception
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.13                                                      2010-11-12
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019469
      Connection 2
      
      The try/catch sequences for connection 2 have been improved.
      
      CR20019435
      Duration and URI import
      
      Duration and URI character sequences are not marshaled to their 
      appropriate class
      
      CR20019431
      Queries in TIME-RANGE view
      
      Queries for BasicState instances are disallowed in TIME-RANGE views.
      
2.1.  FIXED BUGS

      CR20019467	 
      Incorrect Flush Order
      
      Children must be deleted before their parents
      
      CR20019431
      Queries in TIME-POINT view
      
      The returned views had state IDs instead of object IDs
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.12                                                      2010-11-10
==============================================================================

1.    NEW FEATURES
      
      CR20019395	 
      Ability To Disable Core Object Removal
            
      The aop0 state plug-in has a new configuration option 
      'stateCapableDeletable' which enables the deletion of state
      capable objects. Its default value is 'false'.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019461
      Involvement Query Optimization
      
      Replace "LIKE" by "=" where appropriate.
      
2.1.  FIXED BUGS
      
      CR20019465
      ForeignLogRecord
      
      The foreign log record's logger field is empty.
      
      CR20019462
      Removing transient objects from container
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.11                                                      2010-11-08
==============================================================================

1.    NEW FEATURES

      CR20019455
      Single State Views
 
      The method DateStateViews.representsSingleState() tells whether the
      view refers to a single state.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR20019452
      Optimistic locking for stated objects
      
      The request is twofold
      1. modifiedAt/modifiedBy shall be updated
         * when a core attribute is modified
         * when a state is created or removed 
      2. modifiedAt/modifiedBy shall not be propagated from the core object 
         to the states 
            
      CR20019454
      Properties Configuration
      
      The PropertiesConfiguration shall close its streams in order to avoid
      running out of file handles.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20019455
      objIsRemoved
      
      aop1's objIsRemoved() method was unreferenced and has therefore been 
      removed,


==============================================================================
Version 2.7.10                                                      2010-11-03
==============================================================================

1.    NEW FEATURES

      CR20019413
      PREFERENCES Table
 
      Allow PREFERENCES table lookup to be disabled:
        PERSISTENCE/usePreferencesTable=(java.lang.Boolean)false
      while it still defaults to 
        PERSISTENCE/usePreferencesTable=(java.lang.Boolean)true
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
      CR20019322
      Removal refers to an object's parent
      
      Do not add the parent to the unit of work.
      * An object to be removed should not refer to its parent especially in 
        the case of before images.      
       
      CR20019424
      A StateCapable's stateVersion attribute
      
      The 'stateVersion' attribute
      * shall not be propagated to the states
      * shall not affect 'modifiedAt' and 'modifiedBy'
      
2.1.  FIXED BUGS
      
      CR20019322
      ModelAwareFilter
      
      The method isCoreInstance() is not implemented correctly.
      
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.9                                                       2010-10-31
==============================================================================

1.    NEW FEATURES
      none
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019418
      Overlapping state

      Disable the creation of overlapping states

      CR20019443	 
      validTimeUnique fallback
      
      he validTimeUnique fallback algorithm has to check the object's type for 
      org::openmdx::base::Aspect before accessing its "core" feature
      
      CR20019440 
      JavaBeans
      
      The DefaultPersistenceDelegate should avoid invocation of the standard 
      initialize() method. 
      
      CR20019417
      Batching failure
      
      The first element of the next batch is the same as the last element of 
      the previous batch in case of non-index tables or views.
      
      CR20019438
      AspectCapable filter optimization
      
      The AspectCapable filter optimization may lead to a NullPointerException. 
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20019441
      State_1 TYPE plug-in
      
      Thus plug-in should be removed as it leads to an erroneous behaviour.


==============================================================================
Version 2.7.8                                                       2010-10-29
==============================================================================

1.    NEW FEATURES
      none
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019360	 
      Basic Authentication
      
      Use "Basic " instead of "BASIC " as authorization value prefix.      
      
2.1.  FIXED BUGS
      
      CR20019366
      "Reduced" JMI delegation stack
      
      There exists a JUnit-Test
      * where plug-in layers are missing when a plain container is retrieved
	  * where no plug-in layers are missing when an (even null) query is 
	    supplied

      Container.toArray(Object[]) has to be corrected.
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.7                                                       2010-10-27
==============================================================================

1.    NEW FEATURES

      CR20019433
      View For Time-Range Without Holes
      
      The method getViewForTimeRangeWithoutHoles() fills the holes in the
      given time-range but leaves existing states before returning a view for 
      the given time-range.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019366
      "Reduced" JMI delegation stack
      
      Some marshalling assertions added.
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 2.7.6                                                       2010-10-26
==============================================================================

1.    NEW FEATURES

      CR20019424
      RefInitializeOnCreate
      
      The "org.openmdx.jmi.option.RefInitializeOnCreate" option may be used to 
      activate this feature.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019424
      RefInitializeOnCreate
      
      The "org.openmdx.jmi.option.RefInitializeOnCreate" option's default 
      value is now "false" (as opposed to its former implicit "true").

      CR20019396
      Multi-valued State Retrieval
      
      Allow the qualifier specification to be multi-valued.
      
      CR20019402
      DateStateViews.getStates()
      
      Accept Container<? extends StateCapable> as argument. There is no need
      to restrict container arguments to Container<? extends DateState>.
      
      CR20019411
      stateVersion v/s stateNumber
      
      Semantic
      * state1's stateNumber stores the last state number created by the 
        state1 API
      * state2's stateVersion stores the number of states which have been 
        created through the state2 API
        
      In order to be able to rename stateNumber to stateVersion without data 
      conversion we have to get rid of the semantic change.
      
      CR20019415
      refDelete()
      
      refDelete() shall throw a JmiServiceException instead of a 
      RuntimeServiceException in case of failure.
      
      
2.1.  FIXED BUGS

      CR20019424
      Applying refInitialize() on an object with user defined primitive types 
      shall give a warning instead of an exception.

      CR20019417
      Batching Failure
      
      Batching didn't work for some views.
      Resolved now for non-sliced views.
            

2.2.  DEPRECATED FEATURES

      CR20019396
      Multi-valued State Retrieval
      
      Some of the state retrieval methods have been deprecated.

2.3.  REMOVED FEATURES
      
      CR20019402
      DateStateViews
      
      The deprecated getStates() and getView() methods have been removed.


==============================================================================
Version 2.7.5                                                       2010-10-24
==============================================================================

1.    NEW FEATURES
      
      CR20019372
      audit2 Extension
 
      audit2 provides the following involvement persistence flavour:
      * EMBEDDED
        The involvement is embedded in the before image.
        An org::openmdx::audit2::UnitOfWork does not remember the object 
        creation involvements in this mode.

      Use the following entry to activate the embedded mode:
        <property 
          name="org.openmdx.audit2.PlugIn.involvementPersistence" 
          value="EMBEDDED"
        />      

      CR20019407
      toAnyURI
      
      toAnyURI() generates an AnyURI representation of a path
      
      Reserved characters in cross-references are percent-encoded: 
      * All percent "%" characters are percent-encoded as "%25" across the 
        entire XRI reference.
      * All number sign "#" characters that appear within a cross-reference 
        are percent-encoded as "%23".
      * All question mark "?" characters that appear within a cross-reference 
        are percent encoded as "%3F".
      * All slash "/" characters that appear within a cross-reference are
        percent encoded as "%2F".

      toIRI() and toAnyURI are synonyms.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20019360
      Remote Client

      Be prepared for body retrieval failures.

      CR20019347
      Container Managed Persistence Manager

      Take persistence manager factory configuration into consideration. The
      setting of the "org.openmdx.jdo.option.ContainerManaged" option is 
      ignored at the moment.

      Enable a persistence manager with container managed transactions to be
      closed while its unit of work is still active.

2.2.  DEPRECATED FEATURES

      CR20019372
      audit2 Extension
      
      The org::openmdx::compatibility::audit1 model is deprecated and will be 
      removed in the next release. 

      CR20019360
      HttpCookie

      Support dot-less domain matching.

2.3.  REMOVED FEATURES

      CR20019372
      audit2 Extension
      
      The org::openmdx::compatibility::audit1 support has been removed.

      The following configuration entries must no longer be used:      
        <property 
          name="org.openmdx.audit2.PlugIn.modifiedFeaturePersistent" 
          value="(java.lang.Boolean)false"
        />
        <property 
          name="org.openmdx.audit2.PlugIn.audit1Persistence" 
          value="(java.lang.Boolean)true"
        />


==============================================================================
Version 2.7.4                                                       2010-10-11
==============================================================================

1.    NEW FEATURES
      
      CR20019394
      Avoid redundant core reference columns
      
      This feature is supported by sliced db objects and controlled by 
      PERSISTENCE/useViewsForRedundantColumns which defaults to 
      (java.lang.Boolean)true.
      
      It expects the following columns being provided by a view:
      * CORE
      * P$$CORE__RID
      * P$$CORE_PARENT__RID
      * P$$CORE_PARENT__OI

      CR20019346
      NonManaged JNDI Context Extensions
      
      Two new JNDI URL protocols have been added:
      * _new:
        The "_new" protocol registers a JavaBean factory in the JNDI context.
        The URL
            _new:test.openmdx.kernel.lightweight.naming.JavaBean?string=aStrin
            g &integer=(java.lang.Integer)-1"
        for example creates a java bean factory which instantiates  
        test.openmdx.kernel.lightweight.naming.JavaBean and sets the 
        properties "string" and "integer" to "aString" and -1, respectively.
      * jndi:
        The "jndi" protocol registers a link to a foreign JNDI context.
        The URL
            jndi:a.websphere.entry?java.naming.factory.initial=com.ibm.websphe
            re.naming.WsnInitialContextFactory&java.naming.provider.url=corbal
            oc:iiop:myhost.mycompany.com:2809 
        for example creates a link to the WebSphere JNDI name 
        "a.websphere.entry".   
        Note: 
            '/' characters in the foreign JNDI name must be escaped ("%2F")

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019387
      Path.lock()
      
      lock() should return the path itself

2.1.  FIXED BUGS
      
      CR20019397
      URI Marshaller
      
      Ability to handle null values
      
      CR20019363
      Container.clear()

      The clear() method should work for state capable collections as well.

      CR20019388
      enum as reference
      
      Reserved identifiers used as reference names are escaped in the cci2 
      mapping but noty yet in the jmi1 mapping.
      
      CR20019357	 
      Multi-tenancy
      
      audit2-aop0-PlugIn_1 must always use the accessor in order to retrieve
      the audit segment id.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      

==============================================================================
Version 2.7.3                                                       2010-10-07
==============================================================================

1.    NEW FEATURES
      
      CR20019369	 
      TransactionManager
      
      Add a register() method to the ComponentEnvironment.
      Objects will be taken created by the factory if one is registered for
      the given object class.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019386
      afterCompletion
      
      After completion all objects (not only dirty ones) are evicted unless
      retainValues is on.
      
      CR20019364
      AbstractRestInteraction
      
      Improve error message for unsupported interactions.
      
      CR20019383
      PersistenceManager.evictAll()
      
      The evictAll() method should affect containers as well. At the moment 
      only objects are evicted while containers remain stale.
      
      In future a PersistenceCapable's evict() method will evict the 
      containers as well (which in turn changes evictAll()'s behaviour 
      accordingly).

2.1.  FIXED BUGS
      
      CR20019385
      Unit Of Work Member Re-ordering
      
      The erroneous algorithm has been replaced.
      
      CR20019373
      Invalid queries for getStates(container,query)
      
      DateStatViews amends the query with illegal conditions leading in case 
      of open ended time range which results in null values being applied to
      the SQL statements.

2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019373
      DateStateContexts
      
      The remaining methods of DateStateContexts have been moved to another
      appropriate place and the class itself has been removed.
      

==============================================================================
Version 2.7.1                                                       2010-09-26
==============================================================================

1.    NEW FEATURES
      
      CR20019357
      Multi-tenancy
      
      Add tenant support
      
      There are two additional static methods in the UserObjects class:
      * setTenant(PersistenceManager,Object)
      * Object getTenant(PersistenceManager()
      
      The getTenant() method could be used for example in an 
      org.openmdx.audit2.aop0.PlugIn_1 extension to override the
      getAuditSegmentId(PersistenceManager) method.
      
      CR20019347
      Container Managed PMs
      
      The option org.openmdx.jdo.option.ContainerManaged activates the 
      following behaviour:
      * auto-start on creation
      * auto-flush on close
      * exclusive lock for close and flush
      
      CR20019343
      Configuration Properties
      
      Example:
        defaults=xri://+resource/META-INF/...
        include[0]=http://...
        include[1]=file:/...

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019338
      Model_1Factory
      
      Throw a runtime exception instead of returning null in case of failure.
      
      CR20019344
      Non-persistent features
      
      Exclude non-changeable features from being updated.
      
      CR20019340
      StateCapable should extend ContextCapable
      
      StateCapable objects should be ContextCapable      

2.1.  FIXED BUGS
      
      CR20019356
      Remove aspects with core object
      
      CR20019355
      Audit cascaded deletes
      
      CR20019323
      NOT_FOUND exceptions at meta data level must be remapped
      
      NOT_FOUND exceptions at meta data level are for example silently 
      converted to "return null" when occurring during an object retrieval 
      through the container API.
      
      CR20019349
      Entity Manager Manager Proxy
      
      Propagate Configuration Entries
      * javax.jdo.option.ConnectionDriverName
      * javax.jdo.option.ConnectionURL
      
      CR20019344
      Non-persistent features
      
      Take the "nonPersistentFeature" configuration into consideration.
      
      CR20019339
      SparseArray
      
      SparseArray retrieval leads to ClassCastException or 
      IndexOutOfBoundException.	 
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.7.0                                                       2010-08-30
==============================================================================

1.    NEW FEATURES
      
      CR20019316
      JMI1: signature add(Object obj). Add signature add<feature>(Object obj) 
      to JMI1 interfaces.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none 

2.1.  FIXED BUGS
      
      CR20019317	 
      DateStateViews' createState method
      
      The createState() method must assign the state to its core.
      
      CR20019312
      validTimeUniquePattern
      
      Support lacking configuration
      
      validTimeUniquePattern entries are unnecessary in a standard deployment. 
      The plug-in should therefore support configurations without any 
      validTimeUniquePattern entry.
      
      CR20019311
      Automatic id for transient children
      
      Adding a child to a transient container without providing an explicit 
      qualifier stores the child with a temporary place-holder 
      (":<transientObjectId>") which is replaced by a final qualifier provided 
      by one of the configured aop0 plug-ins at the time the container is made
      persistent. 
       
      CR20019309
      org.openmdx.uses.java.util
      
      This package is lacking in the JRE 5.0 distribution.
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.6.5                                                       2010-08-16
==============================================================================

1.    NEW FEATURES
      none 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019303
      Provider configuration
      
      Accept each resource URL once only.

2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.6.4                                                       2010-08-08
==============================================================================

1.    NEW FEATURES

      CR20019285
      Container Managed Transaction Support
      
      An inbound connection shall support
      * RESOURCE_LOCAL transactions 
      * JTA transactions 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019285
      Configurable and Non-Configurable Properties
      
      The classes ConfigurableProperty and NonConfigurableProperty have been 
      moved from org.openmdx.kernel.persistence.cci back to 
      org.openmdx.base.persistence.cci. 
      
2.1.  FIXED BUGS
      none
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.6.3                                                       2010-07-13
==============================================================================

1.    NEW FEATURES

      CR20019259
      Time-range view readability
      
      Asserts that only single-state views allow to read stated attributes if
      and only if org.openmdx.state2.spi.Parameters.STRICT_QUERY is true.
      
      Single-state time-range views are created in one of the following ways:
      * PersistenceManager.newInstance() and its JMI correspondents
      * DateStateViews.createStatedObject()
      * DateStateViews.createStated()
      * DateStateViews.getViewForInitializedState()
      * DateStateViews.getViewForPropagatedSstate()
      * DateStateViews.getStates()
      * DateStateViews.getValidStates()
      * DateStateViews.getCroppedStates()
      Even such a view may become unreadable when the underlying state is 
      affected through other views. 

      CR20019261
      Core attributes 
      
      Make the core attributes modifiable 
      
      There are two possible implementations:
      * normalized: The core attributes are stored in the core object only.
        (This mode is incompatible with RID/OID usage and therefore not yet
        suported)
      * de-normalized: The core attributes are (redundantly) propagated into 
        all states. (This mode is implemented in order to continue RID/OID 
        support)
      
      CR20019262 
      Transaction Time Factory 
      
      The method UserObjects.setTransactionTime(Factory<Date>) allows to 
      override the implicit transaction time acquisition (new Date()).
       
      CR20019257
      DateStateViews
      
      DateStateViews has been amended by a number of public static methods.
      
      CR20018768
      Persistence Capable Collections
      
      Support
      * persistenceManager.retrieveAll(Collection)
      * persistenceManager.evictAll(Collection)
      * persistenceManager.refreshAll(Collection)
      for
      * RefContainer instance 
      * Query result Lists
      * other java.util.Collections
      
      CR20019228
      Unescape Path(String) argument 

      Escaped dots may be replaced by the method 
      SpecialResourceIdentifiers.unescapeResourceIdentifier(String). 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019259
      Time-point view
      
      The validFor of time-points view for invalidated states which are open
      at both ends has has changed from their creation date to 2000-01-01:
      
      From now on use the following priorities to define the validFor of a 
      time-point view for in invalidated state:
      1. stateValidFrom unless it is null
      2. stateValidTo unless it is null
      3. 2000-01-01    
       
      CR20019228
      Unescape Path(String) argument 
      
      Replace escaped dots for the following formats
      * XRI 1
      * XRI 2
      
      CR20018768 	
      refresh 

      To be JDO compliant
      * shall the parameterless method refreshAll() do nothing when invoked 
        outside of a transaction.
      * shall the parameterless method evictAll() ignore dirty instances
      
2.1.  FIXED BUGS
      
      CR20019263
      openmdxjdoClone
      
      PersistenceHelper.clone must not ignore attributes missing in the current 
      fetch group. 
      
      CR20018837
      Persistent-new-deleted
      
      Main issues
      * The removal of a persistent-new object has to be propagated to its children
      * An entity manager proxy has to take care whether a persistent-new object's
        removal has to be propagated or not
      * A removed object must keep its manager
      
      CR20019245
      ClassCastException in container.getX(xQuery)
      
      container.getX(xQuery) throws a ClassCastException in an EntityManager-
      Proxy if xQuery is null.  
            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20019228
      Unescape Path(String) argument 

      The method AbstractDatabase_1.toPattern(String) has been removed in 
      favour of SpecialResourceIdentifiers.unescapeResourceIdentifier(String).

      CR20018768 	
      Evictable 

      The interface org.openmdx.base.accessor.rest.Evictable could be
      eliminated.
      
      
==============================================================================
Version 2.6.2                                                       2010-06-24
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019225
      Rational Rose Support

      Rational Rose models brought up to date.

      CR20018768
      Containment Associations
      
      The container interfaces have been standardized:
      * org.w3c.cci2.Container<E> is generic CCI level interface extending
        java.util.Collection<E>
      * org.oasisopen.jmi1.RefContainer<E><E> is generic JMI level interface 
        extending org.w3c.cci2.Container<E>
      * org.openmdx.base.persistence.spi.PersistenceCapableContainer is
        an interface used the the implementation only. It should not be used
        in an application program.
      
      CR20019223
      Amend RSM importer
      
      Improve RSM 7.5 support: 
      * local forward references
      * references into other EMX files 
      * uml:Package
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      
      CR20019198
      org::openmdx::base::Context 
      
      Get rid of unused model classes such as
      * org::openmdx::base::Context
      * org::openmdx::base::ViewCapable
      but leave
      * org::openmdx::base::ContextCapable

      CR20019197
      org::openmdx::compatibility::datastore1  
      
      Get rid of unused model package
      * org::openmdx::compatibility::datastore1 
      
      
==============================================================================
Version 2.6.1                                                       2010-06-04
==============================================================================

1.    NEW FEATURES
      
      CR20019195
      JRE 5.0
      
      openMDX 2.6 is now JRE 5.0 enabled. 
      
      CR20019136
      JDO Data Store Cache
      
      The managed connection cache consists of the following three levels.
      The second level cache is automatically evicted after commit on any
      of its connections.
      
      1. BASIC (default for a data manager proxy's connections)
         
         The basic cache is required as it allows to sow virtual objects.
         
         * It is supported by the org.openmdx.base.accessor.rest.spi.BasicCache_2
           plug-in, which can be configured explicitly through the data manager's
           "cachePlugIn" property.
         * "timeToLive" defines the number of seconds between a caches last touch() 
            and its  expiration. The default value is 3600 seconds, a value less
            or equals to 0 inhibits expiration.
         * The "sowAllPattern"/"sowAllClass" configuration value pairs allow to
           define the object class for any matching pattern, i.e. a matching
           object id never leads to a NOT_FOUND exception.
        
      2. PINNING (default for a data manager's connections)
      
         Pinning can be configured either through configuration or through 
         the javax.jdo.datastore.DataStoreCache API,
         
         * It is supported by the org.openmdx.base.accessor.rest.spi.PinningCache_2
           plug-in, which can be configured explicitly through the data manager's
           cachePlugIn property.
         * Setting "pinningCacheFactory" to a non-null non-empty value overrides
           CacheManager.getCacheFactory()
         * Setting "pinningCacheName" to a non-null non-empty value forces the
           cache to be registered and shared by different data manager factories.
         * "pinningCacheConfiguration" defines an URL used to load the the properties
           to be passed to javax.cache.CacheFactory.createCache()
         * "pinId" proposes objects with the given id to be pinned
         * "pinAllPattern" proposes objects matching the given pattern to be pinned
         * "pinAllClass" proposes objects of the given class to be pinned
         * "pinAllType" proposes objects of the given class or any of its 
            subclasses to be pinned
         
      3. AUTOMATIC

         Automatic caching may be configured to cache any object.
                  
         * It is supported by the org.openmdx.base.accessor.rest.spi.AutomaticCache_2
           plug-in, which can be configured explicitly through the data manager's
           cachePlugIn property.
         * Setting "automaticCacheFactory" to a non-null non-empty value overrides
           CacheManager.getCacheFactory()
         * Setting "automaticCacheName" to a non-null non-empty value forces the
           cache to be registered and shared by different data manager factories.
         * "automaticCacheConfiguration" defines an URL used to load the the properties
           to be passed to javax.cache.CacheFactory.createCache()           

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019200
      container.isEmpty(
      
      The configuration value
      * MODEL/disableStateFilterSubstitution=(java.lang.Boolean)true
      has been replaced by
      * PERSISTENCE/disableStateFilterSubstitution=(java.lang.Boolean)true
            
      CR20019192 
      UnsupportedOperationException in JMI collection delegate calls 

      UnsupportedOperationException in JMI collection delegate calls shall be 
      mapped to InvalidCallException.       
      
      CR20019189
      RefQuery_1 mapping e
      
      Avoid static map by applying the standard mapping pattern.       
      
      CR20018664 	
      FilterProperty 
      
      FilterProperty & AttributeSpecifier are now used by dataprovider classes only.
      That's why they have been moved to the package
      org.openmdx.application.dataprovider.cci.
      
      CR20019186 	
      REST DELETE Request
      
      A DELETE request URL's query string shall be used as URL encoded REST 
      request in absence of a "Content-Type" header. 
       
      CR20019181 
      REST GET Request
      
      A GET request URL's query string shall be used as URL encoded REST 
      request in absence of a "Content-Type" header. 
      
2.1.  FIXED BUGS
     
      CR20019200
      container.isEmpty(
      
      Is sometimes true when it should be false.

      CR20019195
      Mix-in interfaces
      
      Mix-in interfaces had been swallowed by layers without aspect 
      implementations such as the sentinel layer.
      
      CR20019182
      equals() does not work 
      
      obectA.equals(objectB) returned false if objectA was retrieved by 
      persistenceManagerA and objectB by persistenceManagerB even if the 
      identities of obectA and objectB were equal. 

      Now the corresponding equal() method
      1. compares the object identities if both objects are persistent
      2. compares the transactional object identities if neither of the 
         two objects is persistent
      3. returns false otherwise
      
      CR20019188
      Simple Port Accept Header
      
      The Accept header must be set by the SimplePort.      
      
      CR20019186 	
      Simple Port MIME Type
      
      The Simple Port must support other MIME types beside its "text/xml" 
      default.
      
      
      A DELETE request URL's query string shall be used as URL encoded REST 
      request in absence of a "Content-Type" header. 

      CR20019183
      Cookie Manager
      
      Correct the cookie manager's behaviour in respect of "Cookie" and 
      "Cookie2" requests.
      
      CR20019184
      Special Characters In Path Segment 
      
      Correct the URLs containing Case-Exact-String-Subsegments which are used 
      when a qualifier contains such characters as '+'.
      
      CR20019164
      RestServlet throws NullPointer
      
      This request includes the following fixes:
      
      * MIME type extraction     
        The MIME type is now extracted from the content type in 
        ServletTarget.newWriter().
        RestFormat.getOutputFactory(mimeType) on the other hand expects to 
        receive a pure MIME type now. 
         
      * ServletResponse ContentType
        Include the character encoding in the servlet response's content type attribute 
       
      * HttpHeaderFieldValue
      
        The HttpHeaderFieldValue erroneously expects comma separated values to 
        be delivered in separate enumeration elements.        
      	
      CR20019180
      XMLOutputFactories
      
      XMLOutputFactories.isSupported() must use all configured MIME types.
      It must not be restricted to the already loaded classes.
      
      
      CR20019048
      VarableSizeMappedRecord
      
      VarableSizeMappedRecord is not de-serializable 
      
      The record's deserialized keys are not internalized, i.e. lookup fails. 
      
      CR20019179
      Cloned object is not flushable
      
      Missing flushable entries: 
      Transient multivalued attributes lack their corresponding flushable 
      entries. 
      
2.2.  DEPRECATED FEATURES

      CR0002764
      Filter Operators 
      
      Replace some generated short constant classes by enums:
      * Directions & Orders -> SortOrder
      * FilterOperators -> ConditionType
      
      The deprecated classes are moved to the package
      org.openmdx.application.dataprovider.cci.
      
2.3.  REMOVED FEATURES
      
      CR20019191
      org.w3c.cci2.MultivaluedTypeOrder
      
      Get rid of unsupported interface.
      
      CR20019190
      QuerySpec
      
      Get rid of the unused interface.

      
==============================================================================
Version 2.6.0                                                       2010-05-01
==============================================================================

1.    NEW FEATURES
      
      CR20019135
      Support for Eclipse EMF / UML2 Tools. openMDX models migrated to EMF / 
      UML2 Tools models. The .uml files are located in src/model/emf. Eclipse EMF
      replaces RSM as primary modeling tool for openMDX based applications.  

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20019124
      REST Exceptions
      
      * A REST exception's stack trace is included even if it has to be 
        prepared.
      * Resource Exceptions are logged at Level.FINE.
        Internal Server Errors are logged at Level.SEVERE.
         
      CR20019076
      JDO callbacks 
      
      * All matching implementation classes are now taken into consideration 
        for lazy instantiation and feature dispatching, not only the most and 
        least derived ones.
      * Super-classes of matching implementation classes are excluded from the 
        set of classes to be potentially instantiated.
      * Callbacks are dispatched to all classes of this set implementing the
        given callback interface.
         
      CR20019122
      REST Servlet Behaviour
      
      * The REST Servlets default MIME type is "application/xml;charset=UTF-8".
      * CREATE and UPDATE reply objects are re-fetched after auto-commit. 
      
2.1.  FIXED BUGS
      
      CR20019123
      commit() behaviour 
      
      The unit of work of a persistence manager proxy re-orders persistent-new 
      objects before propagation if necessary.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      20019090
      Remove SLF4 from openMDX/Core 

      Remove SLF4J from
      * openMDX/Core
      * openMDX/Extension

      Restrict its usage to dependent projects such us
      * openMDX Thrirtparty OpenEJB
      * openMDX Platform OpenEJB 

      
==============================================================================
Version 2.5.4                                                       2010-03-12
==============================================================================

1.    NEW FEATURES

      CR20019036
      HttpClient 
      
      HttpClient and HttpCookie support added.
      
      openmdx-authentication has been been added.

      CR20019014
      Subclass selection 
      
      Support for a multi-valued OBJECT_INSTANCE_OF predicate.
      
      Usage:
      
            PropertyQuery query = (PropertyQuery) entityManager.newQuery(
                Property.class
            );
            PersistenceHelper.setClasses(
                query,
                IntegerProperty.class, DecimalProperty.class
            );
      
      
      CR20018984
      Entity Manager Proxy Factory 
      
      Provide an EJB independent Entity Manager Proxy Factory:
      org.openmdx.application.rest.spi.EntityManagerProxyFactory_2
      
      CR20018982 
      retainValues
      
      Support the retainValues flag.
      
      Transactional objects are
      * evicted after flush or commit if retainValues is false
      * not evicted after flush or commit if retainValues is true
       
      CR20018976
      Database: support for nested queries. Support for filter property values 
      of type org.openmdx.base.query.Filter. 
      
      CR20018820 	
      audit2
      
      Audit2 storing audit entries the same way as audit1 does.
      
      CR20018959
      Date/Time Precision
      
      The precision of timestamp fields may now be configured with the 
      dateTimePrecision option as
      * SECONDS
      * MILLISECONDS
      * MICROSECONDS (default)
      * NANOSECONDS     
      
      It is applied under the following conditions:
      * The protocol between PERSISTENCE and MODEL layer uses XML data types
      * the value refers to a time point after 1970-01-01T00:00:00Z
      * the column includes a timezone in case of write operations 
      
      CR20018955
      VirtualObjects_2
      
      The new plug-in is well known to Switch_1 as it provides virtual objects 
      on an object id base, overriding the ports configured for any matching 
      pattern.
      
      There are two ways to inject virtual objects:
      * as deployment configuration one can provide pattern/class pairs for 
        final classes
      * via the VirtualObjects_2_0.putSeed(Path,objectClass) method plug-ins 
        are able to inject objects at run-time
      
      The default configuration is

        <property 
        	name="org.openmdx.jdo.DataManager.virtualObjectPlugIn" 
        	value="org.openmdx.virtual.PlugIn"
        />
		<!-- ... -->
        <property 
        	name="org.openmdx.virtual.PlugIn.class" 
        	value="org.openmdx.base.accessor.rest.spi.VirtualObjects_2"
        />
        <property 
        	name="org.openmdx.virtual.PlugIn.finalPattern[0]" 
        	value="xri://@openmdx*($..)"
        />
        <property
        	name="org.openmdx.virtual.PlugIn.finalPattern[1]" 
        	value="xri://@openmdx*($..)/provider/($..)"
        />
        <prop20018969erty
        	name="org.openmdx.virtual.PlugIn.finalClass[0]"
        	value="org:openmdx:base:Authority"
        />
        <property
        	name="org.openmdx.virtual.PlugIn.finalClass[1]"
			value="org:openmdx:base:Provider"
		/>

      The VirtualObjects_2_0 instance is retrieved through

		VirtualObjects_2_0 virtualObjects = SharedObjects.getPlugInObject(
			persistenceManager, 
			VirtualObjects_2_0.class
		);
				
      CR20018905
      UUIDs
      
      The expression UUIDs.newUUID() is now preferred over 
      UUIDs.getGenerator().next() as the former one reuses thread local UUID
      generators while the latter one creates a new generator on each 
      invocation.
      
      CR20018820 	
      View Manager Plug-Ins 
      
      The view manager interceptors are now pluggable, e.g.
      
        <property 
        	name="org.openmdx.jdo.ViewManager.plugIn[0]" 
        	value="org.openmdx.base.PlugIn"
        />
        <property 
        	name="org.openmdx.jdo.ViewManager.plugIn[1]" 
        	value="org.openmdx.state2.PlugIn"
        />
        <property 
        	name="org.openmdx.state2.PlugIn.class" 
        	value="org.openmdx.state2.aop1.PlugIn_1"
        />
        <property 
        	name="org.openmdx.base.PlugIn.class" 
        	value="org.openmdx.base.aop1.PlugIn_1"
        />
      
      A singleton list with org.openmdx.base.aop1.StandardPlugIn_1 is used if 
      no plug-in is configured. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20019064
      ResultRecord-Externalization
      
      org::openmdx::kernel::ResultRecord are implemented by the class 
      org.openmdx.base.rest.spi.ResultRecord and externalized with as
      application/vnd.openmdx.wbxml document.
      
      CR20018977
      Association Impl 
      
       The current approach to dispatch to an association implementation was 
       inconsistent:
       * overriding the getReference accessor was ignored by getObjectById calls  
            
      CR20018980
      Deprecated SparseList. Use List or SparseArray instead.
            
      CR20018924
      Database: optimize find(). Optimize find() in case multi-valued attributes 
      have to be returned. Multi-valued attributes are now retrieved from the 
      secondary table with one SELECT for all objects instead of one SELECT for
      each object.  
      
      CR20018820 	
      audit2 
      
      DataManager_2Bean no longer invokes setRollbackOnly() when execute()
      terminates with a ResourceException.
      
      It's up to the client whether the unit of work should be committed or
      rolled back.
      
2.1.  FIXED BUGS
      
      CR20018969
      SparseArray
      
      Store and retrieval was not erroneous.
      
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none

      
==============================================================================
Version 2.5.3                                                       2009-10-23
==============================================================================

1.    NEW FEATURES
      
      CR20018820
      audit2
      
      The method 
      org.openmdx.base.persistence.cci.UserObjects.setTaskIdentifier
      is used to provide the task identifier for the org::openmdx::audit2
      sub-system.
      
        public static void setTaskIdentifier(
          PersistenceManager persistenceManager,
          Object taskIdentifier
        );
        
      If set the task identifier's toString() method is evaluated at the
      beginning of each unit of work.
      
      An application may therefore
      * either replace unmodifiable task identifiers (e.g. java.langString
        instances) to change the task id
      * or use a stateful task identifier providing the current task id each 
        time its toString() method is invoked  
       
      CR20018822 	
      XmlImporter / XmlExporter f�r openMDX 2
      
      Re-factored and aspect aware
      (to support org::openmdx::state2 for example).
      
      CR20018750
      getManagedObjects(). Implement DataObjectManager_1.getManagedObjects(...) 
      methods.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20018873
      OpenMDXSchemes
      
      This class has been removed.
      Its LEGACY_PREFIX field has been replaced by URI_1.OPENMDX_PREFIX.
      
      CR20018872
      Connection & Connection Factory
      
      The package org.openmdx.kernel.security.resource has been moved from
      openMDX/Core to openMDX/Security
      
      CR20018847
      JDO deleted state
      
      * JDO 2.2 says "Read access to primary key fields is permitted. Any 
        other access to persistent fields is not supported and might throw a 
        JDOUserException."
      * openMDX 2 shall not throw a JDOUserException when accessing other 
        fields in an optimistic unit of work.
      
      CR20018821
      XmlImporter / XmlExporter for openMDX 2
      
      org:w3c:date and org:w3c:dateTime values are no longer imported as 
      java.lang.String but as javax.xml.datatype.XMLGregorianCalendar and 
      java.util.Date respectively.
      
      org.openmdx.base.text.format.DateFormat's getInstance() methods are 
      replaced by org.openmdx.base.text.format.DateTimeFormat's<ul>
      * BASIC_UTC_FORMAT field
      * EXTENDED_UTC_FORMAT field
      * getInstance() method (for other formats)    
      
      CR20018826
      isEmpty
     
      isEmpty() should avoid delegating to size() if it can delegate to
      isEmpty().     
      
2.1.  FIXED BUGS
      
      CR20018875
      getObjectById returns null
      
      The PersistenceManager's getObjectById() method must not return null.
      
      It may
      * either return an instance
      * or throw an exception 
      
      CR20018846
      JDO life cycle
      
      deleted implies dirty 
      
      CR20018838 	
      A Container's Cardinality
      
      It depends on the container's state whether the predicate isEmpty() is 
      evaluated correctly. 
      
2.2.  DEPRECATED FEATURES

      CR20018821
      XmlImporter / XmlExporter for openMDX 2
      
      "resource:..." and "xri:+resource/..." URLs are deprecated in favour 
      of the XRI 2 URLs "xri://+resource/...".
      
      org.openmdx.base.text.format.DateFormat deprecated in favour of
      org.openmdx.base.text.format.DateTimeFormat
      
2.3.  REMOVED FEATURES

      CR20018873
      OpenMDXSchemes
      
      This class has been removed.
      
      CR20018870
      Dataprovider Transport
      
      Unreferenced classes removed:
      * Dataprovider_1ShareableConnectionHolder
      * Dataprovider_1ConnectionFactory
      * Dataprovider_1Connection
      
      CR20018869
      Abstract Session Bean
      
      Unreferenced package org.openmdx.application.ejb.spi removed.
      
      CR20018868
      Application Control
      
      Unreferenced package org.openmdx.application.control removed.
      
      CR20018867 
      Application Context
      
      Unreferenced class ApplicationContext_1_0 removed.
      
      CR20018866
      Dependencies
      
      Unreferenced Dependencies classes have been discarded.
       
      CR20018865
      State Transitions
      
      org.openmdx.base.concurrent.StateTransitions in openMDX/Core has been
      replaced by org.openmdx.security.auth.context.pool.StateTransitions in
      openMDX/Security.
       
      CR20018821
      XmlImporter / XmlExporter for openMDX 2

      * The package org.openmdx.application.dataprovider.exporter has been 
        removed.
            
      *  .../xmi/... schema paths are no longer mapped to the actual 
         .../xmi1/... schema paths.
      
      
==============================================================================
Version 2.5.2                                                       2009-09-14
==============================================================================

1.    NEW FEATURES

      CR20018768 
      refreshAll
      
      The PersistenceManager's refreshAll() methods have been implemented.  

      CR20018750
      getManagedObjects
      
      The PersistenceManager's getManagedObjects() methods have been 
      implemented.  
      
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20018800 	
      Deployment_1
      
      Deployment_1's default principal chain is now the user name as defined
      by the system property "user.name". 

      CR20018768 
      refresh
      
      refreshing an object invalidates its container's stored cache.
      
      The PersistenceManager's refreshAll methods have been implemented  
      
      CR20018789
      Support unmarshalling of micro second precision timestamps
      
      * Marshal micro seconds and nano seconds already present in an 
        XMLGregorianCalendar into an SQL Timestamp
      * Do not modify the unmarshal code at the moment.       

      CR20018742
      Aspect handling
      
      The getAspect() and getAspects() methods have been replaced by named
      queries.
      
      CR20018765
      Slice Cache
      
      Synchronize slice cache write operations only.
      
2.1.  FIXED BUGS
      
      CR20018800 	
      PersistenceManagerFactory
      
      An accessors persistence manager factory shall be set correctly.
      
      CR20018745
      Persistent-New Objects
      
      Persistent-new objects must be dirty from the beginning, even if no 
      attribute has been set yet 

      CR20018766
      object_class Filter 
      
      An object_class filter must not be treated the same way as an 
      object_instanceof filter. 
      
2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      
      CR20018767
      Lenient Access Modifier
      
      Get rid of the lenient access modifier support. 
      
      
==============================================================================
Version 2.5.1                                                       2009-07-22
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR10008700
      Database: improve case-insensitive search. UPPER(column) LIKE UPPER(?) 
      does not work for all databases. 
      
2.1.  FIXED BUGS
      
      CR20018720
      Datastore Commit Failure
      
      Correct JDO Exception:
      A datastore commit failure should raise a JDOFatalDataStoreEception or a 
      subclass thereof (e.g. JDOOptimisticVerificationException). 

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.5.0                                                       2009-06-16
==============================================================================

1.    NEW FEATURES

      CR20018712
      containsWildcard
      
      The method conainsWildcard() tests, whether the path contains a wildcard.
      It returns true if the path contains any of the following XRI cross references
      * $.
      * $..
      * $... 
      
      CR20018662
      SessionBean configuration. In addition to the deployment 
      descriptor env entries, session beans can be configured with the 
      META-INF/<namespace-id>.properties file. The properties override the
      properties defined as env entries.  

      CR20018666 
      Callbacks must be invoked for all dirty objects 
      
      Callbacks must be invoked for all dirty objects whether they are created 
      or fetched by the accessor or a plug-in.
      
      CR20018579
      LateBindingDataSource
      
      CR20018656
      BasicException
      
      Configure
      * exception mappers with openmdxExceptionMapper.properties files in the
        META-INF directory
      * exception domains with resource bundles in the 
        org.openmdx.exception.domain directory 
      
      CR20018649
      StandardFileHandler extends FileHandler
      
      The StandardFileHandler is able to stream throwables directly to the 
      underlying stream when using an AbstractFormatter sub-class telling that
      throwables remain to be processed. 
      
      The corresponding Java Logging compliant classes are:
      * org.openmdx.kernel.log.StandardFileHandler
      * org.openmdx.kernel.log.BasicFormatter
       
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20018660
      Transport API Unification. Migration to JCA-APIs using REST-based interactions. 

      CR20018701
      refMofId
      
      Current behaviour:
      * The refMofId is derived from the identity in case of ExtentCapable 
         classes unless the identity attribute is not yet loaded or null.
      * The refMofId is the objects XRI in all other cases.
      
      In future
      * shall the refMofId be the objects XRI in all cases
      * shall the identity attribute be used explicitely if its value is required.
      
      CR20018696 
      XRI support
      
      Get rid of openxri classes.
      Implement the required XRI 2 support natively.

      CR20018696 
      XRI 2 Marshaller
      
      Do not replace '=' signs by ':'. 
      
      Sub-segments with '=' signs will be transformed into case exact string 
      cross references. 
      
      CR20018674
      UID
      
      Use uppercase only
      
      A UID consists now of 25 digits based on base 36 encoding, while legacy
      UIDs consist of 22 digits based on base 64 encoding.
      
      The new encoding is as following:
      * Digit 0 contains sum of
            6 times (bits 1 to 63 divided by 36^12 plus 3 if bit 0 is set)
            bits 65 to 127 divided by 36^12 plus 3 if bit 64 is set
      * Digits 1 to 12 contain bits 1 to 63 modulo 36^12
      * Digits 13 to 24 contain bits 65 to 127 modulo 36^12

      Legacy UIDs may still be decoded but no longer encoded.
                  
      CR20018665
      Struct Marshalling
      
      Structures should have their proper persistence manager 
       
      CR20018660
      Authorization
      
      Provide the principal chain (a List<String>) instead of the principal set
      (a Set<? extends Principal>) as user object.
      
      CR20018579
      DbConnectionManager_1_0 & LateBindingDataSource
      
      DbConnectionManager_1_0 and its implementations replaced by LateBindingDataSource 
      
      CR20018657
      JPA3 warnings
      
      Correct the usage of
      * unchecked
      * cast
      * unused  
      
      CR20018653
      SLF4J 1.5.6
      
      * Support both singleton lookup mechanisms
      * Add "1.5.6" to its API compliance list  
      
2.1.  FIXED BUGS
      
      SF329844
      So I did a post with the following settings:  
      POST http://localhost:8080/opencrx-rest-CRX/org.opencrx.kernel.account1/provider/CRX/segment/Standard/account/7wmWgCjdEd6ri3Nu6Dapag/member 
      <?xml version="1.0"?> 
      <org.opencrx.kernel.account1.Member> 
        <name>MyName</name> 
        <account>xri://@openmdx*org.opencrx.kernel.account1/provider/CRX/segment/Standard/account/NI7XwEIBEd29BeMf4vj8cA</account> 
      </org.opencrx.kernel.account1.Member> 
      NI7XwEIBEd29BeMf4vj8cA should become a member of 7wmWgCjdEd6ri3Nu6Dapag. 
      Anyway, I get a server error, without using the account argument all is fine.
      
      CR20018668
      Large Object Update
      
      Large object updates are no longer ignored.  

2.2.  DEPRECATED FEATURES
      
      CR20018651
      Container.remove()
      
      This method should be deprecated for the following reasons:
      * container.remove(qualifier) does not what one expcects: It just returns 
        false because the container contains persistence capable objects and 
        not qualifiers
      * container.remove(object) should only be used to remove a transient 
        object from its container
       
      CR20018652
      RefObject_1_0.refAddValue(containerId, qualifier, object) 
      
      This method belongs no longer to the supported API

2.3.  REMOVED FEATURES
      
      CR20018718 	
      Replicating refMethods
      
      Get rid of refMethods replicating PersistenceManager functionality.
       
      CR20018712
      getUriReference
      
      The Path's getUriReference() method has been removed
      
      CR20018660
      Rest Connector
      
      The deprecated IndexedRecordFormatter and its format method have been removed.
      
      CR20018579
      DbConnectionManager_1_0 
      
      Get rid of DbConnectionManager_1_0 and its implementations.
      
      We can get rid of these implementations as xri://@openmdx*org.openmdx.deployment1 
      based clients are no longer supported. 
      
      CR20018656
      BasicException
      
      Got rid of ShortEnumeration and IntegerEnumeration 
      
      CR20018654
      SLF4J
      
      Dependency on SLF4J removed from openMDX.
      openMDX uses the plain Java Logging API.
               
==============================================================================
Version 2.4.1                                                       2009-04-02
==============================================================================

1.    NEW FEATURES
      
      CR20018634
      ResourceURLConnection's FileNotFound exception
      
      Include class loader information in case of URL class loaders. 
       
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
      CR20018633
      printStackTrace
      
      Only a BasicException's or BasicException.Wrapper's printStackTrace() 
      method did include the exception stack elements' attributes.

      A standard Throwable's printStackTrace() method should include this 
      information as well.  
      
2.1.  FIXED BUGS

      CR20018642
      Correct Include/Exclude Collections
      
      A persistent container's include/exclude collections are erroneous in a 
      multithreaded environment. 
      
      CR20018632
      XMIExternalizer
      
      The XMIExternalizer swallows fatal exception causes.
      
      The corresponding exception stack should be sent to both
      * System.err
      * the log
      
      CR20018628
      DataproviderObject class
      
      Object class and instance-of specifications are ignored unless the object 
      is populated with the attributes of another dataprovider object. 
       
      CR20018627
      BinaryLargeObject's OutputStream accessor
      
      The content can not be retrieved more than once 
       
      CR20018626	
      Wildcard Propagation
      
      LIKE "<prefix>." must be handled handled correctly.
      
      CR20018625
      ProviderCollection.clear()
      
      The ProviderCollection.clear() method is likely to fail with an element 
      not found exception unless its exact size is known.
      
      CR20018624
      PersistenceManager Method Delegation
      
      Some PersistenceManager methods are not delegated from the Object View to its
      Data Object instance.

      CR20018622	
      Rollback of persistent-new instances 
      
      Persistent new instances must become transient on rollback.  

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.4.0                                                       2009-02-28
==============================================================================

1.    NEW FEATURES
      
      CR20018509
      Optimistic Locking
      
      The MODEL/optimisticLocking configuration entry has now three possible
      values:
      * false
        disables optimistic locking
      * whenModified
        enables optimistic locking for modified objects
      * true
        enables optimistic locking even for unmodified objects
      
      CR20018534
      Replace JPOX by OpenJPA. The model mapper now generates JPA compliant
      persistence classes and a default persistence mapping (orm.xml). The
      JDO2 mapping is not supported anymore. The ant build-library provides
      the following targets:
      * enhance: enhances the classes listed in orm.xml
      * create-schema: orm.xml --> openjpa-schema.xml
      * create-sql: openjpa-schema --> sql build and upgrade script
      CR20018528
      library-directory 
                
      The lightweight container supports the library-directory entry in the
      application XML
      * no library-directory entry leads to the default value "lib"
      * an empty library-directory entry disables the library-directory 
        feature
      * a non-empty library-directory entry such as "APP-INF/lib" for example
        includes all files which are located in the given directory and end 
        with ".jar" in the application class path 
       
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
			CR10008387
			Migrate models to RSM 7.5.

      CR20018576
      JMI 1 v/s Standard Mapping
      
      The standard mapping differs in the following aspects from the 
      strict JMI 1 mapping:
      * Each upper case letter starts a new word
      * Underscores do not start a new word
      * Dollar signs behave the same way as digits
      
      CR20018534
      Replace JPOX by OpenJPA. The model mapper now generates JPA compliant
      persistence classes and a default persistence mapping (orm.xml). The
      JDO2 mapping is not supported anymore. The ant build-library provides
      the following targets:
      * enhance: enhances the classes listed in orm.xml
      * create-schema: orm.xml --> openjpa-schema.xml
      * create-sql: openjpa-schema --> sql build and upgrade script

      CR20018521
      NoClassDefFoundError in BasicException
      
      BasicException should not throw a NoClassDefFoundError if the J2EE 
      exception classes it refers to are not bundled with a client for example. 
      
2.1.  FIXED BUGS

      CR20018536
      Filter values for persistent-new objects
      
      Filter values (Path) are now able to match their persistent-new object's
      representation (Object_1_0) 

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none
      
      
==============================================================================
Version 2.3.0                                                       2008-12-03
==============================================================================

1.    NEW FEATURES

      CR20018518
      Database: hint DBOBJECT. Hint DBOBJECT allows to qualify the dbobject 
      (table, view) used for queries. At least it should be possible to add a 
      suffix.
      
      CR20017901
      Cross Reference Support
      
      The flag PERSISTENCE/normalizeObjectIds enables cross-references.

      CR20017901
      Iterable path
      
      org.openmdx.compatibility.base.naming.Path instances are now Iterable.
      The iterator returns the path components' string representation.

      The method objGetResourceIdentifier() uses the XRI 2 format, i.e.
      xri://@openmdx*... as opposed to its former spice://... format. 
            
      CR20018102
      A PersistenceManager's Principals
      
      The user object with key 
      org.openmdx.base.persistence.cci.UserObjects.PRINCIPALS
      ("org.openmdx.security.principals") is of type
      Set<? extends Principals>.      
      
      CR20017901
      org::openmdx::state2
      
      The states' core class is a subclass of 
      org::openmdx::state2::StateCapable and has the following flags:
      * transactionTimeUnique
      * validTimeUnique
      
      An object is two dimensional if and only if both flags are off.
      
      CR20018001
      objGetIterable
      
      objGetIterable does not care whether a feature is multi-valued or single-valued. 
        
      CR20013920
      org::openmdx::state2 
      
      States are now supported as aspects.
      The are handled by an Object_1_0-Plug-In (as opposed to the former 
      Layer_1_0-Plug-In).
      
      CR20016601
      InteractionSepc support
      
      The ObjectFactory_1_x interfaces must be InteractionSepc aware.
      
      CR20017600
      REST servlet. The servlet allows REST based access to openMDX providers.
      
			Object creation                                                                                                     
			  Method: POST
			  Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/account			
			  Body:			
					<?xml version="1.0"?>
					<org.openmdx.workshop1.Contact>
						<lastName>REST</lastName>
						<firstName>Test #1</firstName>
					</org.openmdx.workshop1.Contact>
			
			Object Retrievals                                                                                                                           
			  Method: GET
			  Urls:
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/extent?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=identity().like("xri://@openmdx*org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/%25");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=modifiedAt().between(:datetime:20080101T000000.000Z,:datetime:20081001T000000.000Z);orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=modifiedAt().greaterThan(:datetime:20080101T000000.000Z);orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsModifiedAt().greaterThan(:date:2008-01-01);orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().like("D%25, Joe");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().elementOf("Joe", "Guest");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().equalTo("Guest");orderByName().ascending()
					http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember?position=0&size=50&queryType=org:openmdx:workshop1:TeamMember&query=thereExistsName().equalTo("Guest")
			
			Object modification                                                                                                                        
				Method: PUT			
				Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/2YlAOJYlEd2Y4zv65ePspg
				Body:			
					<?xml version="1.0"?>
					<org.openmdx.workshop1.Contact>
						<name>Joe</name>
					</org.openmdx.workshop1.Contact>
			
			Operation Invocation                                                                                                             
				Method: POST			
				Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/task/T1/assignTeamMember			
				Body:			
					<?xml version="1.0"?>
					<org.openmdx.workshop1.AssignTeamMemberParams>
						<memberRole>1</memberRole	>
						<teamMember>xri://@openmdx*org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/2YlAOJYlEd2Y4zv65ePspg</teamMember>
					</org.openmdx.workshop1.AssignTeamMemberParams>
			
			Object Deletion         
				Method: DELETE		
				Url: http://localhost:8080/openmdx-rest-CRX/org.openmdx.workshop1/provider/CRX/segment/Standard/teamMember/2YlAOJYlEd2Y4zv65ePspg
                 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
     
      CR20018512
      combinedInterfaces
      
      The argument of the method combinedInterfaces in the class
      org.openmdx.compatibility.kernel.application.cci.Classes is now of type
      Class<?> (as opposed to its former Object type).
      
      I.e. you have to replace invocations such as 
        Classes.combinedInterfaces(object, prepend0, prepend1)
      by 
        Classes.combinedInterfaces(object.getClass(), prepend0, prepend1)
      
      
      CR20013920
      state1 segment

      The class org::opemndx::compatibility::state1::Segment is no longer
      abstract nor has it the stereotype «root» anymore as it is now a 
      subclass of org::openmdx::base::Segment.

     
      CR20013920
      extent's qualifier

      The qualifier for org::openmdx::base::Segment::extent is now of type org::oasis-open::xri 
      (as opposed to its former org::w3c::anyURI type).

      CR20017901
      Resource Identifier

      The standard resource identifier format is the XRI 2 format.
      * It is used by Object_1_0's method objGetResourceIdentifier(), i.e.
        xri://@openmdx*... as opposed to its former spice://... format.
      * It is used by the ExtentCapable's feature identity as well.
        The identity is now non-null for new objects.
      * It can be retrieved by the Path's toResourceIdentifier() method.           
            
      CR20017901  
      Stop watch
      
      StopWatch_1_0 and StopWatch_1 moved into the package
      org.openmdx.compatibility.base.dataprovider.exporter as they are not 
      used anywhere else.
      
      
      CR20018001
      ObjectFilter_1 
      
      ObjectFilter_1 uses objGetIterable (as opposed to its former '?' + attributeName
      request.       
        
      CR20013920 	
      org::openmdx::state2
      
      org::openmdx::compatibiliy::state1::DateState is now a sub-class of
      org::openmdx::state2::DateState
      
      CR20017502
      System Attribute Handling
      
      Moved from Plug-in to Object_1_0.
      
      The handling for the following classes and attributes is now a core feature:
      * org::openmdx::base::Creatable
          o createdAt
          o createdBy 
      * org::openmdx::base::Modifiable
          o modifiedAt
          o modifiedBy 
      * org::openmdx::base::Removable
          o removedAt
          o removedBy 
             
2.1.  FIXED BUGS

      CR20017903
      "Normalized" Durations lead to Oracle SQL Failure 
      
      Durations are normalized to years/months and hours/minutes/seconds (as 
      opposed to the former months and seconds normalization).
      
      CR20017001
      Improved exception handling

      The exception stack was printed bottom up instead of top down.
      
      CR10008226
      PIGGY_BACK filter property values
      
      Multivalued values are not passed as Object[] but as Object[][].
      
      CR20016300
      Escape wildcard characters in RIDs 
      
      Escape SQL wildcard characters for LIKE predicates with RIDs.
      Indices will be useful even if the RID contains '_', '%' or '\\'.

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES

      CR20018411
      Remove datastore1 model and corresponding implementations.
      
      CR20018410
      Remove deployment1 model and corresponding implementations.
      
      CR20018409
      Remove filter1 model.
      
      CR20018408
      Remove runtime1 model and corresponding implementations.
      
      CR20018200
      Deprecate openMDX 1 JMI mapping.
      
      CR20017901  
      org::openmdx::compatibility:role1
      
      The role1 plug-in and its associated tree watch classes have
      been removed.

      CR20018100
      Unit Of Work Local User Object 
      
      * Remove RefRootPackage_1's deprecated constructors
      * Remove CCI1_PACKAGE_SUFFIX references and all methods and constructors
        relaying on it
      * Remove deprecated package org.openmdx.base.object.jdo
      * Remove "throw not found if null" support from RefRootPackage_1  
      * Remove refUseOpenMdx1ImplLookup() support
      
      CR20017901
      org::openmdx::compatibility::state1
      
      The class following classes have been removed:
      * org::openmdx::compatibility::state1::ValidState
      * org::openmdx::compatibility::state1::StateCapable
      * org::openmdx::compatibility::state1::StateIncapable
      
      CR20013920
      org::openmdx::compatibility::state1 
 
      state1's Object_1_0 views and the Layer_1_0-Plug-Ins have been removed.
      
      CR20016210
      jmi1 replaces cci 
      
      Discontinue legacy API generation
      
      CR20013920 	
      org::openmdx::compatibility::state1
      
      The following classes have been removed:
      * org::openmdx::compatibiliy::state1::DateStateExcludingEnd
      * org::openmdx::compatibiliy::state1::DateTimeState
            
      CR20017503
      USE_OBJECT_IDENTITY_HINT 
      
      Discontinue USE_OBJECT_IDENTITY_HINT support,
      i.e. reference names must no longer end with the suffix ";use=identity".
      
      CR20017501
      Placeholders
      
      Discontinue support for placeholders as path element,
      i.e. each object's identity is fixed as soon as it is made persistent. 
      It can't be changed by a server-side plug-in any more.       
      
      
==============================================================================
Version 2.2.1                                                      2008-10-14
==============================================================================

1.    NEW FEATURES

      CR20017401
      LoginTimeout 
      
      The default login timeout is overridden by a non-0 LoginTimeout 
      config-property entry:

         <config-property>
	       <config-property-name>LoginTimeout</config-property-name>
	       <config-property-type>java.lang.Long</config-property-type>
	       <config-property-value>2000</config-property-value>
         </config-property>
            
      CR220017300
      Lightweight Container DataSource
      
      Keep Alive Support:
      
      * Add pool configuration to openmdx-connector, e.g.
       
         <!DOCTYPE 
           openmdx-connector 
           PUBLIC "-//openMDX//DTD Connector Extension 1.1//EN" 
           "http://www.openmdx.org/dtd/openmdx-connector_1_1.dtd"
         >
         <openmdx-connector>
	       <resourceadapter>
		     <connectionfactory-jndi-name>jdbc/dataproviders</connectionfactory-jndi-name>
		     <pool>
		       <maximum-idle>-1</maximum-idle>
		       <time-between-eviction-runs>100</time-between-eviction-runs>
			   <test-while-idle>true</test-while-idle>
		     </pool>
	       </resourceadapter>
         </openmdx-connector>
        
      * Add validation statement to connector, e.g.
      
          <config-property>
            <config-property-name>ValidationStatement</config-property-name>
            <config-property-type>java.lang.String</config-property-type>
            <config-property-value>SELECT GETDATE()</config-property-value>
          </config-property>

      CR20016204 	
      newQuery
      
      PersistenceManager.newQuery(Class) is now supported and returns a standard
      cci2 Query object.

      * Usage:
      
        Query query = persistenceManager.newQuery(InvoicePosition.class);
        InvoicePositionQuery invoicePositionQuery = (InvoicePositionQuery) query;
        // define the predicate with the help of invoicePositionQuery's methods
        query.setCandidates(container);                
        List<InvoicePosition> invoicePositions = (List<InvoicePosition>) query.execute();
      
      CR20016208
      DatatypeFactories
      
      Provide two static accessors for
      * an xmlDatatypeFactory()
      * an immutableDatatypeFactory() 
      
      CR20016208
      Immutable Datatype Factory 
      
      Support the following datatypes
      * Immutable Date instances
      * Immutable DateTime instances
      * Normalized Duration instances
      
      Note:
      * an ImmutableDate instance is a subclass of XMLGregorianCalendar such 
        as XMLGregorianCalendarImpl
          o a clone of an ImmutableDate instance is an XMLGregorianCalendarImpl
          o an XMLGregorianCalendarImpl instance may be passed as argument to 
            an ImmutableDate instance
          o an ImmutableDate instance must not be passed as argument to an 
            XMLGregorianCalendarImpl instance
          o a clone of an ImmutableDate instance may be passed as argument to 
          an XMLGregorianCalendarImpl instance as it is itself an 
          XMLGregorianCalendarImpl instance. 
      * an ImmutableDateTime instance is a subclass of java.util.Date
          o a clone of an ImmutableDateTime instance is a java.util.Date 
            instance.
          o an ImmutableDateTime instance may be passed as an argument to a 
            java.util.Date instance
          o a java.util.Date instance may be passed as an argument to am 
            ImmutableDateTime instance 
      * All fields of a normalized Duration except the following ones are null
          o sign
          o months
          o seconds 
            
      CR20015500
      ServiceException & RuntimeServiceException Constructors      
      BasicException.Parameter... arguments may be put at the end of the 
      argument list.
        
      CR20013920
      base & state2
      
      The following model classes have been added
      * org::openmdx::base::Creatable 
      * org::openmdx::base::Modifiable
      * org::openmdx::base::Removable
      * org::openmdx::base::Aspect 
      * org::openmdx::state2::BasicState
      * org::openmdx::state2::DateState
      * org::openmdx::state2::DateTimeState
      
      CR20013920
      Deployment_1
      
      The class org.openmdx.compatibility.base.application.cci.Deployment_1
      simplifies JUnit set-up.
           
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20017001
      Improved exception handling

      * BasicException.Wrapper implementations use their Throwable's cause
        as BasicException holder, as opposed to their former exceptionStack member.
      * BasicExcpetions use a StackTraceElements[] member as opposed to their
        former String[], className, methodName and lineNr members.
      
      That's why their serialVersionUID has changed.
      
      CR20016209
      Immutable Datatypes
      
      The Object_1_0 API should use immutable datatype instances instead of 
      their string representation to avoid repeated parsing. 
      
      CR20016103
      PersistenceManagerFactory
      
      The PersistenceManagerFactory shall keep week references only to its 
      PersistenceManagers
       
      CR20013920
      ObjectFactory 1 API
      
      The following method has been added to the object factory 1.1 API:
      * Object_1_0 createAspect(
          String objectClass,
          Object_1_0 aspectCapable
        ) throws ServiceException;
      
      CR20013920
      JMI Context container
      
      contextCapable.refGetValue(SystemAttributes.CONTEXT_CAPABLE_CONTEXT)
      
2.1.  FIXED BUGS

      CR20016600
      evictAll
      
      Separate evictAll() from clear() 
      
      CR20016204 	
      Query Handler
      
      Some incorrect predicate build rules have been corrected.
      
      CR20016202
      XRI URL Handler
      
      Parse correctly according to the chapter "Relative XRI References" in
      
        OASIS
        Extensible Resource Identifier (XRI) Syntax V2.0
        Committee Specification, 14 November 2005
        (http://docs.oasis-open.org/xri/V2.0)
            
      CR20015902
      refRemove
      
      NullPointerException in case of non-existent entry.
      
      refRemove should silently return instead of throwing a NullPointerException.

2.2.  DEPRECATED FEATURES

      CR20017001
      Improved exception handling

      * BasicException.Wrapper.getExceptionStack() has been deprecated in favour
        of BasicException.Wrapper.getCause()

      CR20013920
      ObjectFactory 1 API
      
      The following Object Factory 1 methods have been deprecated and
      throw a NOT_SUPPORTED ServiceException upon invocation:
      * createObject() for views
      * createObject() for roles

2.3.  REMOVED FEATURES
      
      CR20013920
      view1 & state1
      
      The following compatibility mode model packages have been removed:
      * org::openmdx::compatibility::view1
      * org::openmdx::compatibility::role1 
      
      CR20013920
      Object Cloning
      
      * The class org.openmdx.base.accessor.jmi.spi.CloneObject_1 has been 
        removed.
      * The method refCloneObject has been removed from the RefPackage 1.2 API.
        
      CR20013920
      JMI
      
      openMDX 1's JMI mapping (in the .cci sub-package) has been removed in 
      favour of openMDX 2's JMI mapping (in the .jmi1 sub-package).
       
      CR20016208
      Immutable Datatype Factory 

      The deprecated class org.openmdx.base.time.Duration has been removed.
      
      CR20016208
      DateFormat
      
      The deprecated public constructor has been made private in favour of
      the corresponding static factory method.

      CR20017001
      Improved exception handling
      
      The following deprecated classes have been removed:
      * org.openmdx.compatibility.base.exception.Assertions
      * org.openmdx.compatibility.base.exception.CommonExceptionCodes
      * org.openmdx.compatibility.base.exception.CommonExceptions
      * org.openmdx.compatibility.base.dataprovider.cci.DataproviderExceptions
      
      The following class has been removed:
      * org.openmdx.compatibility.base.exception.StackedException

      The following deprecated method has been removed:
      * The method getStackedException() in the classes implementing
        org.openmdx.kernel.exception.BasicException.Wrapper.
      
==============================================================================
Version 2.2.0                                                       2008-09-10
==============================================================================

1.    NEW FEATURES
      
      CR20015500
      ServiceException & RuntimeServiceException Constructors
      
      BasicException.Paramter... arguments may be put at the end of the 
      argument list.
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20015400
      Optimize Path. Do not use String[].
      
      CR20015500
      Minimize use of new Object[]. Minimize allocation of Object arrays.
      
      CR20015600
      ObjectFactory_1_0.getUnitOfWork
      
      Change the behaviour when the object factory is closed.
      
      Throw an ILLEGAL_STATE ServiceException instead of returning null when 
      the object factory is closed. 
       
      CR20014301
      Read committed only 
      
      * Goal
        The prefix '^' for Object_1_0's feature names excludes transient 
        values from being returned.
      * Implementation
        Only commited values are visible to by Transactional Object 1.0 
        implementations. 

      20013949
      Optimized EJB Remote Invocations 

      * Strings and Numbers are no longer serialized and deserialized during
        intra-VM remote method invocations.
      * The byte arrays used for serialization and deserialization are
        re-used on a thread basis. 
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      
      CR20015500
      Dataprovider_1TracingBean
      
      The Dataprovider_1TracingBean has been deprecated because the Dataprovider_1Bean
      logs requests and replies at the same level (the debug level, formerly known as
      detail level)      

2.3.  REMOVED FEATURES
      
      CR20015500
      MappedRecordFormatter
      
      The deprecated class MappedRecordFormatter has been removed.

      CR20015500
      InProcessDeployment
      
      The deprecated class 
      org.openmdx.kernel.application.client.InProcessDeployment has been removed.
      
      CR20015601
      PersistenceCapable_1_1
      
      Unused interface 
      org.openmdx.base.accessor.generic.spi.PersistenceCapable_1_1 removed.
      

==============================================================================
Version 2.1.0                                                       2008-07-10
==============================================================================

1.    NEW FEATURES

      CR20012701
      DBOSlicedWithIdAsKey: add option org.openmdx.persistence.jdbc.useLikeForOidMatching.
      Option allows to configure whether to use LIKE or <> operators to filter oid patterns.      
      
      CR20012403
      Add Plug-In Configuration To EntityManager
      
      The content of package
      * org.openmdx.kernel.persistence.spi 
      has been merged into
      * org.openmdx.base.persistence.spi 
            
      An entity manager factory configuration could look like this:
			<env-entry>
				<env-entry-name>EntityManager/plugIn[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>App1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:app1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/packageImpl[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.standard</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/packageImpl[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.base.aop2.standard</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/userObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>PriceCalculator</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/PriceCalculator/class</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.standard.PriceCalculator</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/App1/PriceCalculator/duration</env-entry-name>
				<env-entry-type>java.lang.Long</env-entry-type>
				<env-entry-value>1000</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/userObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>SharedConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/SharedConfiguration/class</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.aop2.standard.SharedConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>EntityManager/SharedConfiguration/example</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>an entity manager scoped configuration value</env-entry-value>
			</env-entry>

      A persistence manager factory configuration supports LegacyPlugIn only at the moment:
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:app1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/packageImpl[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.legacy</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/userObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>LegacyConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/LegacyConfiguration/class</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.app1.aop2.legacy.LegacyConfiguration</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PersistenceManager/LegacyPlugIn/LegacyConfiguration/example</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>a legacy plug-in scoped configuration value</env-entry-value>
			</env-entry>
            
      CR20011100
      Optimistic_1Bean

      Typical configuration entries for the gateway-Managing EJB are:

        <ejb-name>gateway1-Managing</ejb-name>
        <home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1Home</home>
        <remote>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Remote</remote>
        <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
        <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
        <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.transaction.Optimistic_1Bean</ejb-class>
        <session-type>Stateless</session-type>
        <transaction-type>Bean</transaction-type>
        [...]
        <env-entry>
          <env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Entity_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/TYPE</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.type.Standard_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/APPLICATION</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.spi.Layer_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/MODEL</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.spi.Layer_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.delegation.Entity_1</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>APPLICATION/disableRouter</env-entry-name>
          <env-entry-type>java.lang.Boolean</env-entry-type>
          <env-entry-value>true</env-entry-value>
        </env-entry>
        <env-entry>
          <env-entry-name>PERSISTENCE/retrievalSize</env-entry-name>
          <env-entry-type>java.lang.Integer</env-entry-type>
          <env-entry-value>1000</env-entry-value>
        </env-entry>

      CR20012101
      Database: add DBOSlicedWithParentAndIdAsKey. Add DBO which supports 
      composed primary key (parent, qualifier, type).
      
      CR20011800
      Database: support added for HSQLDB 1.8.
      
      CR20010702 
      CCI2 Container interface 
      
      public interface <associationName> {
        public interface <referenceName> extends org.w3c.cci2.Container<E> {
          void add(
             org.oasisopen.cci2.QualifierType <qualifierName>Type,
             <qualifierType> <qualifierName>,
             E <referenceName>
          );       
          E get(
            org.oasisopen.cci2.QualifierType <qualifierName>Type,
            <qualifierType> <qualifierName>
          );
          void remove(
             org.oasisopen.cci2.QualifierType <qualifierName>Type,
            <qualifierType> <qualifierName>
          );
        }
      }
      
      public interface Container<E> extends Collection<E> {
        List<E> getAll(
          AnyTypePredicate predicate
        );
        void removeAll(
          AnyTypePredicate predicate
        );
      }
      
      CR20010702 
      CCI2 Container interface 

      The interface is implemented by the proxy class only:

      /**
       * RefContainer
       */
      public interface RefContainer {
      
        /**
         * Adds an object to the container
         * 
         * @param arguments there is always an odd number of arguments:
         * ((REASSIGNABLE|PERSISTENT) identifier)+ value
         */
        void refAdd(
          Object... arguments 
        );
    
        /**
         * Retrieves an object from the container
         * 
         * @param arguments there is always an even number of arguments:
         * ((REASSIGNABLE|PERSISTENT) identifier)+
         * 
         * @return the object
         */
        Object refGet(
          Object... arguments 
        );
        
        /**
         * Removes an object from the container
         * 
         * @param arguments there is always an even number of arguments:
         * ((REASSIGNABLE|PERSISTENT) identifier)+
         */
        void refRemove(
          Object... arguments 
        );
        
        /**
         * Precedes a persistent sub-segment.
         */
        Object PERSISTENT = QualifierType.PERSISTENT;
    
        /**
         * Precedes re-assignable sub-segment.
         */
        Object REASSIGABLE = QualifierType.REASSIGNABLE;

        /**
         * Executes a query 
         * 
         * @param query
         * 
         * @return the result
         */
        List<?> refGetAll(
            Object query
        );
    
        /**
         * Executes a query 
         * 
         * @param query
         * 
         * @return the result
         */
        List<?> refRemoveAll(
           Object query
        );

      }

      
      CR20010001
      SLF4J logging
      
      openMDX 2's logging API is org.slf4j
      
      A configuration such as
      
        # Example Log Properties
        handlers= java.util.logging.FileHandler
        java.util.logging.FileHandler.level = INFO
        java.util.logging.FileHandler.pattern = %t/junit.%u.log
        java.util.logging.FileHandler.formatter = org.openmdx.kernel.log.ClassicFormatter
      
      leads to a JDK-log file similar to openMDX/1's log files with the 
      following main differences
      * The initial line declaring fields missing.
      * The date/time field is in extended ISO format, i.e. it includes the 
        characters 'T' and 'Z'.
      * SysLog's and AppLog's logsource field is not at openMDX/1's default 
        place but just before the message field.
      * The thread field contains the log thread id (a number starting with 10) 
        as opposed to the thread's id or name
      * The line number field is missing.

      CR20009700 
      TransactionSynchronizationRegistry 
      
      The LightweightContainer supports the TransactionSynchronizationRegistry
      as defined by JTA 1.1 and Java EE 5 respectively. 
        
      CR20007105
      CollectionMarshaller
      
      The org.openmdx.base.persistence.spi.Marshaller interface with its 
      unmarshal() method throwing now an IllegalArgumentException in case of
      failure replaces the org.openmdx.base.collection.CollectionMarshaller 
      interface with its unmarshal() method throwing a ServiceException in 
      case of failure. 

      CR20007105
      Gateway as PersistenceManagerFactory

      The PersistenceManagerConnectionFactory is formally declared as an EJB 
      reference in the web.xml:
      
        <ejb-local-ref id="ejb_gateway">
		  <ejb-ref-name>ejb/gateway</ejb-ref-name>
          <ejb-ref-type>Session</ejb-ref-type>
          <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
          <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_2Local</local>
          <ejb-link>test-gateway.jar#gateway-Mandatory</ejb-link>
        </ejb-local-ref>

      The PersistenceManagerFactory is formally declared as resource environment
      reference in the web.xml:
      
        <resource-env-ref id="jdo_gateway">
          <description>JDO Reference to the application's persistence manager factory</description>
          <resource-env-ref-name>persistence/gateway</resource-env-ref-name>
          <resource-env-ref-type>javax.jdo.PersistenceManagerFactory</resource-env-ref-type>
        </resource-env-ref>

      It is resolved in the Tomcat's context XML
      
        <Resource
          name="persistence/gateway"
          auth="Container"
          type="javax.jdo.PersistenceManagerFactory"
          factory="org.openmdx.base.persistence.tomcat.AccessorFactoryBuilder"
          AccessorFactoryClass="org.openmdx.base.accessor.jmi1.AccessorFactory_2"
        />

      The persistence manager factory is then acquired like that:
      
        public void init(
        ) throws ServletException {
          this.persistenceManagerFactory = JDOHelper.getPersistenceManagerFactory(
            "java:comp/env/persistence/gateway",
            (Context)null
          );
        }

      The changes to the gateway EJB are as following:
      
        <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_2Local</local>
        <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Gateway_1Bean</ejb-class>
     
        <env-entry>
          <env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
          <env-entry-type>java.lang.String</env-entry-type>
          <env-entry-value>org.openmdx.compatibility.runtime1.layer.interception.EntityProviderLayer_1</env-entry-value>
        </env-entry>

        <assembly-descriptor>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>process</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>createEntityManager</method-name>
            </method>
            <trans-attribute>Never</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>createEntityProvider</method-name>
            </method>
            <trans-attribute>Never</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>gateway-Mandatory</ejb-name>
              <method-name>commit</method-name>
            </method>
            <trans-attribute>RequiresNew</trans-attribute>
          </container-transaction>
        </assembly-descriptor>

      The changes to the provider EJBs are as following:

        <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_1Local</local>
     
        <assembly-descriptor>
          <container-transaction>
            <method>
              <ejb-name>clock-1</ejb-name>
              <method-name>process</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
          </container-transaction>
          <container-transaction>
            <method>
              <ejb-name>clock-1</ejb-name>
              <method-name>createEntityProvider</method-name>
            </method>
            <trans-attribute>Never</trans-attribute>
          </container-transaction>
        </assembly-descriptor>
     
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20012707
      ManagerFactory/DataProvider
            
      EJB Interface & Bean Configuration
      * DataProvider EJB Configuration
          <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
	      <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
	      <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
      * Entity Manager Factory EJB Configuration 
          <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.EntityManagerFactory_2LocalHome</local-home>
	      <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.EntityManagerFactory_2_0Local</local>
	      <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.EntityManagerFactory_2Bean</ejb-class>
      * Gateway EJB Configuration
          <ejb-name>Gateway</ejb-name>
	      <home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1Home</home>
	      <remote>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Remote</remote>
	      <local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
	      <local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
	      <ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.transaction.Gateway_1Bean</ejb-class>                
       
      CR20011701 
      The predicates' equals() methods
       
      Deprecate the predicates' equals() methods to avoid its erroneous use 
      in lieu of equalTo().
       
      CR20010001
      openMDX/Log

      openMDX 1' logging API (SysLog & Applog):
      * openMDX 1's logging API (org.openmdx.kernel.SysLog and 
        org.openmdx.application.log.AppLog) delegates to SLF4J now.
      * openMDX 1's logging implementation has been moved to 
        org.openmdx.compatibility.kernel.SysLog and 
        org.openmdx.compatibility.application.log.AppLog. 
        It is activated by adding slf4j-openmdx1.jar to the same classloader 
        as openmdx-kernel.jar. 

      CR20009904 
      PersistenceManager in JBoss
      
      The javax/jdo classes have been moved from openmdx-base.jar to
      openmdx-kernel.jar.      
      
2.1.  FIXED BUGS
      
      CR20010802
      StateQuery
      
      Un-escape attribute filter values when replacing IS_LIKE by IS_IN.       

      CR20011501
      Plugin_1's total reply leads to iteration 
      
      Recounting must be avoided.
      
      CR20010003
      DataproviderObject.values() returns null. DataproviderObject.values() 
      must return a non-null SparseList<Object>. In case of multiple threads, 
      the current implementation may return null. DataproviderObject must be 
      thread-safe because it is used in the Model_1 repository. 

2.2.  DEPRECATED FEATURES
      
      CR20008100
      RefObjectFactory_1
      
      The class org.openmdx.base.accessor.jmi.cci.RefObjectFactory_1 has been
      deprecated as it is used by test programs only.

2.3.  REMOVED FEATURES
      
      CR20008100
      Application_1_0 & ApplicationController_1_0
      
      The deprecated classes Application_1_0 and ApplicationController_1_0 in
      the package org.openmdx.compatibility.base.application.control
      have been removed.

      CR20008100
      InProcessDataproviderConnectionFactory
      
      The deprecated class InProcessDataproviderConnectionFactory
      in package org.openmdx.compatibility.base.application.cci has been
      removed.

      CR20008100
      InstanceCallbacks_1_0 & InstanceCallbackAdapter
      
      The deprecated interface InstanceCallbacks_1_0 in package
      org.openmdx.compatibility.base.accessor.object.cci and the deprecated
      class InstanceCallbackAdapter in package 
      org.openmdx.compatibility.base.accessor.object.spi have been removed.
            
            
==============================================================================
Version 2.0.0                                                       2008-02-22
==============================================================================

1.    NEW FEATURES

      CR20009101
      Structures
      
      cci2 structure interfaces are amended by an enumeration Member 
      representing its members.
      
      cci2 structures may be initialized by their member's name or position
      using the factory org.w3c.cci2.Datatypes: 
	  * PasswordChangeParams namedAssociation = Datatypes.create(
          PasswordChangeParams.class, 
          Datatypes.member(PasswordChangeParams.Member.password, new byte[]{'n','e','w'}),
          Datatypes.member(PasswordChangeParams.Member.oldPassword, new byte[]{'o','l','d'})
        );
      * PasswordChangeParams positionalAssociation = Datatypes.create(
          PasswordChangeParams.class, 
          new byte[]{'o','l','d'}, // oldPassword
          new byte[]{'n','e','w'} // password
        );
      
      CR20007105
      SparseArray
      
      * The sparse array interface org.w3c.cci2.SparseArray replaces
        org.openmdx.base.collection.SparseArray.
      * org.openmdx.base.collection.TreeSparseArray is a TreeMap base
        org.w3c.cci2.SparseArray implementation.   

      CR20007302
      Tomcat/Embedded Lightweight Container
      
      Allow the Lightweight Container to be launched in Tomcat. 
      This way openMDX based applications can be run in Tomcat without the
      need of an application server.

      CR20007901
      verifyObject
      
      The model API should provider another verifyObject() method in order
      to fulfil the following requirements:
      * accept DataproviderObject_1_0 instances 
        (as opposed to DataproviderObject instances) 
      * allow to disable derived attribute validation 

      CR20007525
      OperationAwarePlugin_1. Plugin which allows to dispatch Layer_1_0 operation 
      requests to ObjectFactory_1_0 object request. Plugin_1 extends 
      OperationAwarePlugin_1 and dispatches all Layer_1_0 requests.
      
      CR20006351
      Add jmi1/cci2 binding implementation. The bindings are implemented as 
      dynamic proxies which delegate to the existing accessor.jmi implementation.
      
      CR20007302
      Run LWC in Tomcat
      
      Introduce openmdx-launcher.jar including
      * org.apache.naming
      
      CR20007500
      Cache emptying
      
      RefPackage_1_3.clear() allows to the clear the cache.
      
      CR20007301
      openmdx-system.jar
      
      Contains the classes which must really be in the system class  
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20009001
      Runtime Exceptions
      
      Dataprovider_1RemoteConnection's ejbObject-Member should be released
      in case of any RemoteException, not only for retriable ones.            
      
      CR20007105
      List Classes
      
      The following list classes have been removed from
      org.openmdx.base.collection and added to
      org.openmdx.compatibility.base.collection: 
      * AbstractFilteringList
      * AbstractListIterator
      * ChainingList
      * FilteringList
      * MergingList

      CR20007105
      Sparse Array Classes
      
      The following org.openmdx.base.collection.SparseArray based
      classes have been removed from org.openmdx.base.collection 
      and added to org.openmdx.compatibility.base.collection: 
      * org.openmdx.base.collection.SparseArray
      * org.openmdx.base.collection.PopulationIterator
      * org.openmdx.base.collection.AbstractSparseArray
      * org.openmdx.base.collection.TreeSparseArray
      * org.openmdx.base.collection.MarshallingSparseArray
      
      CR20007302
      Replacement of deprecated deployment option
      
      The following classes use now Enterprise Application and Resource 
      Archives instead of depoloyment configuration files:
      * org.openmdx.compatibility.base.dataprovider.replication.ExportXml
      * org.openmdx.compatibility.base.dataprovider.replication.ImportXml
      * org.openmdx.compatibility.base.dataprovider.replication.Replicate 
      
      That's why two command line arguments "connector" and "application"
      have been added.
      
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES

      CR20007105
      List Classes
      
      The following list classes have been removed from
      org.openmdx.base.collection and added to
      org.openmdx.compatibility.base.collection 
      * AbstractFilteringList
      * AbstractListIterator
      * ChainingList
      * FilteringList
      * MergingList

      CR20007105
      Sparse Array Classes
      
      The following org.openmdx.base.collection.SparseArray based
      classes have been removed from org.openmdx.base.collection 
      and added to org.openmdx.compatibility.base.collection: 
      * org.openmdx.base.collection.SparseArray
      * org.openmdx.base.collection.PopulationIterator
      * org.openmdx.base.collection.AbstractSparseArray
      * org.openmdx.base.collection.TreeSparseArray
      * org.openmdx.base.collection.MarshallingSparseArray
      
      CR20007105
      CollectionMarshaller
      
      The org.openmdx.base.collection.CollectionMarshaller interface with its
      unmarshal() method throwing a ServiceException in case of failure has 
      been replaced by org.openmdx.base.object.spi.Marshaller with its 
      unmarshal() method throwing now an IllegalArgumentException
      in case of failure. 
      
      CR20007105
      Version
      
      The deprecated method org.openmdx.*.Version.getVersion() has been removed.

      CR20007105
      Configuration_2_0
      
      The (up to now only package locally used) interface 
      org.openmdx.base.object.spi.Configuration_2_0 has been removed.
       
      CR20007302
      Removal of deprecated classes
      
      Some of the following classes, which had been deprecated for years, have 
      been removed finally, some will be reomved in the neaer future:
      * org.openmdx.compatibility.base.naming.InitialContainerContextFactory
      * org.openmdx.compatibility.base.application.cci.Application
      * org.openmdx.compatibility.base.application.cci.ServiceLocator_1_0
      * org.openmdx.compatibility.base.application.container.SimpleServiceLocator
      * org.openmdx.compatibility.base.application.container.LightweightContainer_1
      * org.openmdx.compatibility.base.application.j2ee.ApplicationServerManager_1
      * org.openmdx.compatibility.base.application.j2ee.StandardServiceLocator
      * org.openmdx.compatibility.base.application.j2ee.WlsManager_1
      * org.openmdx.compatibility.base.application.spi.CommandOptions_1
      * org.openmdx.compatibility.base.application.spi.JndiServiceLocator_1
      * org.openmdx.compatibility.base.application.spi.SimpleServiceLocator_1
      * org.openmdx.compatibility.base.application.spi.StandardServiceLocator_1
      * org.openmdx.compatibility.base.dataprovider.kernel.ConnectorContainer_1
      * org.openmdx.compatibility.base.dataprovider.kernel.WlsDataproviderConnectionManager_1
      * org.openmdx.compatibility.base.dataprovider.transport.none.DataproviderConnection
      * org.openmdx.compatibility.base.dataprovider.transport.none.DataproviderConnectionFactory
      * org.openmdx.compatibility.base.dataprovider.transport.none.DataproviderContainer_1
      * org.openmdx.compatibility.base.dataprovider.transport.none.ManagedDataproviderConnectionFactory
      * org.openmdx.kernel.naming.LocalContext
      * org.openmdx.kernel.naming.LocalContext.Factory


==============================================================================
Version 1.19.16                                                     2008-02-04
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20008200 
      Unnecessary get requests made by state view
      
      State view has been optimized to avoid unecessary get request for non-
      stated objects.
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.15                                                     2008-01-17
==============================================================================

1.    NEW FEATURES

      CR20007901
      verifyObject
      
      The model API should provider another verifyObject() method in order
      to fulfil the following requirements:
      * accept DataproviderObject_1_0 instances 
        (as opposed to DataproviderObject instances) 
      * allow to disable derived attribute validation 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none      
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.14                                                     2008-01-07
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS

      CR20007519
      Performance Improvement
      
      Correct filtering.

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.13                                                     2007-12-21
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007519
      Performance Improvement
      
      Eliminate unnecessary state caching when iterationg over collections 
      of non-stated objects prefetched in a time-point view.

2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.12                                                     2007-12-20
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS

      CR20007528
      Erroneous Object Path
      
      Some object paths contain erroneously semicolons  

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.11                                                     2007-12-20
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007519
      Performance Improvement
      
      Eliminate unnecessary state caching when iterationg over collections 
      of stated objects prefetched in a time-point view.

      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.10                                                     2007-12-14
==============================================================================

1.    NEW FEATURES
      
      CR20007520
      states
      
      The EnableShowDB option allows the showDB() invocation when logging at
      trace level.
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007519
      Performance Improvement
      
      Eliminate unnecessary state caching when navigating to objects prefetched
      in a time-point view.

      CR20007520
      states
      
      The EnableShowDB option is false by default.
      
      
2.1.  FIXED BUGS
      
      CR20007517
      EnableDisjunctStateCreation
      
      The state1 plug-in's EnableDisjunctStateCreation option could not be set 
      to false, neither implicitely nor explicitely. 
      
      Now it's false by default.
      

2.2.  DEPRECATED FEATURES
      none

2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.19.9                                                      2007-12-02
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20007102
      Improve ignoreCheckForDuplicates
      
      A unique constraint violation detected with the activated 
      ignoreCheckForDuplicates flag return a DUPLICATE exception instead of
      a MEDIA_ACCESS_FAILURE, provided the SQL state returned by the database 
      driver is either 23000 or 23505.
      
2.1.  FIXED BUGS

      CR20007104
      XmExport of stated objects  
      
      XmlExporter fails if the startPath collection contains an instance of 
      BasicState.
      
      CR20007200
      XmlExporter exception handling
      
      Sometimes the XmlExporter exception stack's initial cause contains an 
      assertion failure (Detected a recursion flaw within the exception stack. 
      The exception is fixed but some information had to be discarded...) 
      
      CR20007107
      Traversal failure
      
      The object view's instance-of filter property evaluation did ignore
      the sub-classes of a candidate's class.
      
      CR20007106
      Erroneous object selection by TimeRange View
      
      A time range view's collection of children did ignore non-readable 
      objects, which was  wrong.
      
      A time range view's collection of children must ignore deleted objects 
      only, but include all others, whether readable or not.

==============================================================================
Version 1.19.8                                                      2007-11-28
==============================================================================

1.    NEW FEATURES
      
      CR20006414 
      Query on persistent-new object trees
      
      * Support JDO's IgnoreCache==false setting 
      * No round-trips should be made when making queries on a persistent-new 
        object's containers.      
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS

      CR10006485
      Attribute Specifiers are ignored by ITERATION_CONTINUATION 
      
      CR20006420
      Date or DateTime filter properties
      
      Date or DateTime filter properties for non-stated objects are not 
      converted to any other DB format than String when issued via a state
      view.
      
      
==============================================================================
Version 1.19.7                                                      2007-11-22
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006388
      State View HashCode
      
      Different state view instances referring to the same object should share 
      the same hashCode.  

      CR20006386
      UnitOfWOrk_1_0 getDateTime() 
      
      It should throw an ILLEGAL_STATE exception if no unit of work is active 
      instead of returning null.
      
2.1.  FIXED BUGS
      
      CR20006387
      A residual period of one day
      
      A residual period of one day is "swallowed" during commit by the
      DateState_1 plug-in. 
      
      CR20006376
      refSetOutermostPackage caches the wrong object with the tie approach
      
      The user provided instance has been cached instead of the proxy 
      instance.
      
      
==============================================================================
Version 1.19.6                                                      2007-11-21
==============================================================================

1.    NEW FEATURES
      
      CR20006383
      StateIncapable
      
      State incapable BasicState instances are marked with a StateIncapable 
      context by the
      org.openmdx.compatibility.base.dataprovider.layer.model.StateIncapable_1 
      and org.openmdx.compatibility.base.dataprovider.layer.model.NoState_1 
      plug-in. 

      CR20006384
      Unstated children of stated parents should be supported
      
      Especially the cascading delete operation has to be aware of it:
      Unstated children of stated objects are involved to cascading deletes
      if their parent has no more valid states.


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20006385
      Dependency Aware Explorer Fallback 

      Add lenient ordering in case of circular references:
      Fall back to ordering by by states and children only as opposed to the 
      original order.
      
2.1.  FIXED BUGS
      none
      
      
==============================================================================
Version 1.19.5                                                      2007-11-20
==============================================================================

1.    NEW FEATURES
      none


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006380
      DateState Views's "readable" predicate
      
      The DateState Views's "readable" predicate ignores deleted states now.

      CR20006380
      Add the "deleted" predicate to the DateStateViews state retrieval 
      criteria
      
      All methods exposing the "invalidated" predicate should expose the 
      "deleted" predicate as well          
         
      CR20006378
      Persistence: RID lookup for PG. DBOSlicedWithIdAsKey generates rid lookup 
      statements of the form ((v." + database.OBJECT_ID + " > ?) AND 
      (v." + database.OBJECT_ID + " < ?)). Because string comparison does not 
      work as expected for PG on Unix the form using LIKE should be used instead, 
      i.e. (v." + database.OBJECT_ID + " LIKE ?).


2.1.  FIXED BUGS

      CR20006382 
      RID/OID with dbObject2 
      
      The RID is not included in dbObject2's SELECT statement 
      
      CR20006376
      DateState View's Reference Container
                         
      A DateState view's reference container did ignore the filter part of
      a query for non-stated objects as soon as an order was specified.
      
      
==============================================================================
Version 1.19.4                                                      2007-11-16
==============================================================================

1.    NEW FEATURES

      CR20006376
      Removal Propagation
      
      DateState Views are now able to propagate removal operations for a given
      time range to their children.                       

      CR20006376
      NoState_1 detection
      
      DateState Views allow now the modification of the stateValidFrom and 
      stateValidTo attributes of DateState instances provided by a service
      using the NoState_1 plug-in.


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006376
      View For Initialized State
      
      The DateState views for initialized states no longer ignore values 
      provided by client side JMI plug-ins.


2.1.  FIXED BUGS

      CR20006376
      DateState View's Reference Container
                         
      A DateState view's persistent-new reference container occasionally
      ignored all its children.
      
      
==============================================================================
Version 1.19.3                                                      2007-11-15
==============================================================================

1.    NEW FEATURES
      none
                       

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20006376
      DateState View's Reference Container
      
      A DateState view's reference container no longer includes objects 
      removed in the current unit of work, i.e. objects with their 
      refIsDeleted() flag set are excluded.      

2.1.  FIXED BUGS

      CR20006376
      DateState View's Reference Container

      Iterator could erroneously terminate - probably due to the fact that
      objects fetched or created or fetched during the iteration.
                         
==============================================================================
Version 1.19.2                                                      2007-11-14
==============================================================================

1.    NEW FEATURES
      none
                       

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006371
      State Removal
      
      The remove operation does no longer return any former attributes.


2.1.  FIXED BUGS
      
      CR20006371
      Multiple State Removal
      
      The AbstractState_1 sometimes rejected state removal requests during
      its after completion phase.
      
      Sometimes identical invalidated states were written to the database in
      a single transaction.

      CR20006371
      State queries for persistent-new objects
      
      State queries for persistent-new objects did ignore the cache.

      CR20006371
      DateState views for persistent-new objects
      
      Creating views for persistent-new objects did not work.
      
      CR0006371
      Duplicate state entries created by getViewForPropagatedState 

                   
==============================================================================
Version 1.19.1                                                      2007-11-07
==============================================================================

1.    NEW FEATURES

      CR20006371
      DateState Views

      Added
      * the ability to access provider with No_State_1-Plug-ins.
      * the ability to retrieve objects of "other" views by another mean than
        DateStateViews' static methods: 
        The predicate "statedObject().isNonNull() returns different states
        of a given object in different views with identical refMofId()s:
        - valid states' views are time range views for the states' validity.
        - invalidated states' views are time point views (valid for the
          beginning of the states' validity and valid at one millisecond
          before its invalidation).
           
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR20006371
      DateState Views

      API changes (in regard to request 20006291)
      * The two static writable views (write-only time-range view and 
        read-write mixed view) have been replace by a single dynamic one
        (writable time-range view which is readable depending on the cache 
        content).
      * The null return policy has been changed from "null if object does not 
        exist" to "null if either object does not exist or if there is no
        valid state in the given time range".

      CR20006371
      Exporter

      Added
      * the ability to export the states of objects unavailable at
        the time of export.


      CR20006291 
      DateState Views

      Adding a new state is no longer optimistic but pessimistic, i.e. a
      DUPLICATE exception is thrown immediately in case of a conflict.

2.1.  FIXED BUGS

      CR20006371
      State Views & JMI Plug-ins
      
      The state view supports now with client and server side JMI plug-ins.


                   
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.19.0                                                      2007-10-13
==============================================================================

1.    NEW FEATURES

      #20006291 
      DateState Views
      
      Date State view support allows to set the context on a RefRootPackage
      bases as opposed to the connection based ServiceHeader apporach.
      These RefRootPackage views share the same unit of work.
      
      CR20006356
      NoState_1
      
      The layer configuration option "SingleStateMode" tells, whether the
      NoState_1 plug-in holds a single state per object instead of an object 
      which is valid forever.
      
      The default value is false, i.e. no state mode where each object is
      valid forever.
      
      CR20006291
      DateState Views
      
      The marshalling objects implement the Delegating_1_0 interface now. 
      
      CR20006340
      Extend Layer interface
      
      The Layer_1_2 interface has two new signatures
      
	    /**
	     * This method is called by the INTERCEPTION layer before procss()ing
	     * the given request.
	     * 
	     * @param header
	     * @param request
	     */
	    void prolog(
	        ServiceHeader header, 
	        UnitOfWorkRequest request
	    );
	    
	    /**
	     * This method is called by the INTERCEPTION layer after procss()ing
	     * the given request.
	     * 
	     * @param header
	     * @param request
	     */
	    void epilog(
	        ServiceHeader header, 
	        UnitOfWorkRequest request,
	        UnitOfWorkReply reply
	    );
      
      If these methods are overridden in a subclass they have to call their
      super implementation in order to notify the other layers as well.
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006291
      DateState Views
      
      The marshalling object's delegate is now available through the protected
      method getDelegate(), but no longer as field. 

2.1.  FIXED BUGS

      CR20006296
      Database_1: multiple reads on columns. ResultSet.getObject(columnName) 
      must NOT be called more than one time on the same row (at least for numeric 
      columns with SQL Server). The second and subsequent calls may return invalid 
      values without throwing an exception. The class FastResultSet already handles 
      this case, however not for indexed columns (introduced with embedded features 
      and legacy tables). 
      
                  
2.2.  DEPRECATED FEATURES
      
      CR20006339
      Deprecate org::openmdx::compatibility::role1 
            
2.3   REMOVED FEATURES

      CR20006291
      DateState Views
      
      The marshalling object's delegate is no longer available as field.


==============================================================================
Version 1.18.3                                                      2007-09-03
==============================================================================

1.    NEW FEATURES
      
      CR20006252
      The DependencyAwareExplorer changes the request order unnecessarily. 
      
      The DependencyAwareExplorer changes the request order only if necessary
      if the newly introduced RELUCTANT_REORDERING flag is on.
        
      CR20006291
      org.openmdx.compatibility.state1.view package
      
      org::openmdx::compatibility::state1 view API added
      
             
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006287 
      Oracle Datums

      Resolved the erroneous behaviour if Oracel Datums.     
      
      CR20006284
      XMLExporter 
      
      startPoints.size() > 1 leads to exception
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none



==============================================================================
Version 1.18.2                                                      2007-08-26
==============================================================================

1.    NEW FEATURES
      
      CR20006287 
      Oracle Datums
      
      The Oracle Datum conversion routine has been made available via the
      org.openmdx.oracle.base.Datums class.
      
      CR20006281
      Database: Existence query during object creation. 
      IGNORE_CHECK_FOR_DUPLICATES allows to ignore the check-for-duplicate 
      test on object creation. By default, the database plugin asserts that no 
      two objects with the same identity are created. An object is only created 
      if an object retrieval with the same identity throws NOT_FOUND. The check 
      is not performed if the option is set to true. In this case it is 
      strongly recommended to set primary key constraints on the object_id / 
      idx columns.
      
      NOTE: if case of duplicate objects ids and IGNORE_CHECK_FOR_DUPLICATES 
      and database constraints turned on, a ServiceException is thrown with 
      error code MEDIA_ACCESS_FAILURE and a db-specific SQLException as cause.      
      
      SF1010664
      Eclipse projects
      
      Versioned Eclipse projects are now included in the binary distribution.
      
      CR20006258
      Database_1 allows to handle multiple connection managers. Connection
      managers are configured according to the name pattern ../datasource[0],
      ../datasource[1], etc. in the provider's deployment descriptor. The database 
      plugin accesses the connection managers by calling the method 
      getConnectionManager(DataproviderRequest request). By default the method 
      returns the first configured connection manager. However, the method can be 
      overriden so that it returns a connection manager according to a user-defined 
      criteria derived from the actual request.
      
      CR20006251
      Audit_1: add option returnAllInvolved. An object retrieval of an involved 
      object returns by the default the requested object or throws a NOT_FOUND 
      exception. When the option is set to true all objects involved in a unit 
      of work are returned in the same fetch set.
      
      CR20006687
      RSM6 / UML2 model export is now supported in addition to Together,
      MagicDraw and Together. The model exporter accepts the new option
      --format=uml2.openmdx-1 (see ant/etc/ant/build-library.xml and
      jre-1.4-properties, jre-1.5-properties and jre-1.6-properties).
      
      CR20006259
      Database_1: support join tables. joinTable, joinColumnEnd1 and joinColumnEnd2 
      allow to access the configured db object using a join table. The view to 
      access the configured db object is constructed as SELECT T v INNER JOIN 
      joinTable vj ON v.object_id = vj.joinColumnEnd2. Normally a find request 
      results (depending on the configured db object type) in SELECT T v WHERE 
      p$$parent = ?. With a join table the find request looks as SELECT T v INNER 
      JOIN joinTable vj ON v.object_id = vj.joinColumnEnd2 WHERE vj.joinColumnEnd1 = ?.
      Currently, join tables are only supported for DBOSlicedWithParentIdAsKey.
      
      CR20006247
      JDO: Embedded multivalued fields 
      
      Specifying for example "embedded=3" in the openmdxjdo declaration for 
      field "embeddedField" leads to the following fields in the main object
      * embeddedField_0 
      * embeddedField_1 
      * embeddedField_2 
      and the following columns in the main table
      * EMBEDDED_FIELD_0 
      * EMBEDDED_FIELD_1 
      * EMBEDDED_FIELD_2       
      while the following field in the main object
      * embeddedField_size
      and the following field in the slice table
      * embeddedField
      are suppressed together with their corresponding columns.
      
      CR20006245
      Sounds like

      SOUNDS flag support added to StringTypePredicate

      CR20006237
      Allow query context's being added to JMI queries. A query such as

        SegmentQuery query = this.clock1.createSegmentQuery();
        QueryFilter context = this.datastore1.getQueryFilter().createQueryFilter();
        context.setClause(
            "SELECT something FROM somewhere WHERE b0 = ?b0 AND i0 = ?i0 AND i1 = ?i1 AND i2 = ?i2"
        );
        context.setBooleanParam(
            new boolean[]{true}
        );
        context.setIntegerParam(
            new int[]{1, 2, 3}
        );
        query.thereExistsContext().equalTo(context);        

			leads to a filter similar to
			
			[org.openmdx.compatibility.base.query.FilterProperty (THERE_EXISTS object_instanceof IS_IN [org:openmdx:test:clock1:Segment]): {
				quantor = "THERE_EXISTS"
				name = "object_instanceof"
				operator = "IS_IN"
				values = [
					0: "org:openmdx:test:clock1:Segment"
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:object_class PIGGY_BACK [org:openmdx:compatibility:datastore1:QueryFilter]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:object_class"
				operator = "PIGGY_BACK"
				values = [
					0: "org:openmdx:compatibility:datastore1:QueryFilter"
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateParam"
				operator = "PIGGY_BACK"
				values = []
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:decimalParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:decimalParam"
				operator = "PIGGY_BACK"
				values = []
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:clause PIGGY_BACK [SELECT something FROM somewhere WHERE b0 = ?b0 AND i0 = ?i0 AND i1 = ?i1 AND i2 = ?i2]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:clause"
				operator = "PIGGY_BACK"
				values = [
					0: "SELECT something FROM somewhere WHERE b0 = ?b0 AND i0 = ?i0 AND i1 = ?i1 AND i2 = ?i2"
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:booleanParam PIGGY_BACK [true]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:booleanParam"
				operator = "PIGGY_BACK"
				values = [
					0: true
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:integerParam PIGGY_BACK [1, 2, 3]): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:integerParam"
				operator = "PIGGY_BACK"
				values = [
					0: 1
					1: 2
					2: 3
				]
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateTimeParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:dateTimeParam"
				operator = "PIGGY_BACK"
				values = []
			}, org.openmdx.compatibility.base.query.FilterProperty (PIGGY_BACK context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:stringParam PIGGY_BACK []): {
				quantor = "PIGGY_BACK"
				name = "context:93d963b0-1da1-11dc-b1aa-2b13ea06e9c2:stringParam"
				operator = "PIGGY_BACK"
				values = []
			}]

			The database plugin includes the filter clause in the WHERE clause as
			SELECT ... WHERE <query filter clause> AND <other criteria>. The parameter
			placeholders ?<type><index> are replaced by their corresponding parameter 
			values as follows:
			
				?i<index>: integerParam at index
				?n<index>: decimalParam at index
				?s<index>: stringParam at index
				?b<index>: booleanParam at index
				?d<index>: dateParam at index
				?t<index>: dateTimeParam at index		  
			      
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006288
      SLF4J 1.4.3
      
      Upgrade to SLF4J 1.4.3 with the following main changes
      * by SLF4J
        - Mapped Diagnostic Context support 
        - Trace level support 
      * by openMDX
        - Use SysLogLoggerFactory as fallback if no LoggerFactoryBinder is 
          available (as oppesed to SLF4J's orginal implementaion which fails 
          in this case) 
          
          IMPORTANT NOTE:
          An SLF4J-Implementation JAR must be BEFORE openmdx-kernel.jar in the 
          system classpath!

      CR20006283
      RSM project naming conventions. RSM projects renamed to:
      * openMDX 1 ~ Core (RSM)
      * openMDX 1 ~ Portal (RSM)
      * openMDX 1 ~ Security (RSM)
      As a consequence the projects must be referenced in thirdparty projects using
      the new project name, e.g. href="platform:/resource/openMDX%201%20~%20Core%20(RSM)/..."
      
      CR20006280 
      Inefficient equalTo 
      
      "For all" or "there exists" give mathematically the same result in case
      of mandatory attributes, but a DB query should use "there exists" to 
      avoid "OR NULL" leading very often to full table scans. 
      
      CR20006273 
      SLF4JLoggingMechanism logger selection
      
      The SLF4JLoggingMechanism selects the logger by the event's class name
      instead of the Log name.
      
      CR20006255
      Database_1: DataproviderReplyContexts.TOTAL. TOTAL is set at ITERATION_START 
      the following cases:
      1. last object is reached. TOTAL is set to position + number of returned 
         objects
      2. result set is non-indexed. TOTAL is calculated with SELECT COUNT(*)      
      
      CR20006250
      XRI Validity
      
      Sub-segments with invalid characters must be escaped, e.g.
      * .../($t*ces*jqxhIol0EdiUc%2BAQxhsSOg)/... instead of 
        .../jqxhIol0EdiUc+AQxhsSOg/...
      
      CR20006248
      state1: fix derived associations. Associations StateBelongsToBasicState, 
      StateExtendsBasicState, StateBelongsToBasicObject must be modeled with 
      isDerived=true.
      
      CR20006245
      Sounds like
      
      Support SOUNDS flag with like() instead of soundLike().
      
      CR20006242
      RSM: XMI2 parser supports RSM 7. XMI2Parser accepts .emx files in format 
      RSM 7.

2.1.  FIXED BUGS
      
      CR20006286
      JMI marshalling failure for dates less than 1000-01-01
      
      1-01-01 should be converted to 00010101 instead of 10101
            
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR20006245
      Sounds like
      
      "soundLike(term)" predicates have been removed in favour of 
      "like(SOUNDS, term)"


==============================================================================
Version 1.18.1                                                      2007-06-14
==============================================================================

1.    NEW FEATURES
      none
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006233
      Database_1: filterPropertyToSql invalid translation of type patterns 
      to value patterns. The translation of type patterns to filter property value 
      patterns is invalid in some cases. Type wildcards :* are not translated to 
      sql wildcards %.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR20006245
      Sounds like
      
      soundLike() and soundsUnlike() operations removed.

==============================================================================
Version 1.18.0                                                      2007-05-31
==============================================================================

1.    NEW FEATURES
      
      CR20006724
      EJB 2.1 support by Lightweight Container
      
      Support forLightweight Container Support for EJB 2.1 compliant 
      stateleless session beans added,
      
      The following schema locations are supported:
      * http://java.sun.com/xml/ns/j2ee 
        http://java.sun.com/xml/ns/j2ee/application_1_4.xsd
      * http://java.sun.com/xml/ns/j2ee 
        http://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd
        
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006222
      SimpleDateFormat restrictions 
      
      org::w3c::dateTime values < 1970-01-01T00:00:00.000Z are represented
      * correctly in case of UTC
      * incorrectly for a lot of other time zones 

      The problem was detected under the following conditions
      * org::w3c::dateTime value < 1970-01-01T00:00:00.000Z 
      * SQL type TIMESTAMP WITH TIMEZONE 
                  
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.17.0                                                      2007-05-09
==============================================================================

1.    NEW FEATURES

      CR20006725
      Import Ignoring Referential Integrity
      
      A DataproviderRequest is lenient if its "lenient" context is
      set to Boolean.TRUE. Layers having their "bypassedByLenientRequests" 
      flag activated are bypassed by such lenient requests.
      
      Restriction: Either all requests of a unit of work or none must be
      lenient.
      
      The XMLImporter constructor for stated providers has an additional
      lenient argument defining whether the DataproviderRequests' "lenient"
      context is set to Boolean.TRUE or not.
      
      CR0002400 
      Logging Framework
      
      openMDX is now using SLF4J 1.3.1 with the following changes
      * The SLF4J sources have been re-included in the openMDX/Core source 
        tree 
      * The Logger interface has been changed into a jt file for proper Java 5 
        support 
      * The new slf4j-openmdx1.jar file delegates SLF4J logging request to 
        openMDX' native logging system 
        
      CR20006721
      Standard_1: notify preDelete option. Add configuration option 
      MODEL/notifyPreDelete. If true, calls notifyPreDelete() before an object 
      is removed. notifiyPreDelete() is called for the removed object and 
      recursively for each of its composite (references must have composite 
      aggregation kind composite and changeability set to true) objects. 
      
      CR20006690
      NoState_1      
      
      The MODEL plug-in 
      org.openmdx.compatibility.base.dataprovider.layer.model.NoState_1
      allows to store classes implementing
      org::openmdx::compatibility::state1::BasicState as normal objects, 
      i.e. without any state information.
      
      CR20006688 
      Logging mit Log4J 
      
      1. openMDX 1 uses internally an openMDX specific logging API.
         But the log events may be forwarded via SLF4JLoggingMechanismus 
         to a foreign log system, e.g. to
         * JDK 1.4 Logger 
         * LOG4J 
         * Logback 
         * Jakarta Commons Logging (JCL) 
         * x4juli 
      2. openMDX 2 uses SLF4J as logging API.
         The log events may be processed either directly by log systems
         supporting SLF4J, e.g.
         * x4juli 
         * Logback (LOG4J's successor) 
         or they may be forwared to a foreign log system, e.g.
         * JDK 1.4 Logger 
         * LOG4J 
         * Jakarta Commons Logging (JCL) 
         
      You have the following configuration options:
      1. with openMDX log configuration
         * the new SLF4JLoggingMechansim forwards log events to SLF4J
         * the pre-exisiting configuartion options have not changed
      2. without openMDX log configuration
         * if the classes org.slf4j.impl.StaticLoggerBinder and 
           org.slf4j.impl.StaticMarkerBinder are both available in the
           system class path then all log events from log level detail
           on are forwarded to the SLF4JLoggingMechanism unless the
           slf4 would delegate back to the openMDX' native logging 
           system
         * Log events from log level warning on are forwarded to 
           openMDX' StandardErrLoggingMechanism in all other cases.

      CR0002400
      Logging Framework
      
      We are going to swithc to SLF4J
      1. In a first step we delegate Jakarta Commons Logging requests via 
         SLF4J to SysLog
      2. In a later step we are going to delegate AppLog and SysLog requests 
         to SLF4J 

      Via SLF4J one is be able to delegate to one's preferred logging 
      framework such as
      * LogBack
      * x4juli
      * JDK14
      * Log4j
      * Simple
      * Simple-Log
      * Jakarta Commons Logging
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none 

2.1.  FIXED BUGS
      
      CR20006682
      Audit: getChangedAttributes() must perform data type conversion if configured.
      
      CR20006645
      Filter re-use
      
      Clear destroys a filter's instance-of property.
                  
2.2.  DEPRECATED FEATURES
      
      CR20006588
      …jdo.Persistence_1
      
      The primitiveTypes packages
      * org.omg.primitiveTypes.cci
      * org.omg.primitiveTypes.jmi
      are deprecated and will be removed in the near future
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.4                                                      2007-02-23
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR20006645
      Filter re-use
      
      Clear destroys a filter's instance-of property.
                  
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.3                                                      2007-02-20
==============================================================================

1.    NEW FEATURES
            
      CR20006586
      Persistent identifier types
      
      New primitive types for openMDX 2:
      * org.ietf.UUID
      * org.ietf.OID
      * org.oasis-open.XRI
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS

      CR20006642 
      StandardDbObject.remove() fails if length of dbObjectForUpdate1 or 
      dbObjectForUpdate2 is 0. Remove is only allowed for db objects != null
      and length > 0.
                  
2.2.  DEPRECATED FEATURES

      CR20006586
      Alias types
      
      The following alias types should no longer be used
      * org.openmdx.base.ObjectId
      * org.openmdx.base.uuid
      * org.oasis-open.xri
            
2.3   REMOVED FEATURES
      
      CR20006586
      org.openmdx.kernel.id.XRI


==============================================================================
Version 1.16.2                                                      2007-02-06
==============================================================================

1.    NEW FEATURES
      
      CR003086
      CCI2, JMI1, JDO2 mappings

      The openMDX 2 compliant mappings maybe generated.
      They require Java 5 or Java 6 platform.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20006609
      ESCAPE CHARACTER 
      
      The select statements should be able to supply an ESCAPE clause as a
      lot of databases do not have '\' as default escape character.
      
      ESCAPE '\' is provided for the following databses at the moment
      (see jdbc-driver-sql.properties):
      * ORACLE
      * Microsoft SQL Server
                  
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.1                                                      2007-01-17
==============================================================================

1.    NEW FEATURES
      
      CR20006517
      Möglichkeit, TIMESTAMP WITH TIMEZONE mit einer konfigurierbaren Zeitzone
      zu speichern.
      
      There is new configuration option defining how org:w3c::date and
      org::w3c::datetime values are stored
      
      1. dateType
         * STANDARD
           Use the jdbc-driver-sql property DATE.TYPE.STANDARD           
         * DATE
           Store durations as SQL dates
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings

      2. dateTimeType
         * STANDARD
           Use the jdbc-driver-sql property DATETIME.TYPE.STANDARD           
         * TIMESTAMP
           Store durations as SQL TIMESTAMPs
         * TIMESTAMP_WITH_TIMEZONE
           Store durations as SQL TIMESPATMPs WITH TIMEZONE
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
         * Numeric
           Store as Number of seconds that have passed since 1970-01-01 
           00:00:00.000 UTC, including a fractional part

      3. dateTimeZone
         dateTimeZone defaults to TimeZone.getDefault().getID().
         Some configuration examples are:
         * UTC
         * GMT+02:00
         * Europe/Zurich

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR20006520
      Attributes of defaultFetchSet are not marked as read if value is null 

      CR20006505 & mantis.0004034
      XmlExporter does not propagate exception
      
      Most xceptions are logged but not proagated to the caller.
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.16.0                                                      2006-12-31
==============================================================================

1.    NEW FEATURES
      
      CR0004043 
      Model Mapper Plugin Support
      
      One can specifiy any class implementing the interface
      org.openmdx.model1.mapping.Mapping_1_0 as format in addition to the 
      predefined values
      * jmi.openmdx-1
      * xmi.openmdx-1
      * uml.openmdx-1
      * together.openmdx-1
      * cci2
      * jmi1
      * jdo2

      Such a class will be created by its public parameterless constructor.

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004045
      Audit ObjectCreation fails with native datatypes 
      
      The Audit_1 persistence plug.in did not convert XML Datatype instances
      into ISO compliant Strings before sending them to the audit provider.

      Incident 20006541
      Multivalued Reference Query Mapping
      
      org.omg.model1.query.AssociationEndQuery.qualifierType() for example 
      returns. org.w3c.cci2.OptionalFeaturePredicate instead of 
      org.w3c.cci2.MultivaluedFeaturePredicate.
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.4                                                      2006-12-04
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0004007 
      Database: replace LIKE clause in DBOSlicedWithIdAsKey in order to improve
      performance with DB2.
      
2.1.  FIXED BUGS
      
      CR0004033 
      Database with PostgreSQL: missing columns in db objects for private 
      columns.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.3                                                      2006-11-30
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004024 
      XML Schema
      
      * The Authorities in the Edit-Schema lack providers.
      * XMLSpy 2005 does not allow for empty xsd:all elements.      
             
      CR0004015
      optimisticLocking mit xmlDatatypes
      
      ORACLE TIMESTAMP WITH TIME ZONE leads to a CONCURRENT_ACCESS failure 
      when OPTIMISTIC LOCKING is ON.

2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.2                                                      2006-11-27
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004007 
      Database: remove() does not delete all composite objects.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

==============================================================================
Version 1.15.1                                                      2006-11-27
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0004008 
      Database: slicedNonIndexed does ignores column object_idx to exclude.
            
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.15.0                                                      2006-11-21
==============================================================================

1.    NEW FEATURES

      CR0003988
      Dependcy in rose models
      
      Dependencies will be ignored.
      
      CR0003966 
      Import/Export 
      
      * Export
        1. All states of a stated object are exported with empty </_content>.
        2. The object itself is exported with empty </_object>
      * Import
        1. All invaildated states are ignored
        2. Objects modified not later than "modifiedSince" are ignored if
           "modifiedSince" is specified and not null.  
                
      without attributes but with
      CR0006093
      Database: DBOSlicedWithIdAsKey. The new object format allows to store
      object references in a single column. The standard format sliced stores
      object references in two columns:
      1) the object reference (rid)
      2) the object key (oid)
      DBOSlicedWithIdAsKey allows to store the object reference in a single
      column by appending rid and oid, i.e. id = rid + '/' + oid. The naming
      conventions for id type columns are:
      * object_id: the identity of the object
      * p$$parent_id: the identity of the parent object
      * <ref>: the identity of the referenced object <ref>
      * p$$ref_parent: the identity of the parent of the referenced object <ref>
      
      CR0006093
      Database: normalize multi-valued columns. The database plugin allows to
      store single- and multi-valued attributes in different columns. If the
      configuration objects 'dbObject' and 'dbObject2' are specified for a
      specific type, then
      * the single-valued attributes are stored in table 'dbObject'
      * the multi-valued atributes are stored in sliced format in table 'dbObject2'
      For query object use 'dbObjectForQuery' and 'dbObjectForQuery2'. Below is
      a sample for the normalized table app1_Address:
      
			CREATE TABLE app1_Address (
				object_referenceid bigint NOT NULL ,
				object_objectid varchar (200) NOT NULL ,
				object__class varchar (200) NULL ,
				description varchar (200) NULL ,
				created_at varchar (20) NULL ,
				modified_at varchar (20) NULL ,
				postal_code varchar (100) NULL ,
				street varchar (100) NULL ,
				country varchar (100) NULL ,
				city varchar (100) NULL ,
				house_number varchar (100) NULL ,
				address varchar (100) NULL
			);
			
			CREATE TABLE app1_Address_N (
				object_referenceid bigint NOT NULL ,
				object_objectid varchar (200) NOT NULL ,
				object_idx int NOT NULL ,
				modified_by varchar (50) NULL ,
				created_by varchar (50) NULL,
				address_line varchar (100) NULL ,
			);
      
      The corresponding database configuration looks as follows:
      
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:type">
				<_object>
					<value>
						<_item>xri:@openmdx:org.openmdx.test.app1/provider/:*/segment/:*/address/:*</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObject">
				<_object>
					<value>
						<_item>app1_Address</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObject2">
				<_object>
					<value>
						<_item>app1_Address_N</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>																								
			<org.openmdx.deployment1.DataproviderIntegerProperty qualifiedName="PERSISTENCE:pathNormalizeLevel">
				<_object>
					<value>
						<_item>0</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderIntegerProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObjectFormat">
				<_object>
					<value>
						<_item>sliced</_item>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
			<org.openmdx.deployment1.DataproviderStringProperty qualifiedName="PERSISTENCE:dbObjectForQuery">
				<_object>
					<value>
						<_item/>
					</value>
				</_object>
				<_content/>
			</org.openmdx.deployment1.DataproviderStringProperty>
            
            
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR20006216 
      PathComponents 
      
      Make the path components class XRI cross reference aware
      
      Behaviour
      1. current behaviour for path components
         * Double colons are used as field separator 
         * Single colons are forbidden 
      2. required behaviour for XRI segments
         * Double colons are used as sub-segment separator 
           (to be translated into an asterisk in XRI 2 except for 
           @openmdx authority segments) 
         * Single colons are allowed in cross-references only 
      
2.1.  FIXED BUGS
      
      CR0003994
      Oracle TIMESTAMP 
      
      * Oracle data type TIMESTAMP:
        The UTC value passed to openMDX will be converted the the local
        time zone before being stored.
      * Oracle data type TIMESTAMP WITH TIMEZONE
        The UTC value passed to openMDX will be stored as is together
        with the infomration about the local time zone.
      * Oracle data type TIMESTAMP WITH LOCAL TIME ZONE 
        not yet supported       
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.14.8                                                      2006-09-25
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
       
      CR0003925 
      state1: The reference DateState.extends must be renamed to 
      DateState.statedObject in order to match the leading RSM model.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES


==============================================================================
Version 1.14.7                                                      2006-09-25
==============================================================================

1.    NEW FEATURES
      
      CR0006109
      Database: Support for autonum columns. The new option autonnumColumn allows
      to configure autonum columns as follows (also see Javadoc of class
      LayerConfigurationEntries):
      
      * the configuration option is 'autonumColumn'
	    * the format is dbObject.columnName [AS format]
	    * the database plugin handles autonum colums as follows:
  	    - autonum is applied for object slice creation with index 0
	        when a column is specified as autonum and no value is supplied with
	        the create request, a value of the form 'NEXTVAL(sequence name)'
	        is generated in the 'VALUES' clause of the INSERT statement
	      - a corresponding sequence with name 'namespace_columnName_SEQ'
	        must exist. For databases which do not support sequences a table 
	        namespace_columnName_SEQ must exist with column nextval.
	      - if the optional format is specified with 'AS format' a cast
	        is applied to the sequence value, e.g. CAST(sequence name AS CHAR(20)).
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003869
      Redeployment of WebLogic versioned applications
      
      The RemoteInvocationHandler's invoke() method maps now all 
      java.lang.RuntimeExceptions to java.rmi.ServerRuntimeException - as
      opposed to mapping all javax.ejb.EJBExceptions to 
      java.rmi.ServerExceptions.
      
2.1.  FIXED BUGS
      
      CR0003913 
      Rose model export throws NullPointer. The models state2, role2 and audit2
      use modeling features not supported by openMDX 1. The models are removed
      from the openMDX 1 distribution.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES


==============================================================================
Version 1.14.6                                                      2006-09-11
==============================================================================

1.    NEW FEATURES

      CR0003869
      Redeployment of WebLogic versioned applications
      
      RuntimeExceptions thrown by Handle.getEJBObject() are wrapped into
      java.rmi.ServerRuntimeExceptions in order to be handled by openMDX'
      retriable remote exceptions mechanism. 
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003869
      Redeployment of WebLogic versioned applications
      
      weblogic.work.WorkRejectedException added to 
      retrieable-remote-exceptions.properties.
      
      java.rmi.ServerRuntimeException*javax.ejb.EJBException added to
      retrieable-remote-exceptions.properties.
      
      The AbstractGateway_1Bean allows for another try after resetting
      the context in order to cope with WebLogic's erroneous anonymous
      initial access after connection establishement.
      
2.1.  FIXED BUGS
      
      CR0003868
      Missing JNDI name in Lightweight Container's EJB Handle
      
      This results in the client's unability to reconnect to a restarted
      lightweight container.
      
      CR0003887 & CR0003888
      CompactSparseList.equals() is erroneous  
      
      CompactSparseList.equals() may return erroneously true if 
      this.size() == 1 && that.size() > 1. 
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.14.5                                                      2006-08-22
==============================================================================

1.    NEW FEATURES
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003856
      close method for Connections 
      
      WebLogics expects a close() method for resource adapter connection 
      testing.
            
      CR0003860
      Proxy Bean Retrial Attempts
      
      EJB create() should have two attempts as well.

      java.rmi.AccessException sould be added to the retriable
      remote exceptions.
      
2.1.  FIXED BUGS
      none
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      
      CR0003844
      LightweightContainerLookupFactory
      
      The deprecated class LightweightContainerLookupFactory has been
      removed.


==============================================================================
Version 1.14.4                                                      2006-08-21
==============================================================================

1.    NEW FEATURES
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003852
      Missing credential mapping
      
      Missing credential mapping for a key store resource adapter leads now 
      to a SecurityException instaed of a NullPointerException.
            
2.1.  FIXED BUGS
      
      CR0006106
      Database: support % for paths. A wildcard path (path with trailing %) 
      typically matches more than one dbObject type. The current implementation 
      does a) not a proper mapping to an externalized path, b) does ignore 
      multiple matching types.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.14.3                                                      2006-08-21
==============================================================================

1.    NEW FEATURES
      
      CR0003843
      openmdx-connector.jar
      
      The openmdx-connector.jar contains classes to support resource adapter
      deployment.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003846
      Default JMI format  
      
      The default JMI mapping format has been changed from 
      "jmi.openmdx-1.jre-1.4" to "jmi.openmdx-1".
      
      The difference between these two mappings is
      * the jmi.openmdx-1.jre-1.4 mapping was based on 
        org.openmdx.uses.javax.xml.datatype classes 
      * the jmi.openmdx-1 mapping is based on javax.xml.datatype classes  
      
      CR0003771
      Key- und Certificate Provider für wls 9
      
      Withg the introduction of the key store resource adapter pattern
      key and certificate provider factories are put into the JNDI tree
      (as opposed the key and certificate providers themselves).
      
      The following classes have therefore been changed accordingly
      * org.openmdx.base.security.pki.DeployedCertificateProvider
      * org.openmdx.base.security.pki.DeployedKeyProvider   
      
2.1.  FIXED BUGS
      
      CR0006105
      Database: missing ORDER BY. Object slices must be ordered by object rids, 
      oids, idx for object retrievals.

      CR0003837
      Lightweight Container Class Path
      
      openmdx-kernel.jar refers to openmdx-base.jar classes.
             
      CR0003838
      Methods and interfaces in openmdx.base.security.pki classes  
      
      Some openmdx.base.security.pki classes have to override some methods or 
      to implement more interfaces in order to be accepted by WebLogic 9's 
      resource adapter container 

2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR0003846
      Removed JMI format  
      
      The JMI mapping "jmi.openmdx-1.jre-1.4" is no longer supported.
      

==============================================================================
Version 1.14.2                                                      2006-08-11
==============================================================================

1.    NEW FEATURES
      
      CR0006103
      StringBuilders
      
      Use the org.openmdx.kernel.text.StringBuilders classe to 
      * create StringBuilder instances assignemnt compatible to CharSequence 
      * cast a CharSquence references to StringBuilder 
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none      
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      
      CR0003771
      Key- und Certificate Provider für wls 9
      
      Withg the introduction of the key store resource adapter pattern
      key and certificate provider factories are put into the JNDI tree
      (as opposed the key and certificate providers themselves).
      
      The following classes have therefore been removed
      * org.openmdx.base.security.pki.DeployedCertificateProvider
      * org.openmdx.base.security.pki.DeployedKeyProvider   
      
      CR0006102
      Get rid of org.openmdx.uses.java.beans classes
      
      Replace references to org.openmdx.uses.java.beans classes by references 
      to java.beans classes wherever possible.
      
      The java.beans classes are available in the JRE from Java 2 Release 
      1.4 on, except for the IndexedPropertyChangeEvent class.

      CR0006104
      Get rid of org.openmdx.uses.java.net classes
      
      Use JDK's XML encoder and decoder
      
      JDK's XML encoder and decoder accept the encoding argument from JRE 1.4 
      on.


==============================================================================
Version 1.14.0                                                      2006-06-30
==============================================================================

1.    NEW FEATURES
      
      CR0006091
      XML Datatypes Processing Format
      
      There is new configuration option for MODEL and PERSISTENCE 
      defining how org::w3c::date and org:w3c::duration values are 
      passed to the persistence layer      
      
      1. xmlDatatype, a boolean entry
         * false (defauult): 
           Pass the ISO 8601 compliant string values instead of the XML compliant 
           datatypes to the persistence layer
         * true: 
           Pass the XML compliant datatypes instead of the ISO 8601 compliant 
           String values to the persistence layer

      CR0006090
      XML Datatype Storage Format
      
      There is new configuration option defining how org:w3c::duration values 
      are stored
      
      1. durationType
         * INTERVAL
           Store durations as SQL intervals
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
         * NUMERIC
           Store year-month durations as integers and day-time durations
           as decimals.

      2. dateType
         * DATE
           Store durations as SQL dates
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings

     3. dateTimeType
         * TIMESTAMP
           Store durations as SQL timestamps
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
  
     4. timeType
         * TIME
           Store durations as SQL times
         * CHARACTER (default)
           Store durations as ISO 8601 compliant strings
         * NUMERIC
           Store the time in seconds from the beginning of the day
           as decimals.
      
      CR0003734
      Lifecycle callback
      
      jdoPreStore() is called, whenever a JMI object instance impelemnting 
      javax.jdo.listener.StoreCallback is about to be stored.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0006091
      XML Datatypes
      
      The JMI mapping of org::w3c::date and org::w3c::duration is
      javax.xml.Duration and javax.xml.XMLGregorianCalendar respectively 
      (as opposed to org.openmdx.uses.javax.xml.Duration and 
      org.openmdx.uses.javax.xml.XMLGregrianCalendar)      
      
2.1.  FIXED BUGS
      none      
             
2.2.  DEPRECATED FEATURES

      CR0006091
      XML Datatypes
      
      org.openmdx.uses.javax.xml.Duration and 
      org.openmdx.uses.javax.xml.XMLGregrianCalendar are deprecated and will 
      be removed soon.
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.6                                                      2006-06-20
==============================================================================

1.    NEW FEATURES
      
      CR0006088
      org::w3c::boolean
      
      There are three new configuration options for the database plug-in
      defining how boolean values are stored:
      
      1. booleanType
         The type used to store boolean values, i.e. one of
         * BOOLEAN (ignore booleanFalse and booleanTrue configurations)
         * CHARACTER (default)
         * NUMERIC
         
      2. booleanFalse
         The value corresponding to Boolean.FALSE, e.g.<ul>
         * false (fix in case of  booleanType BOOLEAN
         * ##false## (default in case of booleanType CHARACTER 
         * 0 (default in case of booleanType NUMERIC
          
      2. booleanFalse
         The value corresponding to Boolean.TRUE, e.g.<ul>
         * true (fix in case of  booleanType BOOLEAN
         * ##true## (default in case of booleanType CHARACTER 
         * 1 (default in case of booleanType NUMERIC
                 
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002878
      XRI 2.0 support
      
      Upgrade to openXRI 1.0.0 which is based on an additional thirdparty 
      library:
      
		Name: com/ibm/icu/
		Specification-Title: ICU for Java
		Specification-Version: 3.4.1
		Specification-Vendor: ICU
		Implementation-Title: ICU for Java
		Implementation-Version: 3.4.1
		Implementation-Vendor: IBM Corporation
		Implementation-Vendor-Id: com.ibm      
      
2.1.  FIXED BUGS
      none      
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.5                                                      2006-06-09
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003713
      Principal name 
      
      Principal and realm name must not be derived from their object's id.
      
      The name attributes of org::openmdx::security::realm1::Realm and 
      org::openmdx::security::realm1::Principal class have to be changed 
      accordingly. 
      
2.1.  FIXED BUGS
      
      CR0003028 
      Useless JmiAccessor for reference with ClassType qualifier generated 
      
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.4                                                      2006-06-07
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003702 
      Infinite loop during RefStruct creation 
      
      Creating a RefStruct instance containing a set of JMI object leads to an 
      infinite loop consuming up the VM's memory.
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.3                                                      2006-06-07
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003696 
      Filter problem
      
      JMI filters ignore values of type RefObject unless they are instances of
      org::openmdx::base::ExtentCapable and 
      org::openmdx::compatibility::state1::State
             
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.2                                                      2006-06-06
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003686
      JMI proxy instances never implement the InstanceCallbackListener 
      interface
      
      JMI proxy instances ignore the interfaces provided by the 
      implementation.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.1                                                      2006-05-31
==============================================================================

1.    NEW FEATURES
      none
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003677
      Together export exception 

      The Together exporter does not convert the legal MOF Namespace name 
      "oasis-open" to the legal C++ namespace "oasis_open" but keeps the 
      original value "oasis-open" which is illegal as C++ namespace.

      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.13.0                                                      2006-05-21
==============================================================================

1.    NEW FEATURES
     
      CR0006070
      openMDX 2 Query interfaces
      
      openMDX 2 Query interfaces are going to replace openMDX 1 Filter 
      interfaces and classes.
      
      The advantage of this approach is, that the query interfaces are 
      accessor independent, i.e. they can be used for example by
      * JMI accessors
      * CCI accessors
      * JDO accessors
      * ?
      
      In future there will be different ways to formulate queries
      * openMDX 2 Query interfaces (using a strongly typed API)
      * JDO query language (using stringified expressions)
      * SQL (using stringified expressions)
      * EJB 3 query language (using stringified expressions)
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0006059
      Move the ui1 model and plugin to sub-project openMDX/Portal.
      
      CR0006051
      MOF to Java Name Mapping

      Make openMDX' MOF to Java Name Mapping JMI 1.0 compliant

      Rules for Splitting MOF Model.ModelElement Names into Words
      * In the MOF, the name of a ModelElement is, typically, formed from one 
        or more words in some natural language and is an instance of the 
        ?NameType? i.e., any valid UTF-16 string. Since the MOF does not 
        restrict the set of strings that can be used to name a ModelElement, 
        not all ModelElement names transform directly to valid Java 
        identifiers. For example, names that include graphic characters do not 
        map to Java identifiers.
      * However, ModelElement names (or the javax.jmi.substituteName if one is 
        provided) consisting only of ASCII letters, digits, hyphens ('-'), 
        underscores ('_') and white-space characters, and conform to the 
        following syntax are subject to a JMI identifier generation pattern 
        that will result in standardized Java identifiers being generated.
      * MOF identifier syntax subject to JMI identifier mapping:
        Let ?ALPHA? be the set of upper-case alphabetic characters;
        Let ?alpha? be the set of lower-case alphabetic characters;
        Let ?num? be the set of numeric characters.
        Then:
        word ::= [ALPHA] [ALPHA | num]* [alpha | num]* | [alpha] [alpha | num]*
        white-space::= SP, CR, LF, HT, VT
        non-sig ::= { '_' | '-' | white-space }*
        MOF-identifier ::= [non-sig] word { non-sig word }* [non-sig]
      * The above syntax defines a heuristic for splitting names into a 
        sequence of words. The Java identifier is generated by reassembling the 
        words. The "non-sig" characters are non-significant to the Java 
        identifier generation rules and are discarded.
  
      Rules for Generating Identifiers
      * Identifier naming is an important issue for automatically generated 
        Java interfaces, especially when the interfaces are intended to be 
        used by applications written by human programmers. The mapping has to 
        reach a balance between conflicting requirements: 	 	
        - Syntactic correctness
          all identifiers in the mapped Java must conform to the Java syntax.
        - User friendliness
          identifiers should convey as much information as possible without 
          being overly long.
        - Conformance to existing conventions
          identifiers should conform to existing stylistic conventions.
      * In JMI, all identifiers (i.e., names of packages, names of class 
        proxies, names of operations, names of parameters, names of constants, 
        and names enumeration literals) shall conform to the following rules:
        - Package names:
          The identifier consists of lower-case alphabetic characters only.
        - Class proxy names: 
          The identifier consists of lower-case alphabetic characters with 
          the following exceptions.The first letter of the identifier is 
          capitalized. If the identifier consists of multiple words, the first
          letter of each word in the identifier is capitalized.
        - Operation names
          The identifier consists of lower-case alphabetic characters with the
          following exception. If the identifier consists of multiple words, 
          the first letter of each word except the first word, is capitalized.
        - Attribute names:
          The identifier consists of lower-case alphabetic characters with the
          following exception. If the identifier consists of multiple words, 
          the first letter of each word except the first word, is capitalized.
        - Constants
          The identifier consists of all upper-case alphabetic characters and 
          the ?_? character (used to separate words).
        - Enumeration literals
          The identifier consists of all upper-case alphabetic characters and 
          the character ?_? (used to separate words).
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

                    
==============================================================================
Version 1.12.1                                                      2006-03-27
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0006052
      refInitialize() throws NullPointer
      
      CR0006053
      ObjectInspectorServlet: IE7 support
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.12.0                                                      2006-02-20
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003585
      Classpath URL validation
      
      An IOException with a message of the form «?ClassLoaderType? classloader 
      ?ModuleName? can't validate URL ‹URL›» containing the initial reason as 
      cause should be thrown.
      
      CR0003587 
      References used as filter values
      
      There are two changes in the RefFilter_1_0 implementation regarding the
      
          refAddValue(
            String fieldName,
            short quantor,
            short operator,
            Collection values
          );
          
      method:
      * The «values» argument accepts now members of type «Path» in addidtion 
        to «RefObject_1_0» instances.
      * For members which are instances of both «State» and «ExtentCapable»
        «getIdentitiy()» is used as opposed to the usual «refGetPath()».         
      
      CR0003589
      State-parameters in path for object creation
      
      If a JMI accessor retrieves a container belonging to an instance of 
      both State and ExtentCapable whichs is persistent but neither new nor
      deleted then it returnes one based on the object's identity rather than 
      the object's path.
      
      CR0003591 
      DateMarshaller throws RuntimeException
      
      No exceptions are thrown for incomplete or early dates, but each date is 
      marshalled AS IS.
      
2.1.  FIXED BUGS
      
      SF1260974
      Mistake in RefStruct
      
      The standard RefStruct interface is used when openMDX 2 JMI mappings
      are generated.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.11.6                                                      2006-01-19
==============================================================================

1.    NEW FEATURES
      
      CR0003588
      Extent requests for stated objects
      
      Allow extent requests for subclasses of 
      org::openmdx::compatibility::state1::State and 
      org::openmdx::base::ExtentCapable.
      
      CR0003584
      XMLImporter und Dates

      An XMLIMporter extension allows to enter date time entries without 
      timezone, i.e. as local date time values.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003585
      Preference Logging
      
      Lack of database preferences should be logged at info instead of warning
      level.
      
2.1.  FIXED BUGS

      CR0003585
      NullPointerException during deployment descriptor parsing
      
      openmdx-ejb-jar.xml deployment descriptor entries without matching
      ejb-jar.xml deployment-descriptor entries lead to NullPointerException.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.11.5                                                      2006-01-06
==============================================================================

1.    NEW FEATURES

      CR0006038
      ObjectInspectorServlet: selectable values. AttributeValue has a method 
      returning a list of values which are rendered as drop-down. The method 
      returning the values is user-definable. This extension is e.g. useful 
      for input parameter fields of type object reference:
      
			public List getSelectableValues(
			    ApplicationContext application,
			    RefObject_1_0 context,
			    String qualifiedFeatureName
			) {
			    RefPackage_1_0 rootPkg = (RefPackage_1_0)context.refOutermostPackage();
			    Path contextIdentity = new Path(context.refMofId());
			    // org:opencrx:kernel:base:ExecuteWorkflowParams:workflow
			    if("org:opencrx:kernel:base:ExecuteWorkflowParams:workflow".equals(qualifiedFeatureName)) {
			        org.opencrx.kernel.workflow1.cci.Segment workflowSegment = 
			            (org.opencrx.kernel.workflow1.cci.Segment)rootPkg.refObject(
			                "xri:@openmdx:org.opencrx.kernel.workflow1/provider/" + contextIdentity.get(2) + "/segment/" + contextIdentity.get(4)
			            );
			        Collection wfProcesses = workflowSegment.getWfProcess();
			        List selectableValues = new ArrayList();
			        for(Iterator i = wfProcesses.iterator(); i.hasNext(); ) {
			            selectableValues.add(
			                new ObjectReference((org.opencrx.kernel.workflow1.cci.WfProcess)i.next(), application)
			            );
			        }
			        return selectableValues;
			    }
			    else {
			        return super.getSelectableValues(
			            application,
			            context,
			            qualifiedFeatureName
			        );
			    }
			}           
      
      CR0006036
      ObjectInspectorServlet: 'All' filter. Allow to customize the filter which 
      shows 'All' objects in a grid. The filter should also be the underlying 
      filter for all class and user-defined filters. This allows to customize 
      grids which show a customizable object subset which can not be overriden 
      by the user.
      
			<void index="8">
			  <object class="org.openmdx.application.gui.generic.servlet.Filter">
			    <void property="name">
			      <string>account:0</string>
			    </void>
			    <void property="condition">
			      <array class="org.openmdx.base.query.Condition" length="2">
			        <void index="0">
			          <object class="org.openmdx.base.query.IsInCondition">
			            <void property="quantor">
			              <short>2</short>
			            </void>
			            <void property="feature">
			              <string>object_instanceof</string>
			            </void>
			            <void property="fulfil">
			              <boolean>true</boolean>
			            </void>
			            <void property="value">
			              <array class="java.lang.String" length="1">
			                <void index="0">
			                  <string>org:openmdx:workshop1:TeamMember</string>
			                </void>
			              </array>
			            </void>
			          </object>
			        </void>
			        <void index="1">
			          <object class="org.openmdx.base.query.IsInCondition">
			            <void property="quantor">
			              <short>1</short>
			            </void>
			            <void property="feature">
			              <string>disabled</string>
			            </void>
			            <void property="fulfil">
			              <boolean>true</boolean>
			            </void>
			            <void property="value">
			              <array class="java.lang.Boolean" length="1">
			                <void index="0">
			                  <boolean>false</boolean>
			                </void>
			              </array>
			            </void>
			          </object>
			        </void>
			      </array>
			    </void>
			    <void property="groupName">
			      <string>~</string>
			    </void>
			  </object>
			</void>

      CR0006035
      ObjectInspectorServlet: additional element definitions for object 
      containers. This allows to define multiple object containers based on the 
      same model reference.
      
			<org.openmdx.ui1.ElementDefinition name="org:opencrx:kernel:account1:Segment:account">
				<_object>
					<active>true</active>
					<toolTip>
						<_item>all Accounts</_item>
					</toolTip>
					<label>
						<_item>Accounts</_item>
					</label>
					<order>
						<_item>0</_item>
						<_item>0</_item>
						<_item>10</_item>
					</order>
					<maxMember>21</maxMember>
					<showMaxMember>9</showMaxMember>
				</_object>
				<_content>
					<additionalElementDefinition>
						<org.openmdx.ui1.AdditionalElementDefinition id="0" _operation="create">
							<_object>
								<toolTip>
									<_item>all Accounts (additional)</_item>
								</toolTip>
								<label>
									<_item>Accounts (additional)</_item>
								</label>
								<order>
									<_item>0</_item>
									<_item>0</_item>
									<_item>11</_item>
								</order>
								<maxMember>21</maxMember>
								<showMaxMember>9</showMaxMember>
							</_object>
							<_content/>
						</org.openmdx.ui1.AdditionalElementDefinition>
					</additionalElementDefinition>
				</_content>
			</org.openmdx.ui1.ElementDefinition>
      
      CR0006033
      ObjectInspectorServlet: allow to set requestedAt / requestedFor. Allow to 
      set requestedAt / requestedFor for the service header used to construct the 
      data package. A wizard implemented as JSP can set requestedAt/requestedFor 
      as follows:
      
			  ApplicationContext app = (ApplicationContext)session.getValue("ObjectInspectorServlet.ApplicationContext");
			  app.setDataRequestedAt(requestedAt);
			  app.setDataRequestedFor(requestedFor);
			
			The setting becomes active if the user clicks 'refresh objects' (this 
			creates a new object factory).      
      
      CR0002709
      JMI collection mapping. Map
      * stereotype <<list>> to java.util.List
      * stereotype <<set>> to java.util.Set
      For Java 2 Platform 5.0 support
      * stereotype <<list>> to java.util.List<...>
      * stereotype <<set>> to java.util.Set<...> 
      
      CR0003297
      Database_1: Supports mode without REF table. Use the following configuration
      options:
      * PERSISTENCE/referenceIdFormat
        - refTable: RIDs are normalized and managed in REF table
        - typeWithPathComponents: RIDs are stored as compressed Paths in
          the format <typeName>{'/' <path component>}. Type names are
          configured for each type with the option 'typeName'.
      * PERSISTENCE/useNormalizedReferences: If true, references read from the 
        database are converted to paths using the normalized reference columns, 
        i.e. p$$<reference>__rid, p$$<reference>__oid.
      
      CR0002987
      afterCompletion
      
      In case of non-transactional units of work one can experience the 
      following behaviour:
      * persistent-new objectes become transient during a client-side rollback
      * persistent-new become persistent after a server-side rollback
      
      A persistentNewObjectsBecomeTransientUponRollback flag has been added to 
      the Provider_1 constructor which allows to override its default value 
      transactionPolicyIsNew().

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002878 
      XRI 2.0
      
      The non-antlib namespaces provided by the build library use an XRI 2.0
      compliant XRI (e.g. "xri://(antlib:fr.jayasoft.ivy.ant)" instead of
      "xri:(antlib:fr.jayasoft.ivy.ant)")
      
      CR0002664, CR0002708
      JMI: getX(FilterX) with an integer as qualifier fails with 
      ClassCastException (a MarshallingList is returned and the container 
      cast fails). Such an assoiciation corresponds to a list 
      (java.util.List). The signature getX(filter) is removed from
      the API.

      CR0002453
      JMI: class-level get<X>(object) marshals object. The class level
      get operation is implemented as follows:
      * object instanceof Path --> of.getObject(p) and wrap the object 
        to JMI without marshalling. objGetClass() is not called.
      * object instanceof Object_1_0 --> object is wrapped to JMI without 
        marshaling. objGetClass() is not called.
      This behaviour is not consistent to RefPackage_1_0.refObject() which 
      marshals Object_1_0. The new implementation must marshal Object_1_0 
      the same way as refObject() does.
      
      CR0006032
      Replace Velocity based model mapper by Java based. As preparation for 
      Java 5 and openMDX 2 support replace velocity base model mappers by 
      Java based mappers. This allows a more robust implementation of
      the model mappers.
      
      CR0006021
      State plugin: Disabling of (technical) history.
            
      * The configuration entry "DisableHistoryPathPattern" is deprecated in
        favour of "DisableHistoryReferencePattern":
        
          <env-entry>
	        <env-entry-name>MODEL/DisableHistoryPathPattern[0]</env-entry-name>
	        <env-entry-type>java.lang.String</env-entry-type>
	        <env-entry-value>xri:@openmdx:org.openmdx.test.compatibility.state1/provider/:*/segment/WithoutHistory/%</env-entry-value>
          </env-entry>
      
2.1.  FIXED BUGS
      
      CR0002360
      Modeling: endless loop when defining circular alias types. If the model 
      contains an alias type definition whose type points directly or indirectly 
      to the same alias type, dereferencing the type ends in and endless loop.
      
      CR0006037
      ObjectInspectorServlet: NumberValue throws IllegalArgumentException. In 
      case the underlying value can not be retrieved NumberValue throws a 
      IllegalArgumentException. Instead it should return #ERR and log the cause 
      of the failed value retrieval.

      CR0002943
      Jmi: Jmi-Plugin setBoolean(boolean). Setters with native Java types
      or not invoked in JMI plugins, e.g. void setFeature(boolean newValue)
      is not invoked. RefObjectFactory_1 does now find setter methods with
      native Java types.
      
      CR0003563
      Root object without valud states
      
      A stated object's root object remains in the data store upon the 
      object's removal even if history states are disabled.
      
      CR0006031
      Database: store strings > 4K as CLOB with Oracle. Strings > 4K must be 
      stored as oracle.sql.CLOB.
      
      CR0003557
      1D-History
      
      "DisableHistoryReferencePattern"s configuration is applied correctly only
      when all patterns end with "/%". 

      CR0003556 
      OBJECT_RID is BigDecimal not Long 
      
      Sigrnatur of getReferenceFormatRefTable changed:
    
        private Path getReferenceFormatRefTable(
          Connection conn,  
          Number referenceId
        ) throws ServiceException;
      
2.2.  DEPRECATED FEATURES

      CR0006021
      State plugin: Disabling of (technical) history.
            
      * The configuration entry "DisableHistoryPathPattern" is deprecated
        
          <env-entry>
	        <env-entry-name>MODEL/DisableHistoryPathPattern[0]</env-entry-name>
	        <env-entry-type>java.lang.String</env-entry-type>
	        <env-entry-value>xri:@openmdx:org.openmdx.test.compatibility.state1/provider/:*/segment/WithoutHistory/%</env-entry-value>
          </env-entry>

        in favour of "DisableHistoryReferencePattern".
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.11.4                                                      2005-11-26
==============================================================================

1.    NEW FEATURES
      
      CR0006021
      State plugin: Disabling of (technical) history.
      * State management ignoring the (technical) history of an object. 
      * Only validFrom/validTo are relevant for state managment. requestedAt/
        requestedFor are ignored.
      * The list of stated objects with disabled (technical) history are
        configured on the plugin, e.g.
        
        <env-entry>
	      <env-entry-name>MODEL/DisableHistoryPathPattern[0]</env-entry-name>
	      <env-entry-type>java.lang.String</env-entry-type>
	      <env-entry-value>xri:@openmdx:org.openmdx.test.compatibility.state1/provider/:*/segment/WithoutHistory/%</env-entry-value>
        </env-entry>
        
      * The plugin returns the context org:openmdx:compatibility:state1:StateCapable
        with the boolean attribute keepingInvalidatedStates for all stated
        objects. This allows a client to decide at runtime whether the 
        technical history of an object is active.

        static boolean isKeepingIvalidStates(
	       State statedObject
        ){
	       ContextCapable contextCapable = (ContextCapable)statedObject;
	       StateCapable stateContext = (StateCapable) contextCapable.getContext(State_1_Attributes.STATE_CONTEXT);
	       return stateContext.isKeepingInvalidatedStates();
        }
        
      CR0006027
      Database: use preferences provider. Allow to read type and column mapping
      configuration from a preference provider. The deployment descriptor based
      deployment is still supported. The configuration retrieved from the
      preference provider overloads the deployment descriptor based configuration.
      
      NOTE: With openMDX 1 the configuration is read directly from the hard-coded 
      table PREFS_Preferences. The table has the schema:
      
			CREATE TABLE prefs_Preference(
			    object_rid nvarchar(100) NOT NULL,
			    object_oid nvarchar(200) NOT NULL,
			    object_idx int NOT NULL,
			    object__class nvarchar(100) NULL,
			    name nvarchar(100) NULL,
			    description nvarchar(100) NULL,
			    absolute_path nvarchar(200) NULL,
			    parent nvarchar(100) NULL,
			    string_value ntext NULL,
			    integer_value int NULL,
			    boolean_value nvarchar(10) NULL,
			    uri_value nvarchar(200) NULL,
			    decimal_value numeric(18,9) NULL,
			    CONSTRAINT PK_PREFS_Preferences PRIMARY KEY (object_rid, object_oid, object_idx)
			)
            
      With openMDX 2 the hard-coded access to the table PREFS_Preferences will 
      be replaced by a configurable preferences provider.
      
      CR0006028
      Add preferences1 model. Will be used in openMDX 2 for a preferences1 
      provider. Serves as specification for a database plugin specific 
      implementation in openMDX 1.

      CR0003440
      ObjectInspectorServlet: customizable operations. It is be possible 
      to extend the ObjectInspectorServlet by user-defined JSPs. The JSPs
      must be located under ./wizards/<locale>. They naming conventions
      are:
      * file name: <qualified class name>-<servlet name>.JSP
      * Tags:
		    <meta name="label" content="<label of menu entry>">
		    <meta name="toolTip" content="<tool tip of menu entry>">
		    <meta name="targetType" content="_blank|_this,...">
		  Registered JSPs are shown as menu entries in objects of type
		  <qualified class name>.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0006028
      generic1: Attribute names of subclasses of Property changed:
      * value:boolean -> booleanValue:boolean
      * value:string -> stringValue:string
      * value:decimal -> decimalValue:decimal
      * value:integer -> integerValue:integer
      * value:uri -> uriValue:uri      
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR0006029
      Database: decommit reference caching. Reference caching is complex, 
      does not work in all situations and is not used by any application. 
      Remove it.
      

==============================================================================
Version 1.11.3                                                      2005-11-08
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0006019
      Database: Split createObject() into createObjectSlice(index, slice) and 
      createMultiValuedObject(object). This allows a user-defined DbObject 
      implementation to distinguish between slice and object creation.
      
2.1.  FIXED BUGS
      
      CR0003461
      NullPointerException in AbstractFileLoggingMechanism  
      
      Illegal configurations lead to a NullPointerException in 
      AbstractFileLoggingMechanism. 

      CR0003467
      Object Inspector Crash
      
      Externally reported Object Inspector servlet bugs fixed.       
      
      CR0003474
      Objekt Inspector Servlet and stated objects
      
      Externally reported Object Inspector servlet bugs fixed. 
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.11.2                                                      2005-11-02
==============================================================================

1.    NEW FEATURES

      CR0003480
      ObjectInspectorServlet: Allow enable/disable top/left pane.
      
      CR0003478
      ObjectInspectorServlet: Allow to set page size. The number of rows 
      returned in a grid can be set by the user.      


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.11.1                                                      2005-10-20
==============================================================================

1.    NEW FEATURES
      
      CR0003474 
      ObjectInspectorServlet: new option 'retrieveByPathPattern[i]' allows to
      configure path patterns for objects which have to be retrieved by their
      path instead of their identity (refMofId).
      
      CR0003475
      Document upload from webapp does not work
      
      The AbstractDatabase_1 layer in the package org.openmdx.compatibility
      .base.dataprovider.layer.persistence.jdbc has two new
      configuration parameters for the streaming at unit of work
      boundaries:
      * PERSISTENCE/streamBufferDirectory
        Defines where the temporary files (beginning with their
        unit of work id and ending in ".tmp") should be placed.
        Defaults to the VM's temp directory.     
      * PERSISTENCE/chunkSize
        Defines how many bytes or characters are transferred at once.
        Defaults to 10000. 
      

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0003413
      Streaming into database 
      
      The streaming mode selected by the presence of selected system 
      properties:
      * "weblogic.Name" ? WebLogic RMI 
      * "was.install.root" ? IIOP 
      * default ? JRMP 

      Two configuration parameters in the UnitOfWork_1Bean in the package 
      org.openmdx.compatibility.application.dataprovider.transport.ejb
      .transaction has have new names:
      * PERSISTENCE/streamBufferDirectory
        Defines where the temporary files (beginning with their
        unit of work id and ending in ".tmp") should be placed.
        Defaults to the VM's temp directory.     
      * PERSISTENCE/chunkSize
        Defines how many bytes or characters are transferred at once.
        Defaults to 10000. 
      
      
2.1.  FIXED BUGS
      
      CR0006018
      ObjectInspectorServlet: back action may crash session. The back 
      action may crash the session in case the back object is not accessible.
      
      CR0003475
      Document upload from webapp does not work
      
      WebLogic requires the transactions being suspended.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES

      CR0003413
      Streaming into database 
      
      Two configuration parameters in the UnitOfWork_1Bean in the package 
      org.openmdx.compatibility.application.dataprovider.transport.ejb
      .transaction has have new names, the following names have therefore
      been removed:
      * TRANSACTION/streamBufferDirectory
      * TRANSACTION/streamChunkSize


==============================================================================
Version 1.11.0                                                      2005-10-10
==============================================================================

1.    NEW FEATURES
      
      CR0003474 
      ObjectInspectorServlet: new option 'retrieveByPathPattern[i]' allows to
      configure path patterns for objects which have to be retrieved by their
      path instead of their identity (refMofId).
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR0003475
      Document upload from webapp does not work
      
      WebLogic requires the callbacks being anonymized.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.10.2                                                      2005-10-09
==============================================================================

1.    NEW FEATURES
      
      CR0003413
      Streaming into database 
      
      IIOP support has been added to openMDX streaming.
      
      The streaming mode selected by the presence of selected system 
      properties:
      * "weblogic.Name" ? WebLogic RMI 
      * "was.install.root" ? IIOP 
      * default ? JRMP 

      The UnitOfWork_1Bean in the package org.openmdx.compatibility
      .application.dataprovider.transport.ejb.transaction has two new
      configuration parameters for the streaming at unit of work
      boundaries:
      * TRANSACTION/streamBufferDirectory
        Defines where the temporary files (beginning with their
        unit of work id and ending in ".tmp") should be placed.
        Defaults to the VM's temp directory.     
      * TRANSACTION/streamChunkSize
        Defines how many bytes or characters are transferred at once.
        Defaults to 10000. 

      CR0003473
      DB Object Format slicedNonIndexedParentRidOnly
      
      Add a new DB object format called slicedNonIndexedParentRidOnly. 
      
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
 
      CR0003413
      Streaming into database 
      
      Logs mode at detail level
      
      
2.1.  FIXED BUGS
      
      CR0003413
      Streaming into database 
      
      The RMI streaming's transaction suspension interferes with the 
      database's trasaction handling, especially in case of XA transactions.

      CR0003457
      slicedNonIndexed
      
      Segment deletion failed when a slicedNoIndexd DB object was defined.
      
      CR0002666 & CR0003454
      Remote backward iteration fails
      
      The standard application and persisetnce plugins ignore the
      dataprovider request's direction directive which leads which prevents
      correct execution of the requested list iterator's previous() method.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.10.1                                                      2005-09-27
==============================================================================

1.    NEW FEATURES

      CR0003459
      Fetch set should be able to include children
      
      Allow to include an object's children in its fetch set. 
      
      CR0003458 & SF1212068
      additional tagged values in rose models
      
      If there are additional tagged values in rose models (for example in a 
      class or association end) I get errors importing the model. On other 
      elements it is possible.
      
      The reason why I need additional tagged values is to build a to which 
      generates DDLs and deployment descriptors with the extra information.
      
      CR0003392
      Multi-valued 'forReference' in filter definitions. Multi-valued 
      'forReference' in filter definitions to reduce redundant filter definitions.
      Filter definitions must look as follows:
      
			<?xml version="1.0" encoding="UTF-8"?>
			<java version="1.3.1_11" class="org.openmdx.uses.java.beans.XMLDecoder">
				<object class="org.openmdx.application.gui.generic.servlet.Filters">
					<void property="forReference">
						<array class="java.lang.String" length="1">
							<void index="0">
								<string><qualified refernce name></string>
							</void>
						</array>
					</void>
					<void property="filter">
						<array class="org.openmdx.application.gui.generic.servlet.Filter" length="2">
		  ...      
      
      CR0006012
      XmlExporter: support for wildcard reference filter. referenceFilter 
      allows patterns with wildcards (:*) as reference names. A wildcard 
      reference matches all composite, non-derived references.
      
      CR0006006
      Dataprovider_1HttpConnection should support retries
      
      Dataprovider requests should be retried depending on the HTTP status.
      
      The retriable status codes are configured in the resource 
      retriable-status-codes.properties located in the directory
      org/openmdx/compatibility/base/dataprovider/transport/http.
      
      CR0006004
      Model_1: getElement() accepts qualified element names specified as List.
      RefStruct.refTypeName() returns qualified element names as List of name 
      components. It is now possible to to pass the result of refTypeName() 
      to getElement().

      CR0003433
      Ui_1: support coloring of Inspector. Support the definition attributes 
      color and backColor for inspectors.
      
      CR0002878 
      XRI 2
      
      Support for XRI 2 based URLs such as
      * xri://+zip*(file:/C:/var/a.zip)/index.txt
      * xri://+resource/org/openmdx/test/kernel/url/resource.txt
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002878 
      XRI 2
      
      XRI 1 based URLs are deprecated in favour of XRI 2 based URLs and their 
      usage is logged at info level.     
      
2.1.  FIXED BUGS

      CR0003456
      LighweightContainer's callbacks
      
      The lightweight container must not invoke ejbActivate and ejbDeactivate 
      for stateless session beans. 
      
      CR0006014
      Model_1: missing features in allFeatureWithSubtype. In some cases 
      allFeatureWithSubtype does not contain all features of all subtypes 
      of a class.

      CR0006013 
      Endless recursion with JmiServiceException
      
      Exceptions raised when preparing a JmiServiceException's parameters are
      now caught.
      
      CR0003401 & SF1260974
      JMI Version in use
      
      RefStruct's refTypeName() method should return a List, not a String. 
      
2.2.  DEPRECATED FEATURES
      
      XRI 1 based URLs such as the following ones are deprecated:
      * xri:+zip.(file:/C:/var/a.zip)/index.txt
      * xri:+resource/org/openmdx/test/kernel/url/resource.txt
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.10.0                                                      2005-08-14
==============================================================================

1.    NEW FEATURES
      
      CR0003090
      Streamable Data Types
      
      The following model elements have been added:
      * org::w3c::byte 
      * org::w3c::character 

      CR0002447 & SF968114 
      Add Customization point to change the behaviour of UnitOfWork 
      
      From openMDX 2 on you can do the following:
      1. Provide your own UnitOfWork class:
         * The class must be an instance of javax.jdo.transaction.
         * The class may be an instance of 
           javax.jdo.listener.InstanceLifecycleListener 
         * The class needs a public constructor with its PersistenceManager as 
           single argument 
      2. Configure this UnitOfWork class:
         * Specify the org.openmdx.jdo.UnitOfWorkName property for the JDO 
           PersistenceManagerFactory 
         * invoke setUnitOfWorkName() on the JDO PersistenceManagerFactory 
         
      CR0003086
      Object_2_0
      
      JDO 2.0 API added
      
      CR0003364
      Property Resolution in Lightweight Class Loader 
 
      Support property resolution in the lightweight class loader, e.g.
      * Implementation-URL: ${OPENMDX_HOME}/jre-1.4/core/lib/openmdx-base.jar

      System properties are now expanded for Implementation-URL manifest 
      entries.     

      CR0003365
      ObjectInspectorServlet: Editable Grids. Grids (object containers) can be 
      customized as inPlace editable (ui configuration). If customized as 
      editable, the user can switch such a grid (which is being viewed on "show" 
      mode") to "edit" mode (without server roundtrip). Once a grid is in edit 
      mode it cannot be switched back to show mode without either committing / 
      saving or discarding changes. The edit grid supports cloning of existing 
      and creation of new empty rows.
      
      CR0003378
      JMI: add RefObject_1_0.refInitialize(RefObject). refInitialize() allows 
      to initialize a RefObject based on an existing RefObject. 
      
      CR0003381 
      BasicExceptions do not include a Throwable's cause
      
      BasicException's DefaultMapper should take into account a Throwable's
      cause from JRE 1.4 on.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0003086
      Object_2_0 

      The method

	    /**
	     * Disassociates a connection from this managed connection
	     * 
	     * @param connection
	     */
	    void disassociateConnection(
	        Object connection
	    );
      
      to be found in the interface ManagedConnectionCallback in the package
      org.openmdx.kernel.application.container.spi.resource has been replaced 
      by the method

	    /**
	     * To tell that an object has been closed.
	     * 
	     * @param closed the object which has been closed.
	     */
	    void postClose(
	        Object closed
        );
      
      to be found in the interface CloseCallback in the package 
      org.openmdx.kernel.callback.

      CR0003329
      Paths as PathComponents
      
      Paths as PathComponents are now converted to XRIs as following:
      * a Path with compments ["a", "b", "c", "1/2/3"] for example
        toString() "a/b/c/1//2//3"
        toXri() "xri:@openmdx:a/b/c/(@openmdx:1/2/3)"
        toUri() "spice://a/b/c/1%2f2%2f3" 
      * a Path with components ["x", "y", "a/b/c/1//2//3"] for example
        toString() "x/y/a//b//c//1////2////3"
        toXri() "xri:@openmdx:x/y/(@openmdx:a/b/c/(@openmdx:1/2/3))"
        toUri() "spice://x/y/a%2fb%2fc%2f1%2f%2f2%2f%2f3"
        
      CR0003380
      org.openmdx.uses.org.apache.commons.fileupload
      
      The org.openmdx.uses.org.apache.commons.fileupload package should not be
      included in openmdx-kernel as it requires the Servlet API leading to 
      class loader conflicts wehn deployed on Tomcat 5 for example.
      
      The org.openmdx.uses.org.apache.commons.fileupload package has been moved
      to the openmdx-application.jar.
            
2.1.  FIXED BUGS
      
      CR0003390
      Code Accessor
      
      Manager_1 had a memory leak of about 50k per not found request.
      
      Manager_1 is going to listen to PRE_CLEAR events in order to detect an 
      object's inaccessablity. 
      
      CR0003376
      Using LightweightContainer RemoteDeployment in Junit Tests
      
      LightweightContainer was forked with an empty environment.

      Adjustment of wrong property set led to UnsupportedOperationException.
      
      CR0003379 
      org.openxri 
      
      org.openxri packages are now included in the openmdx-kernel.jar.     
      
2.2.  DEPRECATED FEATURES
      none
      
2.3   REMOVED FEATURES

      CR0003090
      Streamable Data Types
      
      The following model elements have been removed:
      * org::openmdx::base::blob 
      * org::openmdx::base::clob


      CR0003086
      Object_2_0 

      The interface ManagedConnectionCallback in the package
      org.openmdx.kernel.application.container.spi.resource has been replaced 
      by the interface CloseCallback in the package 
      org.openmdx.kernel.callback.

      
==============================================================================
Version 1.9.7                                                       2005-07-25
==============================================================================

1.    NEW FEATURES
      
      CR0003361
      Implementation-URL support
      
      The LightweightContainer should use
      * Implementation-URL entries
      instad of
      * Class-Path entries
      to load the Java classes from a different place and ignoring that 
      archive's MANIFEST.MF.
                               
      CR0002878
      XRI 2.0
      
      org.openxri package added.
      
      CR0003375 
      KeyProvider configuration
      
      A class implementing KeyProvider can be used in both cases:
      * Tomcat 
      * WebLogic 
      
      The following accessor classes have been added:
      * org.openmdx.base.security.pki.DeployedCertificateProvider 
      * org.openmdx.base.security.pki.DeployedKeyProvider 
      Their default JNDI lookup string is "java:comp/env/pki/provider".
              
      CR0003376  
      Using LightweightContainer RemoteDeployment in Junit Tests
      
      Constructors added to RemoteDeployment:
      
        /**
         * Constructor
	     * 
	     * @param properties 
	     *        the properties are never null and may include for example
	     *        * org.openmdx.deploy.connector.urls
	     *        * org.openmdx.deploy.application.urls
	     *        * org.openmdx.rmi.registry.port
	     *        * org.openmdx.rmi.naming.service
	     * @param connectors 
	     *        connectors overrides the corresponding properties entry 
	     *        unless it is null
	     * @param applications 
	     *        applications overrides the corresponding properties entry 
	     *        unless it is null
	     * @param detailLog 
	     *        the detail log may be null
	     * @param exceptionLog 
	     *        the exception log may be null
	     */
	    protected RemoteDeployment(
	        Map properties,
	        String connectors,
	        String applications,
	        PrintStream detailLog,
	        PrintStream exceptionLog
	    );
	    
	    /**
	     * Constructor
	     * 
	     * @param properties 
	     *        the properties are never null and may include for example
	     *        * org.openmdx.deploy.connector.urls
	     *        * org.openmdx.deploy.application.urls
	     *        * org.openmdx.rmi.registry.port
	     *        * org.openmdx.rmi.naming.service
	     * @param detailLog 
	     *        the detail log may be null
	     * @param exceptionLog 
	     *        the exception log may be null
	     */
	    public RemoteDeployment(
	        Map properties,
	        PrintStream detailLog,
	        PrintStream exceptionLog
	    );
      
2.    CHANGES
     
2.0.  CHANGED FEATURES
      none

2.1.  FIXED BUGS
      
      CR0003369 
      RMI Callbacks
      
      WebLogic should suspend the current transaction whene executing RMI
      callbacks.
      
      CR0003371 
      Iteration over an Extent
      
      Iteration continuation in an extent query does not use the configured 
      DbObject. 
            
2.2.  DEPRECATED FEATURES

      CR0002878
      XRI 2.0
      
      org.openmdx.kernel.id.XRI deprecated in favour of org.openxri.XRI.

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.9.5                                                       2005-07-15
==============================================================================

1.    NEW FEATURES
      
      CR0003340
      J2EE allows to specify a callback handler for an application client.  
      
      Allow the resource adapters to make use of this callback handler.  
                               
2.    CHANGES
     
2.0.  CHANGED FEATURES

      CR0003334 
      refMofId set to object identity
      
      The default fetch group is empty after commit, i.e. the object's 
      refMofId is null.
      
      refMofId() shall fall back to refGetPath().toXri() in case refMofId() 
      is null while refGetPath() is not. 
      
2.1.  FIXED BUGS
      
      CR0003342
      XMI2 parser ignores association's isDerived feature. The isDerived 
      feature is ignored by the XMI2 model importer. 
      
      CR0003354 & CR0003347
      Rose to RSM model conversion bug
      
      Some references modeled as isFrozen
      in Rose were not properly migrated to RSM as isReadOnly. JMI interfaces
      generated from non RSM modeling tools can not be compiled.
            
2.2.  DEPRECATED FEATURES
      
      CR0003349
      ObjectView_1
      
      clearStorage() has been deprecated.
      
      The clearStorage() invocations have been replaced by object factory
      replacements.

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.9.4                                                       2005-07-04
==============================================================================

1.    NEW FEATURES
      
      CR0003323
      NamingExceptions
      
      Its isRetriable() method defines which on which condition a failed
      method invocation may be retried.
      
      The retraible-naming-exceptions.properties file entries have on of the 
      two following formats:
      * <naming-exception-class>
      * <naming-exception-class>*<root-cause-throwable-class>  

      The current default property file contains the following entries:
      
        javax.naming.CommunicationException

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003335
      Standard_1: setting identity.
      
      CR0003334
      refMofId set to object identity.
      
      CR0003323
      NamingExceptions
      
      The AbstractGateway_1Bean now relies on NamingExceptions.isRetriable().
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.3                                                       2005-06-18
==============================================================================

1.    NEW FEATURES
      
      CR0003241
      XMI model importer supports IBM Rational Software Modeler. The importer
      can be invoked with a Java ant task e.g. as follows (also see
      openmdx/ant/etc/ant/build-library.xml). 
      
			<java 
				classname="org.openmdx.model1.exporter.xmi.XMIExporterMain" 
				fork="true" 
				failonerror="true" 
				maxmemory="128m"
				classpathref="${model.transformation.class.path}"
			>
				<sysproperty key="user.language" value="en"/>
				<sysproperty key="user.region" value="US"/>
				<sysproperty key="file.encoding" value="Cp1252"/>
				<sysproperty key="org.openmdx.log.config.filename" value="build/${build.target.platform}/log/model/archive-model.log.properties"/>
				<arg value="--pathMapSymbol=openmdx-core"/>
				<arg value="--pathMapPath=file:${openmdx.home}/core/src/model/rsm/"/>
				<arg value="--pathMapSymbol=openmdx-security"/>
				<arg value="--pathMapPath=file:${openmdx.home}/security/src/model/rsm/"/>
				<arg value="--url=file:src/model/rsm/models.emx"/>
				<arg value="--xmi=rsm"/>
				<arg value="--out=${build.dir}/model/models.zip"/>
				<arg value="%"/>
			</java>
      
      The path map allows to specify paths of imported model projects. RSM 
      stores the locations of model projects in the workspace. However, the
      model importer needs to know the location of all referenced model
      projects explicitely. Model projects are referenced in .emx files
      as e.g. follows:
      
			href="platform:/resource/openmdx-core/org.openmdx.base.emx
			
			where openmdx-core specifies the model name. If a path map symbol is
			specified for the model project openmdx-core then 
			platform:/resource/openmdx-core is resolved to the specified path map 
			path.
      
      The following guidelines help you migrating existing models from Rational 
      Rose to RSM:
      
      The migration is a several step process:
      
      - Prepare the .mdl/.cat files so that they can be imported by the 
        RSM Rational Rose Model importer. Also prepare all referenced
        models.
      - Import the models with the RSM Rational Rose Model importer.
      - Postprocess the imported models.

      For a more detailed description of the migration process also see
      http://www.openmdx.org/documentation.
      
      
      CR0003233
      RemoteExceptions
      
      The current default property file contains the following entries:
      
        java.rmi.ConnectException
        java.rmi.NoSuchObjectException
        java.rmi.RemoteException*java.net.ConnectException
        java.rmi.RemoteException*weblogic.rjvm.PeerGoneException      

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003311 
      Late Binding Connection
      
      LateBindingConnection_1 is now Serializable.
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.2                                                       2005-06-09
==============================================================================

1.    NEW FEATURES
      
      CR0003233
      RemoteExceptions
      
      The RemoteExceptions class has a configurable static isRetriable()
      method to be used by the framework (or applications) to determine
      whether it's safe to retry a failed remote invocation.
      
      The configuration property file is retrieved as resource from
      org/openmdx/base/exception/retriable-remote-exceptions.properties and
      each of its entries has one of following formats:
      
        <remote-exception-class>
        <remote-exception-class>*<detail-throwable-class>  
        
      The former format refers to remote exceptions retriable independent of
      its detail value, while the latter refers to remote-exceptions with
      detail value dependend retriability.
      
      The current default property file contains the following entries:
      
        java.rmi.ConnectException
        java.rmi.RemoteException*java.net.ConnectException
        java.rmi.RemoteException*weblogic.rjvm.PeerGoneException
      
                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003311 
      Late Binding Connection
      
      LateBindingConnection_1 is now Serializable.
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.1                                                       2005-06-06
==============================================================================

1.    NEW FEATURES
      
      CR0003260 
      Principal Limit
      
      Allow to define the maximum length for createdBy's and modifiedBy's 
      principal chains. 
      
      PRINCIPAL_LIMIT with its value "principalLimit" has been added to the
      MODEL layer configuration entry class, e.g.:
      * <env-entry>
          <env-entry-name>MODEL/principalLimit</env-entry-name>
          <env-entry-type>java.lang.Integer</env-entry-type>
          <env-entry-value>2</env-entry-value>
        </env-entry>

      CR0003233
      Dataprovider_1_0 Remote Connection Retry
      
      At the moment there is one retry if the RemoteException's cause is a
      ConnectException.
      
      Now you can define the set of retriable remote exceptions in the
      org/openmdx/base/exception/retriable-remote-exceptions.properties file.

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0003259
      EjbConfiguration
      
      The EjbConfiguration expects the JNDI Bindings to be relative to the 
      target context (which is named by the first parameter of the list() 
      method).
      
      Accept URL names as well.  
      
      CR0003267
      Append header does not work for queries 
      
      The Hub_1Bean uses the original service headers instead of the adjusted 
      one for queries.       
            
      CR0003280 
      2-way-ssl problems
      
      Ensure that all initial context objects are closed after use.
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.9.0                                                       2005-05-16
==============================================================================

1.    NEW FEATURES
      
      CR0003208
      openMDX tested with WAS6. openmdx-base.jar and openmdx-application.jar 
      are not required on the system classpath anymore. However, 
      openmdx-webapplication.websphere.jar must be added to WebApp- and MDB-EARs, 
      i.e. EARs which do not contain the openMDX dataprovider remote stubs (see
      distribution openmdx-<version>-websphere.websphere-6.
                   
      CR0003229
      ObjectInspectorServlet: allow to specify 'sortable' for ValueField. The 
      'feature' is currently used to enable/disable filtering and sorting for 
      a ValueFields. There are situations where fields are sortable but not 
      filterable, e.g. fields which are mapped to CLOBs, references, etc.
      
      CR0003200
      Database_1: add jdbc-driver-sql properties. properties file should 
      allow to configure:
      * STRCAT operator 
      * AUTONUM field format. Support AUTO, SEQUENCE, NEXTVAL.
      
      CR0003202
      DataSource Pool Settings  

      The Lightweight Container should take into account the DataSource Pool 
      configuration values.       

                               
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003236
      ObjectInspectorServlet: access history. Access history should be based 
      on the previousRequestId / previousObjectId sequence and should be 
      managed per view instead on ApplicationContext level. Do not make the 
      history persistent anymore. 

      CR0003100
      ObjectInspectorServlet: reload objects if composites are 
      created/deleted/changed.
      
      CR0003169
      ObjectInspectorServlet: Refresh all views after reload.
            
      
2.1.  FIXED BUGS
      
      CR0003220
      ObjectInspectorServlet: The manager of the parent object and the 
      new object to be added are not the same: 
			if(!this.isEditMode()) { 
			  Object[] qualifiers = (Object[])parameterMap.get("qualifier"); 
			  ((RefContainer_1_0)this.parent.refGetValue(this.forReference)).refAddValue( 
			    qualifiers.length > 0 ? (String)qualifiers[0] : "", 
			    this.object 
			  ); 
      }
      Reload the parent from the current (new) manager. 
      
      CR0003183
      ObjectInspectorServlet: NullPointerException with user-defined filters.
      
      CR0003205
      ObjectInspectorServlet: creator menus in root menu not sorted properly.
      
      CR0003212
      ObjectInspectorServlet: Setting default filter is broken.
      
      CR0003193
      ObjectInspectorServlet: Lookup inspector with bad Javascript if token 
      contains '.
      
      CR0003237
      ObjectInspectorServlet: memory leak data package. Verify that after 
      ApplicationContext.setDataPkg() the old dataPkg can be removed by the 
      garbage collector. Remove all RefObjects retrieved by the old dataPkg. 
      
      CR0003228 
      Standard_1.touchNonDerivedFeatures touches derived references. isDerived 
      is not a property of model1:Reference. Use Mode1_1_0.referenceIsDerived() 
      which queries the association's isDerived property. 
      
      CR0003203
      Invoke synchronization callback after rollback 
            
      The current Transaction implementation invokes beforeCompletion() and 
      afterCompletion() callbacks during commit() but not during rollback().      
      
      CR0003246 & SF1199480
      rmic does not accept blanks in JRE path
      
      The build-library.xml in does not allow for blanks in the JRE path when 
      invoking the RMI compiler. 
      
            
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none
     
                    
==============================================================================
Version 1.8.1                                                       2005-04-20
==============================================================================

1.    NEW FEATURES

      CR0003164 
      ObjectInspectorServlet: support binary streams. Support on-demand retrieval 
      of binary streams, i.e. attributes modeled as <<stream>> a: org::w3c::binary.
       
      CR0003137
      In-process deployment

      Example:
      * final static Dataprovider_1ConnectionFactory connectionfactory = new Dataprovider_1Deployment(
          new InProcessDeployment(
            CONNECTOR_URL,
            APPLICATION_URL,
            LOG_DEPLOYMENT_DETAIL ? System.out : null,
            System.err
          ),
          new Model_1Deployment(
            MODELS
          ), 
          JNDI_NAME  
        );

      CR0003154
      Simplify lightweight container launching
               
      Example:
      * final static Dataprovider_1ConnectionFactory connectionfactory = new Dataprovider_1Deployment(
          new RemoteDeployment(
            CONNECTOR_URL,
            APPLICATION_URL,
            LOG_DEPLOYMENT_DETAIL ? System.out : null,
            System.err
          ),
          new Model_1Deployment(
            MODELS
          ), 
          JNDI_NAME  
        );
      * The deployment is automatically destroyed, i.e. the sub-process
        terminated, when the last connection created by the factory is closed.
                               
2.    CHANGES
     
2.0.  CHANGED FEATURES

      CR0003127
      XmlExporter: allow to specify transitive export closure. 
      * referenceFilters: list of reference filters, e.g. 
        xri:@openmdx:../:*/account, xri:@openmdx:../account/:*/address 
      * attributeFilters: map of attribute filters. Key = reference filter, 
        value = Filter 

      CR0003154
      Simplify lightweight container launching
               
      The org.openmdx.kernel.application.process.Subprocess' constructor and
      fork method as well as the lightweight container's multi-argument fork
      method allow for two additional arguments:
      * outputStream 
        The stream obtains data piped from the standard output stream of the 
        process represented by this Subprocess object; or null to discard the         
        data.
      * exceptionStream 
        The stream obtains data piped from the error output stream of the 
        process represented by this Subprocess object; or null to discard the 
        data.
      
2.1.  FIXED BUGS
      
      CR0003172
      Dataprovider configuration logging fails  
      
      A dataprovider proxy in the lightweight container can't invoke its own 
      toString() method. 
      
      "toString()", "hashCode()" and "equals(Object)" invocations must not be 
      delegated to the EJB class but handled by the EJBObject instance.
      
      CR0003173 
      Lightweight Container can't process security configuration entries
      
      <method-permission> entries lead to an OutOfMemory Error.       
            
2.2.  DEPRECATED FEATURES

      CR0003154
      Simplify lightweight container launching
               
      The org.openmdx.kernel.application.process.Subprocess' constructor and
      fork method without output stream and exception stream argument are
      deprecated.
      
      CR0003137
      In-process deployment

      The classes org.openmdx.compatibility.base.application.cci.
      InProcessDataproviderConnectionFactory and org.openmdx.kernel.
      application.client.InProcessDeployment have been deprecated
      in favour of org.openmdx.compatibility.base.application.cci.
      Dataprovider_1Deplyoment and org.openmdx.base.application.deploy.
      InProcessDeployment.

2.3   REMOVED FEATURES
      none
     
                    
==============================================================================
Version 1.8.0                                                       2005-04-10
==============================================================================

1.    NEW FEATURES
      
      CR0003137
      In-process deployment
      
      Simplify in-process deployment by allowing static declaration of the 
      dataprovider connection factory.
      
      The applications and connectors should be lazyly deployed when a 
      dataprovider connection is requested.
      
      Example:
      * protected final static Dataprovider_1ConnectionFactory 
        dataproviderConnectionfactory = new 
        InProcessDataproviderConnectionFactory(
            new InProcessDeployment(
                "file:src/connector/openmdx-2/sql-server-2000.rar",
                "file:src/ear/junit-test.ear",
                System.out,
                System.err
            ),
            "org/openmdx/test/gateway1/NoOrNew"  
        );
      
      CR0000494 
      LightweightContainter Transactions
      
      The LightweightContainer does not support transaction handling.
      It can not play the role of an XA coordinator nor can it managage
      transaction aware resource managers. Applications deployed on the
      LightweightContainer are running in the auto-commit mode of the
      configured resource managers.
      
      The LightweightContainer should be extended as follows: 
      * Add a transaction manager. Provider support the configured
        transaction policies. 
      * Support XA and non-XA resource managers. This is important for
        client deployments where not all resource managers are XA
        compliant. 
      * Support of non-optimistic transactions for clients.
      
      The resource adapter configuration for Microsoft SQL Server 2000 for
      example could look that:      
      * ra.xml:
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE connector PUBLIC "-//Sun Microsystems, Inc.//DTD Connector 1.0//EN" "http://java.sun.com/dtd/connector_1_0.dtd">
        <connector>
        	<display-name>microsoft-sqlserver</display-name>
        	<description>openMDX/Test.Core Microsoft SQL Server Connector</description>
        	<vendor-name>OMEX AG</vendor-name>
        	<spec-version>1.0</spec-version>
        	<eis-type>JDBC</eis-type>
        	<version>2.0</version>
        	<resourceadapter>
        		<managedconnectionfactory-class>org.openmdx.kernel.application.container.spi.sql.ManagedDatabaseConnectionFactory</managedconnectionfactory-class>
        		<connectionfactory-interface>javax.sql.DataSource</connectionfactory-interface>
        		<connectionfactory-impl-class>org.openmdx.kernel.application.container.spi.sql.DatabaseConnectionFactory</connectionfactory-impl-class>
        		<connection-interface>java.sql.Connection</connection-interface>
        		<connection-impl-class>org.openmdx.kernel.application.container.spi.sql.DatabaseConnection</connection-impl-class>
        		<transaction-support>LocalTransaction</transaction-support>
        		<config-property>
        			<config-property-name>UserName</config-property-name>
        			<config-property-type>java.lang.String</config-property-type>
        			<config-property-value>dbUsername</config-property-value>
        		</config-property>
        		<config-property>
        			<config-property-name>Password</config-property-name>
        			<config-property-type>java.lang.String</config-property-type>
        			<config-property-value>dbPassword</config-property-value>
        		</config-property>
        		<config-property>
        			<config-property-name>ConnectionURL</config-property-name>
        			<config-property-type>java.lang.String</config-property-type>
        			<config-property-value>jdbc:microsoft:sqlserver://localhost:1433;databasename=openMDX_test;selectmethod=cursor</config-property-value>
        		</config-property>
        		<authentication-mechanism>
        			<authentication-mechanism-type>BasicPassword</authentication-mechanism-type>
        			<credential-interface>javax.resource.spi.security.PasswordCredential</credential-interface>
        		</authentication-mechanism>
        		<reauthentication-support>false</reauthentication-support>
        	</resourceadapter>
        </connector>
      * openmdx-connector.xml:
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE openmdx-connector PUBLIC "-//openMDX//DTD Connector Extension 1.0//EN" "xri:+resource/org/openmdx/kernel/application/deploy/openmdx-connector_1_0.dtd">
        <openmdx-connector>
        	<resourceadapter>
        		<connectionfactory-jndi-name>jdbc/dataproviders</connectionfactory-jndi-name>
        	</resourceadapter>
        </openmdx-connector>
              
      CR0003132
      Dynamic EJBLocalObject implementation classes  
      
      Use Proxy based EJBLocalObject implementation classes for the 
      lightweight container.        
      
      CR0003130
      ObjectInspectorServlet: multi-pane support for operations. All operations 
      are mapped to one operation pane. Allow to map operations customizable 
      operation panes. This allows to map operation panes to menus.
       
      CR0003126
      ObjectInspectorServlet: allow to pass filter criteria as operation 
      parameter. Allow to pass the stringified form of the current filter as 
      operation parameter field. The fully qualified name of the parameter 
      field is configurable. If an operation has an input parameter with the 
      configured field name the filter is set as field value before operation 
      invocation. 
      
      CR0003118
      ObjectInspectorServlet: allow to store default filter in settings. Add 
      the new filter 'Default' and the new operation 'Set as default'. This 
      allows to set a default filter per grid. The default filter settings 
      are stored in user user settings.

      CR0003116
      ObjectInspectorServlet: new option userHome. When specifying the option 
      userHome, the user settings are loaded/stored in the feature 'settings' 
      in Java property syntax.
      
      CR0003115
      ObjectInspectorServlet: support iconKey and ordering for user-defined 
      filters.
			<void property="iconKey">
				<string>ABC.gif</string>
			</void>			
			<void property="order">
				<array class="java.lang.Integer" length="1">
					<void index="0">
						<int>90</int>
					</void>
				</array>
			</void>
			
			CR0003114
			ObjectInspectorServlet: support ordering of class filters. Support 
			inspector ordering for class filters.
			
			CR0003113
			Ui_1: support ordering of inspectors.
			<org.openmdx.ui1.ElementDefinition name="org:openmdx:workshop1:TeamMember">
				<_object>
					<active>true</active>
					<toolTip>
						<_item>Contact Person</_item>
					</toolTip>
					<label>
						<_item>Contact</_item>
					</label>
					<iconKey>org:openmdx:workshop1:TeamMember</iconKey>
					<order>
						<_item>0</_item>
						<_item>0</_item>
						<_item>40</_item>
					</order>
				</_object>
				<_content/>
			</org.openmdx.ui1.ElementDefinition>
						      
      CR0003108
      Database_1: add dbObject slicedParentRidOnly.
      The 'slicedParentRidOnly' format of a DB_OBJECT contains an index-slice of 
		  an object in one row. The schema is: 
		  0 as object_rid, object_oid, p$$parent_object__rid, p$$parent_object__oid ... 
		  The sliced does not have values for the column object_rid. Instead, it provides 
		  rid and oid for the parent object. This format is useful when the calculation 
		  of the column object_rid is expensive compared to the calculation of the 
		  parent object rid|oid. 

      CR0003072
      ObjectInspectorServlet: support icon keys for code value entries. The
      servlet accepts the new optional feature iconKey for code value entries.
      Code attributes and cells in grids are rendered with the configured icon.
      
      CR0003071
      ObjectInspectorServlet: support for colored code value entries. The
      servlet accepts the new optional features color and backColor. Code
      attributes and grid rows are rendered with the specified colors. 
      
      CR0002292
      Ui_1: extend element definition by skipRow. For various layout configurations 
      it would be nice to have a "field-placeholder" available to better control 
      the layout rendering. For example, it is currently not possible to produce 
      a layout as follows (top cell of 2nd column empty):
      
			+-----+-----+ 
			| fld1|[empty]| 
			+-----+-----+ 
			| fld2| fld3| 
			+-----+-----+   
    
      CR0002851
      ObjectInspectorServlet: support for stated code value entries. The
      servlet accepts the new optional features validFrom and validTo
      for code value entries. Entries with current date outside
      [validFrom, validTo] are not shown in drop downs when editing objects.
      
      CR0003074 
      Enum Pattern for JRE < 1.5 
      
      Enumerations for JRE < 1.5 are sub-classes of 
      org.openmdx.uses.java.lang.Enum. They can't be used in switch 
      statements except when relying on their ordinal number, but 
      identity give the same result.
      
      Example:
      * public class AnEnumeration extends Enum {
          private AnEnumeration() {}
          public final static AnEnumeration X = new AnEnumeration();
          public final static AnEnumeration Y = new AnEnumeration();
          public final static AnEnumeration Z = new AnEnumeration();
          public static AnEnumeration[] values(){
            return (AnEnumeration[]) values(AnEnumeration.class);
          }
          public static AnEnumeration valueOf(String name){
            return (AnEnumeration) valueOf(AnEnumeration.class, name);
          }
        }
      * It is preferred to use
          if(a==AnEnumeration.X){
          } else if (a==AnEnumeration.Y){
          } else if (a==AnEnumeration.Z}
          }
        instead of
          switch(a.ordinal()){
            case 0: // AnEnumeration.X
            break;
            case 1: // AnEnumeration.Y
            break;
            case 2: // AnEnumeration.Z
            break;
          }
        emulating Java 5.0's 
          switch(a){
            case AnEnumeration.X: 
            break;
            case AnEnumeration.Y: 
            break;
            case AnEnumeration.Z: 
            break;
          }
	
      CR0003075
      Ui_1: maximum number of members of object container. Add atribute 
      maxMember to element definition. This restricts the number of elements 
      of an object container. 
      
      CR0003076
      Database_1: make REF entry caching and cache size configurable. The
      following  options are added:
      * enableReferenceCaching
      * referenceCacheSize

      CR0003057
      Ui_1/ObjectInspectorServlet: support for multiple reference panes.
      
                       
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003117
      ObjectInspectorServlet: replace option lastViewedObject by new option 
      accessHistory. Replace the options lastViewedObjectsReference, 
      lastViewedObjectsClass and lastViewedObjectsExclude by accessHistoryReference, 
      accessHistoryClass and accessHistoryExclude option, respectively.
      
      CR0000494 
      LightweightContainter Transactions
      
      The ExtendableUnitOfWork_1's constructor throws a ServiceException if a
      transactional non-optimistic unit of work lacks a user transaction. 
      
      The class itself has been made abstract and its constructor proteced as 
      its only purpose is the unit of work's extendability.
                  
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
            
      CR0003074
      Enum Pattern for JRE < 1.5
      
      Class org.openmdx.kernel.enumeration.ShortEnum deprecated in favour of
      org.openmdx.uses.java.lang.Enum or a Java 2 Stanadrd Edition 5.0 native 
      enum.
      
      CR0003132
      Dynamic EJBLocalObject implementation classes  
      
      The local-home-class attribute in the openMDX specific EJB deployment 
      descriptor has been deprecated and is ignored.

2.3   REMOVED FEATURES

      CR0003074
      Enum Pattern for JRE < 1.5
      
      Package org.openmdx.base.enumeration removed.

      CR0002386
      Kernel referring to Base
     
      Deprecated class org.openmdx.base.exception.BasicException removed.

     
==============================================================================
Version 1.7.1                                                       2005-03-18
==============================================================================

1.    NEW FEATURES
      
      CR0003052
      document1 truncates files in get operation
      
      Provide proxy RMI streams for proy ejb's such as gateways.
                       
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0003019
      Database_1: REF table access with all path components. Always include 
      empty (#) components.
      
      CR0002999
      Suspending Connection
      
      Add a connection which allows to suspend the current transaction and to 
      execute DataproviderRequests in no-or-new transaction mode.
      
      Its usage requires the following steps:
      * Configure RequiresNew_1Bean from
        org.openmdx.compatibility.application.dataprovider.transport.ejb.transaction
        as local EJB in the application containing EJBs liking to suspend the
        current transaction.
      * Refer to it as "ejb/dataproviderRequiresNew" in the EJBs liking to 
        suspend the current transaction.
      * Create a LateBindingWrappedConnection_1 to the final (local or remote) EJB 
        in the EJBs liking to suspend the current transaction.
      
      CR0003001
      Support SSL Setup
      
      Two HostnameVerifier implementations added to the 
      org.openmdx.base.net.ssl package except for the JRE 1.3 distribution:
      * AbstractHostnameVerifier
        Accepts for example a certificate with the common name "*.openmdx.org"
        to access "any-sub-domain.openmdx.org".
      * LenientHostnameVerifier
        Accepts for example a certificate with the common name "*.openmdx.org"
        to access "any.level.of.sub-domains.openmdx.org".

      CR0003008
      Database: (re)activate hints.
      
      
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.7.0                                                       2005-02-26
==============================================================================

1.    NEW FEATURES
      
      CR0002947
      Ui: allow to configure default values for operation input parameters.
      
      CR0002973
      ObjectInspectorServlet: Do not throw away user-entered data if commit 
      fails (e.g. new object, edit object). Currently, if a commit fails, all 
      the data (newly entered or changed by the user) is lost - it is annoying 
      to lose all the manual input just because (for example) 1 string was too 
      long...            
                       
      CR0002975
      Principal Chain Handler. Allow to configure how the principal chain 
      shall be modified based on the current security context. 
      
      The security init parameter may be
	    * null
	      the default value: trust peer and do not modify the principal chain
      * setPrincipalName
        clear the principal chain and add the principal's name
      * setPrincipalString
        clear the principal chain and add the principal's string 
        representation
      * addPrincipalName
        add the principal's name to the principal chain
      * addPrincipalString
        add the principal's string representation to the principal chain
      * Â‹executionContextModifierClassÂ›
        the fully qualified name of a class implementing org.openmdx.
        compatibility.base.dataprovider.cci.ExecutionContextModifier_1_0.
	
      CR0002911 
      http/https based dataprovider transport      
      The server resepctivel client side implementations are:
	    * org.openmdx.compatibility.application.dataprovider.transport.http.to.
	      ejb.Dataprovider_1Servlet 
	    * org.openmdx.compatibility.application.dataprovider.transport.http.
	      lightweight.Dataprovider_1HttpConnectionFactory 	
	  
	    Note:
	    Neither of them support attributes with stereotype <<stream>> yet!
			
      CR0002961
      Ui: add isPassword property to TextBox. This allows to configure 
      password text fields.
      
      CR0002931
      Database_1: improve support for updatable user-defined db objects.
      Currently only possible, if user-defined db object has columns for oid, 
      rid, idx, object_class, etc.
      
      CR0002916
      Ui: support AdditionalElementDefinition for operations.
      
      CR0002915
      Ui: allow definition of DocumentBox.mimeType.
      
      CR0002893
      ObjectInspectorServlet: allow to customize mime type specific rendering.
      
      CR0002946
      add delete operation to XMLImporter 
      
      The operation "remove" deletes an object.
      
      CR0002958 & CR0002983
      RETRIEVAL_SIZE application layer configuration value
      
      "APPLICATION/retrievalSize" defines how many objects (including 
      referenced ones) may be returned during an object retrieval operation.
      
      Default value: 1
      
                       
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0002941
      ObjectInspectorServlet: ui and code data is loaded sorted by their
      file names.
      
      CR0002945
      Database_1: change attribute name to column name mapping in case of digits.
      Underscores in column names are mapped to uppercase letter in attribute name, 
      e.g. <prefix>_c<suffix> ==> <prefix>C<suffix>. The uppercase mapping should 
      not be applied in case a digit follows the underscore, e.g. <prefix>_d<suffix> 
      ==> <prefix>_d<suffix>.
      
      CR0002929
      XmlExporter: improve extension support, e.g. in terms of attribute 
      tagging, subclassing, delegation.
      
2.1.  FIXED BUGS
      
      CR000292
      JMI stream setters      
      Overriden JMI stream setters are not invoked. 
            
      CR0002984
      Database_1: empty REF entries. get/find requests produce empty REF cache 
      entries in case the REF entry does not exist on the database. If a second 
      database instance creates a new REF entry on the database, the empty cache 
      entry is not updated in the first instance.                  
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.6.2                                                       2005-01-15
==============================================================================

1.    NEW FEATURES
      
      CR0002904
      Database_1: add DB/2 support.
      
      CR0002900
      Database_1: string replacement macros.
      Add support for string replacement macros: stringMacroName[i], 
      stringMacroValue[i], stringMacroColumn[i].
      
      CR0002897
      Dependency Aware Explorer
      
      The Dependency Aware Explorer is used by replacing 
      org.openmdx.compatibility.runtime1.layer.application.Explorer_1 by
      DependencyAwareExplorer_1 in openMDX' gateway configuration.
      
      It tries to resolve the folowing oject request dependencies:
      * Requests creating an object have to be executed before requests
        referring to it
      * Requests removing an object have to be executed after requests
        referring to it

      It takes the following steps:
      1. Try to bundle all dataprovider requests belonging to the same exposed 
         path and to resolve the dependencies between these bundles and execute
         the bundles in the resulting order unless there are cycles.
      2. Try to resolve the dependencies between the individual dataprovider 
         requesst step 1 leads to cycles and execure the dataprovider requests
         in the resulting order unless there are cycles by bundling all 
         consecutive requests belonging to the same exposed path.
      3. Execute all dataprovider requests in the original order if step 2 leads
         to cycles by bundling all consecutive requests belonging to the same 
         exposed path. 
                 
      CR0002818
      Qualifier Options
      
      The plugins should offer different possibilities to create qualifiers 
      when they are unspecified upon object creation:
      1. UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (the default) 
      2. UID: uuuuuuuuuuuuuuuuuuuuuu 
      3. SEQUENCE: 0 .. 999999999999999999 
      4. URN: (urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx) 
      Where
      x stands for [0-9a-f] 
      u stands for [0-9A-Fa-f+\-] 

      A SEQUENCE's range is
      * SEQUENCE.MIN_VALUE = 0 
      * SEQUENCE.MAX_VALUE = 10^18-1 
      When a new object is created then the SEQUENCE's current value is
      * unchanged if the qualifier contains any other character than the 
        digits 0 to 9 or if its value is outside the SEQUENCE's range 
      * set to Long.parseLong(qualifier)+1 otherwise
      
      To get a new UID for example: 
        UUIDGenerator uuidGenerator = UUIDs.getGenerator();
        String uid = UUIDConversion.toUID(uuidGenerator.next());
      For classes extending Layer_1 there is a convenience method 
        uidAsString()
      which returns
      * a UUID unless APPLICATION/compressUID is on 
      * a UID if APPLICATION/compressUID is on 
      
      The plugins create the following default qualifiers depending on their 
      configuration:
      * UUID as default 
      * UID if APPLICATION/compressUID is on 
      * SEQUENCE if APPLICATION/sequenceSupported and 
        PERSISTENCE/sequenceSupported is on 
      * URN if SEQUENCE access fails 
      
      
2.    CHANGES
     
2.0.  CHANGED FEATURES
      none
      
2.1.  FIXED BUGS
      
      CR0002855
      Database_1: Database_1. GenericDbObject uses AbstractDatabase_1.
      setPreparedStatementValue().
      
      CR0002898
      Database_1: fix PostgreSQL support.
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.6.1                                                       2005-01-09
==============================================================================

1.    NEW FEATURES
      
      CR0002862
      ObjectInspectorServlet: new option lastViewedObjectsExlude[i] allows
      to exclude configured objects from last viewed objects list.
      
      CR0002887
      Qualifier placeholder replacement  
      
      Allow to configure by what qualifier palceholders are replaced:
      * UUID
        Flag APPLICATION/compressUID is off (default)
      * UID 
        Flag APPLICATION/compressUID is on
        
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0002869
      Database_1: # as null character for REF table columns.
      
2.1.  FIXED BUGS

      CR0002814
      ObjectInspectorServlet: GUI is not properly updated after the
      execution of an operation.
      
      CR0002872
      ObjectInspectorServlet: session memory is not released.
      
      CR0002864 & SF1094893
      openMDX/Ant installation required  
      
      In order to build any other openMDX 1.6.0 subproject one has 
      1. to install openmdx-1.6.0-ant 
      2. to call "ant install-src" in the ant subproject 
      
2.2.  DEPRECATED FEATURES
      none
            
2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.6.0                                                       2005-01-01
==============================================================================

1.    NEW FEATURES

      CR0002826
      Database_1: c$ columns in _REF table NOT NULLABLE. The c$ columns must
      be defined as NOT NULL. Unused component columns are filled with blanks.
      This allows to set a unique constraint on the columns c$0..c$n. 
      
      IMPORTANT: existing REF tables must be migrated:
      1) UPDATE ..._REF SET c$i = '' WHERE c$i IS NULL
      2) define c$i as NOT NULL
      
      The new configuration option maxReferenceComponents defines the number
      of c$i columns in a REF table which is managed by Database_1. Default
      value is 16.
      
      CR0002856
      Database_1. minimize REF table access. Two-way LRU reference cache 
      with size 10'000 added.
            
      CR0002777
      ObjectInspectorServlet: New calendar control 
      (http://sourceforge.net/projects/jscalendar/) added and dropped the 
      existing popup-calendar.
      
      CR0002628
      ObjectInspectorServlet: user defined date fields require date + time input.
      Fields of date are now supported.

      CR0002813
      Database_1: optimize column size for references. 
      Path values are stored by default in the path.toUri() format. The 
      path macros allow to modify path values before they are stored. 
      E.g. a path of the form 
      xri:@openmdx:org.openmdx.test.app1/provider/Sliced/segment/Standard/...
      can be modified to be stored as xri:*app1.Sliced.Standard/... with
      a macro pathMacroName[i] = app1.Sliced.Standard and pathMacroValue[i] =
      xri:@openmdx:org.openmdx.test.app1/provider/Sliced/segment/Standard. 
      This feature can be used e.g. for path compression and therefore to 
      save space on database tables.
      
      CR0002730
      JMI: get(), set() operations for streams  
      The get() operations for attribute of stereotype stream should follow the following pattern:
      * long getX(Writer, long); // for character data 
      * long getX(OutputStream, long); // for binary data  
      The set() operations for attribute of stereotype stream should follow the following pattern:
      * void setX(Reader, long); // for character data 
      * void setX(InputStream, long); // for binary data  
      
      CR0002815
      StringExpression 
      
      Add a string expression pattern factory in addition to the existsing SQL 
      and regular expression pattern factories.  
      
      CR0002770 & CR0002824 
      UUID conversion
      
      There is a request to represent a UUID in another form than in its 
      standard string representation xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, 
      where each x stands for a hexadecimal digit.
      
      The preferred compact representation would be a BASE64 encoding of its 
      byte[16] representation except for all '/' being replaced by '-' and the 
      two trailing '=' removed. This would reduce its size from the string 
      representations 36 to 22 ASCII characters.
      
      The preferred URN representation follows 
      http://www.ietf.org/internet-drafts/draft-mealling-uuid-urn-04.txt. 
      
      Examples:
      * UUID:   00000000-0000-0000-0000-000000000000
        URN:    urn:uuid:00000000-0000-0000-0000-000000000000
        UID:    AAAAAAAAAAAAAAAAAAAAAA
        Base64: AAAAAAAAAAAAAAAAAAAAAA==
      * UUID:   49b8c970-1a23-42a7-a094-202b746524f9
        URN:    urn:uuid:49b8c970-1a23-42a7-a094-202b746524f9
        UID:    SbjJcBojQqeglCArdGUk+Q
        Base64: SbjJcBojQqeglCArdGUk+Q==
      * UUID:   5bf95a70-538e-11d9-badc-5f1b0a0101b4
        URN:    urn:uuid:5bf95a70-538e-11d9-badc-5f1b0a0101b4
        UID:    W-lacFOOEdm63F8bCgEBtA
        Base64: W/lacFOOEdm63F8bCgEBtA== 
        
2.    CHANGES
     
2.0.  CHANGED FEATURES
      
      CR0002825
      Database_1: remove non-prepared SQL statements.
      
      CR0002816
      Allow *** in an XRI
      
      There are three terminal wildcards:
      1. one asterisk for the remainder of the sub-segment ("*")
      2. two asterisks for the remainder of the semgent ("**")
      3. three asterisks for the remainder of the XRI ("***")
      
      Examples:
      * Paths:
            "A::B/provider/::*/segment/%"
            "A::B/provider/::org*/segment/org%"         
            "::*/provider/::org::*/segment/org::%"         
      * spice URIs: 
            "spice://A:B/provider/:*/segment/%"
            "spice://A:B/provider/:org*/segment/org%"
            "spice://:*/provider/:org:*/segment/org:%"
      * XRIs: 
            "xri:@openmdx:A.B/provider/**/segment/***"
            "xri:@openmdx:A.B/provider/org**/segment/org***"
            "xri:@openmdx:**/provider/org:**/segment/org:***"
            
      CR0002770 & CR0002824 
      UUID
      
      The UUID interface has changed from the Java 1.5 beta template
      to the JavaTM 2 Platform Standard Edition 5.0 template.
      
2.1.  FIXED BUGS
      
      CR0002852
      Database_1: NullPointer in identity filter.
      
      CR0002837 [ 1040749 ] 
      ObjectInspectorServlet: Bug with date format.
      When trying to set a date in the user defined field Date0, I get the 
      following exception : 
			  java.lang.IllegalArgumentException: Cannot format given Object as a Date
			  java.text.DateFormat.format(DateFormat.java:279)
			  java.text.Format.format(Format.java:133)
			  org.openmdx.application.gui.generic.servlet.attribute.DateValue.getValue(DateValue.java:106)
			
      CR0002841
      ObjectInspectorServlet: Corrupt views  
      Views and the contained ui elements are corrupt in the following cases: 
      * session serialize/deserialize --> views are not stored in session anymore. 
        They are managed as servlet members 
      * multiple servlet instances remove elements in ui provider --> NOT_FOUND --> 
        each servlet stores ui element in own segment. Each servlet remembers list 
        of asserted inspectors.  

      CR0002823
      Broken Link
      
      Accessing a broken link in a reference throws a NOT_FOUND exception the 
      first time it is invoked and a NOT_AVAILABLE exception later on.  
      
      Accessing a broken link in a reference should always 
      * throw a NOT_FOUND exception in openMDX 1 for compatibility reasons
      * throw a NOT_AVAILABLE exception from openMDX 2 on
      
      CR0002829
      jmiObject.removeX() behaviour
      
      The sequence
        segment.removeX(qualifier); 
        //... 
        segment.addX(qualifier, x); 
      failed with a DUPLICATE exception.
      
      CR0002860
      core/ant dependency 
      
      Add a dependency rule to openMDX/Core's build file. 
      
2.2.  DEPRECATED FEATURES

      CR0002816
      Deprecated XRI segments
       
      ":*" and "%" segments must be replaced by "**" respectively
      "***" in XRIs because
      1. ":*" will represent a single non-reassignable sub-segment in future
      2. "%" is used as escape character iand be followed by two hexadecimal 
          digits.
      That's why "new Path(String)" can accept the deprecated segment values 
      for a limited time only!
            
      Examples:
      * Path:
            new Path("xri:@openmdx:*/provider/:*/segment/%")
            representing "::*/provider/::*/segment/%"
      * spice URI: 
            "spice://A:B/provider/:*/segment/%"
      * XRI: 
            "xri:@openmdx:**/provider/**/segment/***"
            
2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.5.3                                                       2004-12-14
==============================================================================

1.    NEW FEATURES

      CR0002798
      LogEntityReader: allow streaming of log events to ObjectOutputStream.
      
      CR0002756
      ObjectInspectorServlet: improve rendering of pages for right-to-left 
      languages (rtl).
      
      CR0002503 
      Application Client Deployment.
      The lightweight container should support application clients according to 
      the J2EE specification (http://java.sun.com/j2ee/1.3/download.html#platformspec, 
      Chapter J2EE.9).
      
      CR0002774
      ObjectInspectorServer: [edit newly created object] in addition to 
      [view newly created object].
      
      CR0002693
      ObjectInspectorServlet: pass language selection from login page to 
      application. 
      
      CR0002421
      Context-sensitive code tables. 
      ObjectInspectorServlet: the names of code value containers can be of
      the following format:
      - fully qualified attribute name 
      - [NEW] <fully qualified name of composite reference type>:<attribute name>, 
        i.e. code tables can be defined for a type hierarchy.
      
2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002784       
      Replace moduleID by moduleURI. The openMDX deployment configuration parser relies 
      on its module ids (the module URIs last component) being unique.

2.1.  FIXED BUGS

      CR0002802
      ObjectInspectorServlet: Add option initPrincipal. initPrincipal allows to 
      configure a principal which is used during init for loading codes and data.
      
      CR0002800
      ObjectInspectorServlet: OK and CANCEL or not language-specific.
      
      CR0002599
      ObjectInspectorServlet: pages which are used in different contexts must prefix 
      elements with request.getContextPath(), e.g. Login.jsp.
      
      CR0002698
      ObjectInspectorServlet: fix copy/paste of object references from one browser
      window to another.
      
      CR0002737
      ObjectInspectorServlet: Lookup values corrupt when reusing input parameters.
      
      CR0002752
      ObjectInspectorServlet: improve cookie handling in Login.jsp.
      
      CR0002743
      Filtering date or dateTime fields throws class cast exception.
       
      CR0002759 
      ObjectInspectorServlet: Invalid XRI in web.xml template.
      A path like 'A::B/provider/${PROVIDER}/segment/${SEGMENT}' can't be expressed 
      as 'xri:@openmdx:A.B/provider/${PROVIDER}/segment/${BSEGMENT}' because '{' and '}' 
      are not allowed in an XRI segment.
      
      CR0002739 & SF1031875
      ObjectView_1 and unit of work life span
      
      ObjectView_1 should support 'unit of work life span'

      CR0001276
      URN schema
      
      According to the IETFs directions (dropping of non-IETF trees, no 
      hierarchical URNs yet) we are going to concentrate on OASIS' XRI 
      specification:
      1. Paths: used in compatibility mode only 
      2. spice URIs: current database representation 
      3. XRIs: openMDX standard run-time and external representation 
      4. XRI derived IRIs: the preferred future database representation 
      5. XRI derived URIs: the future fallback database representation for 
         Unicode incapable databases 

      Consequences
      * Support for the "vnd-openmdx-iri" protocol has been discontinued 
      * The "spice" protocol will be deprecated with openMDX 2. 
      
      Examples
	  1.    "" 
			"::*" 
			"A::B" 
			"A::B/::*" 
			"A::B/Fran\u00e7ois"  
			"A::B/provider/P::Q/segment/S.T/object/RR_1;state=0" 
			"A::B/provider/P::Q/segment/S.T/object/012345;transient" 
			"A::B/(xri::@openmdx::B.B0//B1)/C" 
			"A::B/(xri::@openmdx::B//B0%3AB1)/C" 
			"A::B/provider/${PROVIDER}/segment/${SEGMENT}" 
			"A::B/provider/::*/segment/%" 
			
			
	  2.	"spice:/" 
			"spice://:*" 
			"spice://A:B" 
			"spice://A:B/:*" 
			"spice://A:B/Fran%c3%a7ois" 
			"spice://A:B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"spice://A:B/provider/P:Q/segment/S.T/object/012345;transient" 
			"spice://A:B/(xri:@openmdx:B.B0%2fB1)/C" 
			"spice://A:B/(xri:@openmdx:B%2fB0%253AB1)/C" 
			"spice://A:B/provider/$%7bPROVIDER%7d/segment/$%7bSEGMENT%7d" 
			"spice://A:B/provider/:*/segment/%" 
		
	   3.	"xri:@openmdx" 
			"xri:@openmdx:*" 
			"xri:@openmdx:A.B" 
			"xri:@openmdx:A.B/:*" 
			"xri:@openmdx:A.B/Fran\u00e7ois" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/012345;transient 
			"xri:@openmdx:A.B/(xri:@openmdx:B.B0/B1)/C" 
			"xri:@openmdx:A.B/(xri:@openmdx:B/B0%3AB1)/C" 
			"xri:@openmdx:A.B/provider/$%7BPROVIDER%7D/segment/$%7BSEGMENT%7D" 
			"xri:@openmdx:A.B/provider/:*/segment/:**" 
			"xri:@openmdx:A.B/(xri:@openmdx:B/B0%3AB1)/C" 
			"xri:(ejb/e.jar)" 
			"xri:(../../somewhere/else/e.jar)" 
			
			
	   4.	"xri:@openmdx" 
			"xri:@openmdx:*" 
			"xri:@openmdx:A.B" 
			"xri:@openmdx:A.B/:*" 
			"xri:@openmdx:A.B/Fran\u00e7ois" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/012345;transient" 
			"xri:@openmdx:A.B/(xri:@openmdx:B.B0%2FB1)/C" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:@openmdx:A.B/provider/$%257BPROVIDER%257D/segment/$%257BSEGMENT%257D" 
			"xri:@openmdx:A.B/provider/:*/segment/:**" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:(ejb%2Fe.jar)" 
			"xri:(..%2F..%2Fsomewhere%2Felse%2Fe.jar)" 
			
			
	   5.	"xri:@openmdx" 
			"xri:@openmdx:*" 
			"xri:@openmdx:A.B" 
			"xri:@openmdx:A.B/:*" 
			"xri:@openmdx:A.B/Fran%C3%A7ois" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/RR_1;state=0" 
			"xri:@openmdx:A.B/provider/P:Q/segment/S.T/object/012345;transient" 
			"xri:@openmdx:A.B/(xri:@openmdx:B.B0%2FB1)/C" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:@openmdx:A.B/provider/$%257BPROVIDER%257D/segment/$%257BSEGMENT%257D" 
			"xri:@openmdx:A.B/provider/:*/segment/:**" 
			"xri:@openmdx:A.B/(xri:@openmdx:B%2FB0%253AB1)/C" 
			"xri:(ejb%2Fe.jar)" 
			"xri:(..%2F..%2Fsomewhere%2Felse%2Fe.jar)" 
               
      Note:

2.2.  DEPRECATED FEATURES

      CR0001276
      URN schema

      Illegal XRIs such as "xri:@openmdx:A.B/provider/:*/segment/%" should be 
      replaced as soon as possible.

2.3   REMOVED FEATURES
      none

 
==============================================================================
Version 1.5.2                                                       2004-11-05
==============================================================================

1.    NEW FEATURES

      CR0002643 
      synchronized access to data source 
      
      For IBM WebSphere Application Server use org.openmdx.compatibility.
      application.dataprovider.transport.ejb.websphere.Dataprovider_1Bean 
      instead of org.openmdx.compatibility.application.dataprovider.transport.
      ejb.server.Dataprovider_1Bean, which is located in the 
      openmdx-application.websphere.jar. 
      
      CR0002673
      ObjectInspectorServlet:: support for user-defined exceptions. User-defined
      exception domain can be configured in web.xml.
      
      CR0002697
      Database_1: support java.sql.Clob.
      
      CR0002684
      "enhancement" for filterable. Ui element definitions for inspectors
      now accept the option 'filterable' which allows to customize the
      class filters.
      
      CR0002516 
      Re-connection support in LightweightContainer
      
      Its now pssible to stop and restart the LightweightContainer whithout
      need to restart for example a Tomcat instance connecting to the
      LightweightContainer.
      
      CR0002689 
      DatagramPacketFormatter  

      Add a datagram packet formatter to org.openmdx.kernel.text.format.  
      
      CR0002673
      ObjectInspectorServlet:: support for user-defined exceptions.
      
      CR0002554
      ObjectInspectorServlet: successful create/new operation should return 
      URL of created object.
      
      CR0002653
      ObjectInspectorServlet: add loadData option. Data is only loaded when 
      option loadData=true. 
      
      CR0002652
      ObjectInspectorServlet: nested grid tabs (e.g. fly-out or expand for 
      nested levels).
      
      CR0002626
      ObjectInspectorServlet: improved 'forward-scrolling' in Grid.
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002514 & SF1009767
      Platforms included in 'ant all'  
      
      "ant all" should be restricted to the platforms included in the 
      distribution.  

      Each platform configuration is able to set the build.exclude.platform
      property in order to exclude istelf from the build process due to the
      lack of some prerequisites.
      
      CR0002706
      ApplicationController  
      
      The ApplicationController should not refer to org.openmdx.application 
      classes as it belongs to the openmdx-base.jar.  
      
      Rely on inheritance instead of configuring AppLog directly.  
                
2.1.  FIXED BUGS
      
      CR0002672
      ObjectInspectorServlet:: session is not serializable.
      
      SF1036210
      XMISchemaWriter: optimize XMISchemaWriter.spaces().
      
      SF1036211
      AttributeValue: use method overriding.

      CR0002671 
      ant clean not complete  
      
      Ant clean leaves out the platform specific deliverables.  
            
      CR0002651
      ShowObject.jsp: fix img tags.
      
      CR0002640
      Erroneous XMLGregorianCalendar implementation
      
      To correct the prolem we had to shift from the Java 2 Standard Edition
      1.5.0 Beta API to the Java 2 Standard Edition 1.5.0 API, i.e.
      XMLGregorianCalendar and Duration are now abstract classes to be created
      by a DatatypeFactory instance!
      
      CR0002635
      Database_1: remove() does not remove all contained objects.
      
      CR0002634
      RefObject_1 ignores compatibility option throwNotFoundIfNull. If 
      throwNotFoundIfNull is set to true, RefObject_1 does not throw NOT_FOUND 
      as expected. 
      
      CR0002630
      ImportXml

      org.openmdx.compatibility.base.dataprovider.replication.ImportXml must
      create a (deprecated) LightweightContainer_1 instance in order to have
      access to the dataproviders configured in deployment configuration XML
      files.
      
      CR0002633
      MatchResult implementation  
      
      MatchResult.groupCount() 
      * was incorrect up to 1.5.0, i.e. returned 'groupCount + 1' 
      * is correct for JRE 1.4 from 1.5.1 on 
      * should be corrected for JRE 1.3 as well 

      StandardDbObject relies on the erroneous behaviour and has to e adapted 
      together with all foreign classes using MatchResult.groupCount()!
      
      CR0002645 
      j2ee-apis
      
      Avoid unnecessary rebuilds 
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      
      CR0002716
      ShiftOne usage  
      
      Remove the ShiftOne classes from the distribution as they are not going 
      to be used by the openMDX framework .
      

==============================================================================
Version 1.5.1                                                       2004-10-05
==============================================================================

1.    NEW FEATURES

      CR0002624
      DelegatingObjectFactory  
      
      Replace the 
      org.openmdx.kernel.naming.tomcat.LightweightContainerLookupFactory by 
      the more general 
      org.openmdx.kernel.naming.tomcat.DelegatingObjectFactory. 
      
      The delegating object factory's configuration values are "remoteName" 
      (to be used to lookup the object in the delegate initial context) and 
      any JNDI context properties, e.g.
      * jndiName="org/openmdx/gateway/NoOrNew" 
      * java.naming.provider.url="//localhost:19523/org.openmdx.rmi.naming" 
      * java.naming.factory.initial=
        "org.openmdx.kernel.naming.initial.ContextFactory"  
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002432
      Regular Expression Engine  

      The jre-1.4 editon should use the JRE's regular expression engine.

      This would replace the org.openmdx.uses.org.apache.regexp package. 

                
2.1.  FIXED BUGS
      
      CR0002511
      Mis-coded characters 

      Non-ASCII characters hsould be escaped as the source files are stored
      with ISO-Latin-1 encoding.

      The following characters have been replaced by their unicode escapes:
      * '\u00ab' 
      * '\u00bb'

2.2.  DEPRECATED FEATURES

      CR0002624
      DelegatingObjectFactory  
      
      Replace the 
      org.openmdx.kernel.naming.tomcat.LightweightContainerLookupFactory by 
      the more general 
      org.openmdx.kernel.naming.tomcat.DelegatingObjectFactory. 

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.5.0                                                       2004-09-26
==============================================================================

1.    NEW FEATURES
      none
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                
2.1.  FIXED BUGS
      
      CR0002611
      Ui_1: active=true override not possible in subclass. if an element 
      definition is set to active=false in a class X it can not be set to 
      active=true in class Y, if Y is subclass of X.
       
      CR0002607
      ObjectInspectorServlet: classes without customized icon cannot be opened 
      from grid.
      
      CR0002606
      ObjectInspectorServlet: changeable=false should hide 'create Object' 
      button.
      
      CR0002603
      ObjectInspectorServlet: ui refresh not working. Automatic ui refreshing 
      works again.

      CR0002608
      Unclear Error Message
      
      org.openmdx.compatibility.base.application.j2ee.SessionBean_1 tried to 
      load the org.openmdx.compatibility.base.application.cci.Application 
      class from the system class path while it is to be found in the 
      openmdx-base.jar.  
   
      The deprecated org.openmdx.compatibility.base.application.cci.Application 
      class is no longer loaded by 
      org.openmdx.compatibility.base.application.j2ee.SessionBean_1.  
      
      CR0002604
      NotSerializableException: 
      org.openmdx.compatibility.base.dataprovider.transport.rmi.RMIMapper 
      
      happens e.g. during JBoss shutdown.
      
      CR0002542
      MarshallingSet behaves like a Collection
      
      MarshallingSet implements Set but behaves like a Collection.
      
      Now the marshalling set's add operation tests the containment before
      delegating to a Collection's add method unless the collection is itself
      a Set.      
      
2.2.  DEPRECATED FEATURES

      CR0002399
      Application Context Replacement 
      
      ApplicationServerManager_1 and WlsManager_1 have been deprecated.

2.3   REMOVED FEATURES

      CR0002432
      Regular Expression Engine  

      The jre-1.4 editon uses the JRE's regular expression engine.

      The org.openmdx.uses.org.apache.regexp package has been removed from 
      the jre-1.4 edition.



==============================================================================
Version 1.4.3                                                       2004-09-20
==============================================================================

1.    NEW FEATURES
      
      CR0002431
      StackTrace API. The jre-1.4 edition uses the JRE's stack trace api.
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.4.2                                                       2004-09-17
==============================================================================

1.    NEW FEATURES
      
      CR0002574
      ObjectInspectorServlet: support for option loadCodes. Codes are verified 
      each time on servlet startup. loadCodes=false should allow to skip 
      loading.
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002431 
      StackTrace API

      The jre-1.4 edition should use the JRE's stack trace api.
                
2.1.  FIXED BUGS
      
      CR0002577
      ClassCast exception in RefObject_1. Velocity template fixed which produces 
      refGetValue() with wrong signature.
      
      CR0002596
      ObjectInspectorServlet: remove trailing empty strings for loaded codes.
      Oracle maps empty strings to NULL values. When using Oracle, the 
      Database_1 plugin reports errors for replace requests with objects having 
      trailing string values with length zero.
       
      CR0002572
      UTF-8: can not get objects with n-byte char in qualifier.
      
      CR0002570
      Database_1: Complex check in abstract_database_1 is not case sensitive.

      CR0002573
      ObjectInspectorServlet: remove static members. Some static members 
      prevent deployment of multiple applications.
      
      CR0001950 
      Find Request with duplicate entries in the result
      
      This bug can be reproduced in plugins using JMI based delegation.
      
      CR0002553
      Logger displays wrong Class, Method and Line
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.4.1                                                       2004-08-31
==============================================================================

1.    NEW FEATURES
      
      CR0002536
      UTF-8 support for ObjectInspectorServlet.
      
      CR0002167
      Database_1: support Firebird 1.5+. Sub-Selects of the form SELECT * FROM
      (SELECT ...) are eliminated for sliced db object types. The format generic
      is NOT supported. The filter SOUNDS_LIKE is NOT supported.

      CR0002167
      Database_1: support PostgreSQL 7.2+. All plugin features are supported.

      CR0002549
      Additional getCause() method
      
      Extend BasicException.Wrapper by a new getCause(String) method.
      
      /** 
       * Returns the cause belonging to a specific exception domain. 
       * 
       * @param exceptionDomain the desired exception domain, 
       * or <code>null</code> to retrieve the initial cause. 
       * 
       * @return either the cause belonging to a specific exception domain or 
       * the initial cause if <code>exceptionDomain</code> is 
       * <code>null</code>. 
       */ 
       public BasicException getCause( 
           String exceptionDomain
       ); 
 
2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002526
      GridControl: change default operator for strings from SOUNDS_LIKE 
      to IS_LIKE.
      
      CR0002538
      Add locale fallback to ObjectInspectorServlet. Add locale fallback based 
      on language instead of fully qualified locale string. The fallback
      algorithm works as follows:
      - Iterate all locales configured in web.xml starting from 0, i.e.
        locale[0], locale[1], ..
      - Try to load resources from locale i, i.e. config/code/<locale i>,
        config/ui/<locale i>, config/texts/<locale i>. 
      - If no resources are found at locale i fallback to resources of 
        locale j, where j = max(J), J = {0} + {j, locale[i].lang == locale[j].lang}.
      If e.g. the locales en_US, de_CH and de_DE are configured and no resources
      are available for de_DE then de_DE falls back to de_CH.

          
2.1.  FIXED BUGS
      
      CR0002520
      Exception while Xml-Importing. _operation="update" is now handled
      correctly: the object is now stored with correct digest.
      
      CR0002547 [ 1018266 ]
      XMIExporter throws NullPointer for top-level classes. A NullPointer is 
      thrown for non-scoped classes, i.e. is located top-level. Non-scoped 
      classes are not supported by openMDX --> throw NOT_SUPPORTED exception 
      instead.
      
      CR0002543
      ObjectInspectorServlet: modify field defined as AlternateElementDefinition 
      not possible.
      
      CR0002519
      AttributeValue.getValue() throws NullPointer.
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.4.0                                                       2004-08-18
==============================================================================

1.    NEW FEATURES
      
      CR0002167
      Database_1: support PostgreSQL.
      
      CR0002478
      prepare target  
      
      An Ant "prepare" target should be added to unify the usage of source and 
      binary distributions.  
      
      The target should do the following:
      * Do nothing in case of a binary distribution 
      * Delegate to "install-bin" in case of a generic distribution 
      * Delegate to "deliverables" in case of a source distribution 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002518  
      Java2 Project  
      
      Put Enterprise Edition and Extension Libraries into a separate project.  
      
      The libraries will be moved from core/thirdparty to java2.  

      CR0002477 
      [ 1002026 ] XmlImporter  
      
      This class does not properly handle Whitespace in XML:      
      * This XML fails: 
        <deploymentOrder> 
          1002 
        </deploymentOrder> 
      * This XML works: 
        <deploymentOrder>1002</deploymentOrder> 
        
      The XML Importer is going to trim the input data for all types 
      except org::w3c::string 

          
2.1.  FIXED BUGS
      
      CR0002491
      XmlImporter: wrong set/create semantics when target is Map.
      XmlImporter currently implements remove/create behaviour ignoring the 
      user-defined _operation=".." setting. 

      CR0002441
      Database_1: type configuration does not support non-wildcard object ids.
      Database_1.getTypeConfigurationEntry() now uses path.isLike() method.
      
      CR0002385
      Bug fixed in multiplicity handling in Model.verifyObject().

      CR0002513
      NullPointerException when deploying a ejb to Wls 8
      
      You should be able to
      * leave out 
        -Dorg.openmdx.compatibility.base.application.cci.Application.register=
        <startup-class> unless you rely on a deployment configuration XML file 
      * rely upon -Dweblogic.Name=<server-name>
      * define -Dorg.openmdx.compatibility.base.application.j2ee.domain=
        <domain-name>
         
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none


==============================================================================
Version 1.3.6                                                       2004-08-01
==============================================================================

1.    NEW FEATURES
      none

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
                  
2.1.  FIXED BUGS
      
      CR0002441
      Database_1: type configuration does not support non-wildcard object ids.
      Database_1.getTypeConfigurationEntry() now uses path.isLike() method.
      
      CR0002385
      Bug fixed in multiplicity handling in Model.verifyObject().
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.5                                                       2004-07-16
==============================================================================

1.    NEW FEATURES

      CR0002395
      MultiLineStringRepresentation marker interface 
      
      Objects with a toString() method returning a multi-line string 
      representation of themselves should implement the 
      MultiLineStringRepresentation marker interface.
      
      CR0002359
      JRE 1.4 support
      
      Alpha release of the jre-1.4 platform support.
            
      CR0002422
      Multi-Edition support
      
      The new mandatory project.platform.list (e.g. "jre-1.4/jre-1.3")
      which to which values build.target.platform will be set (in the
      given order) by an "ant all" command. The values are separated 
      by a slash character ('/'). The last value is the default for
      all ant targets except "all".


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002396
      ResourceAdapterDocorator Properties  

      Use the resource 
      org/openmdx/kernel/application/deploy/jdbc-driver-url.properties to 
      define the well-known URL/Driver mappings.
      
      Its current entries are:
      * com.microsoft.jdbc.sqlserver.SQLServerDriver jdbc:microsoft:sqlserver:
      * weblogic.jdbc.mssqlserver4.Driver            jdbc:weblogic:mssqlserver4:
      * oracle.jdbc.driver.OracleDriver              jdbc:oracle:
      * com.sap.dbtech.jdbc.DriverSapDB              jdbc:sapdb:

      CR0002422
      Multi-Edition support
      
      An additional  platform directory (e.g. jre-1.4, jboss-3, ...) has been  
      introduced where necessary.

      CR0002423 
      Velocity Log System  

      Tell the velocity engine to use the openMDX Log System.  
      
      CR0002430
      XML-Fragements  

      Could the XML-Fragments be replaced by XML-Documents?
      
      If they were XML-Documents one could use XML-Editors such as XML-Spy to edit 
      them.  

      The XML Fragments have been replaced by complete ant project documents.
                  
2.1.  FIXED BUGS
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      A few classes had to be moved from kernel to base or vice versa. 
      
2.2.  DEPRECATED FEATURES
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      As a consequence org.openmdx.base.exception.BasicException has been 
      deprecated in favour of org.openmdx.kernel.exception.BasicException. 

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.5                                                       2004-07-27
==============================================================================

1.    NEW FEATURES
      
      CR0002257
      ObjectView plugin. 

      ObjectView plugins allow to prepare temporary (unit of work) application-level 
      objects. The objects are analogous to rows in SQL views. E.g. a code provider 
      prepares code table entries according to definitions (templates, views, entries) 
      retrieved from a code definition provider. Or a calendar provider prepares
      calendar, year and day objects (see sample org:openmdx:test:calendar1 and
      TestObjectView_1).
      
      CR0002440
      Component deployment order  
      
      Keep the components deployment in the same order as they appear in the 
      module's XML file.  
      
      The modules are deployed in application.xml's order at the moment, while a 
      module's components are deployed in any order.  

      CR0002408 
      Error-message when resolving manifest class-paths
      
      The LighweightClassLoader validates now all URLs.


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002311 & CR0002413
      ejbCreate in activate  
      
      Use LateBindingConnection_1 in Dataprovider_1 EJB activation code.  
                  
2.1.  FIXED BUGS

      none      
      
2.2.  DEPRECATED FEATURES
      none      

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.5                                                       2004-07-16
==============================================================================

1.    NEW FEATURES

      CR0002395
      MultiLineStringRepresentation marker interface 
      
      Objects with a toString() method returning a multi-line string 
      representation of themselves should implement the 
      MultiLineStringRepresentation marker interface.
      
      CR0002359
      JRE 1.4 support
      
      Alpha release of the jre-1.4 platform support.
            
      CR0002422
      Multi-Edition support
      
      The new mandatory project.platform.list (e.g. "jre-1.4/jre-1.3")
      which to which values build.target.platform will be set (in the
      given order) by an "ant all" command. The values are separated 
      by a slash character ('/'). The last value is the default for
      all ant targets except "all".


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002396
      ResourceAdapterDocorator Properties  

      Use the resource 
      org/openmdx/kernel/application/deploy/jdbc-driver-url.properties to 
      define the well-known URL/Driver mappings.
      
      Its current entries are:
      * com.microsoft.jdbc.sqlserver.SQLServerDriver jdbc:microsoft:sqlserver:
      * weblogic.jdbc.mssqlserver4.Driver            jdbc:weblogic:mssqlserver4:
      * oracle.jdbc.driver.OracleDriver              jdbc:oracle:
      * com.sap.dbtech.jdbc.DriverSapDB              jdbc:sapdb:

      CR0002422
      Multi-Edition support
      
      An additional  platform directory (e.g. jre-1.4, jboss-3, ...) has been  
      introduced where necessary.

      CR0002423 
      Velocity Log System  

      Tell the velocity engine to use the openMDX Log System.  
      
      CR0002430
      XML-Fragements  

      Could the XML-Fragments be replaced by XML-Documents?
      
      If they were XML-Documents one could use XML-Editors such as XML-Spy to edit 
      them.  

      The XML Fragments have been replaced by complete ant project documents.
                  
2.1.  FIXED BUGS
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      A few classes had to be moved from kernel to base or vice versa. 
      
2.2.  DEPRECATED FEATURES
      
      CR0002386
      Kernel referring to Base  
      
      Avoid Kernel classes referring to Base classes.  

      As a consequence org.openmdx.base.exception.BasicException has been 
      deprecated in favour of org.openmdx.kernel.exception.BasicException. 

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.4                                                       2004-07-16
==============================================================================

1.    NEW FEATURES

      CR0002419
      Database_1: add format 'slicedNonIndexed' 
      
      Add the class DbObjectSlicedNonIndexed and at the same time support the 
      type in the database configuration. In cases where non-indexed slices are 
      returned this type can improve the performance of queries. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      none
            
2.1.  FIXED BUGS
      
      CR0002414
      env entries without values  
      
      env entries without values should be allowed according to the DTD.  

      
2.2.  DEPRECATED FEATURES
      none
      
2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.3                                                      2004-07-13
==============================================================================

1.    NEW FEATURES

      CR0000825
      Lightweight Container
      
      LightweightContainer_1 with its proprietary deployment configuration 
      files and lookup classes have been deprecated in favour of 
      LightweightContainer, a JNDI and partially J2EE compliant
      implementation.

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002386
      Kernel referring to Base

      - org.openmdx.base.exception.BasicException and 
        org.openmdx.base.exception.StackedExceptions deprecated in favour of
        org.openmdx.kernel.exception.BasicException.
      - org.openmdx.base.enumeration.* deprecated in favour of
        org.openmdx.kernel.enumeration.*.
            
2.1.  FIXED BUGS

      CR0002352
      List iterates to the end
      
      The isEmpty() method calculates the list's size mostly looping over the whole
      collection.
      
      isEmpty() can be determined after the first roundtrip from now on.
      
2.2.  DEPRECATED FEATURES

      CR0002386
      Kernel referring to Base

      - org.openmdx.base.exception.BasicException and 
        org.openmdx.base.exception.StackedExceptions deprecated in favour of
        org.openmdx.kernel.exception.BasicException.
      - org.openmdx.base.enumeration.* deprecated in favour of
        org.openmdx.kernel.enumeration.*.
        
      CR0000825
      Lightweight Container
      
      LightweightContainer_1 with its proprietary deployment configuration 
      files and lookup classes have been deprecated in favour of 
      LightweightContainer, a JNDI and partially J2EE compliant 
      implementation.
      
2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.2                                                       2004-07-06
==============================================================================

1.    NEW FEATURES
      
      CR0002372
      Database_1: use ResultSet.TYPE_FORWARD_ONLY instead of 
      ResultSet.TYPE_SCROLL_INSENSITIVE. Database only scrolls forward on 
      result sets. Using TYPE_FORWARD_ONLY instead of TYPE_SCROLL_INSENSITIVE 
      can improve performance of find() operations dramatically 
      (especially with MS-SQL). 
      
      CR0000825
      Lightweight Container 
      
      The LightweightContainer supports:
      * EAR deployment, even in exploded form 
      * RMI Transport, using standard EJB intefaces 

      CR0002359
      JRE 1.4 Support
      
      The Ant build process should support the configuration of the source and 
      target version to be used by the Java compiler.
      
      The default values are:
      * build.source.version="1.3"
      * build.target.version="${build.source.version}"


2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002365
      j2ee-apis and tomcat 5  
      
      Wenn ich die Bibliothek zusammen mit Tomcat 5 verwende gibt es
      Versionskonflikte. Entfernen aller servlet-apis hilft. 
      
      serlvet-api.jar content separated from the remaining j2ee-apis.jar 
      content.	
            
2.1.  FIXED BUGS
      none
      
2.2.  DEPRECATED FEATURES

      CR0000825
      Lightweight Container 

      LightweightContainer_1 is deprecated in favour of LightweightContainer.

2.3   REMOVED FEATURES
      none

      
==============================================================================
Version 1.3.1                                                       2004-06-27
==============================================================================

1.    NEW FEATURES
      
      CR0002348
      Database_1: support for MaxDB (http://www.mysql.com/products/maxdb/).
      
      CR0002343
      Model export supports wildcards. In addition to fully qualified model 
      names wildcards should be allowed for the model export. E.g. 'org:%' 
      exports all 'org' models, '%' exports all models.
      
      CR0002232
      Add a generic servlet which allows browsing and editing of provider 
      objects. Take rendering info from ui1 provider.
      
      CR0002145, CR0002231
      Database_1: support for user-defined schemas. Subclassing DbObject
      allows to use existing tables and schemas. For more information see
      javadoc of DbObjectType.
      
      CR0002241
      Database_1: allow to configure fetch size for prepared statements. The
      new configuration option 'fetchSize' was added.
      
      CR0002267
      Pool support  
      
      Add the following packages to openMDX
      * org.openmdx.uses.org.apache.commons.collections 
      * org.openmdx.uses.org.apache.commons.pool 
      
      CR0002269 
      Serializability of Structure_1_0 implementations
      
      The following Structure_1_0 implementations are now Serializable:
      * org.openmdx.compatibility.base.dataprovider.transport.delegation.MapStructure_1
      * org.openmdx.compatibility.base.dataprovider.transport.delegation.ListStructure_1
      
      CR0001014 
      BasicException Mappers
      
      A BasicException.Mapper for NamingExceptions has been added.
      
      CR0002338
      StreamMarshaller: Output Stream Handling
      
      The StreamMarshaller should handle output streams correctly.  
      
      They are marshalled correctly at the moment, but not yet unmarshalled. 

2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0002252
      Database_1: optimize and fix remove. In case of a large number of sliced
      tables remove scanned all tables which is unnecessary. In addition remove
      does not require anymore the presence of the _GENERIC table.
      
      CR0002327 
      ZIP protocol handler 
      
      The zip URL protocol is used by openMDX as well as some Apache software.
      
      Replace openMDX' ear, rar, war and zip URL protocol handlers by an xri 
      URL protocol handler resolving "+zip" authorities in order to avoid 
      conflicts.
      
      Examples:
      * xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/index.txt 
      * xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/index.txt 
      * xri:+zip.(xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/a.war)/index.txt 
      * xri:+zip.(xri:+zip.(xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/a.war)/WEB-INF/lib/a.jar)/index.txt 
      * xri:+zip.(xri:+zip.(xri:+zip.(file:/var/project/openMDX/test-core/src/resource/org/openmdx/test/kernel/url/a.zip)/an.ear)/a.war)/WEB-INF/lib/a.jar 

      CR0002328
      JRE version  
      
      The JRE-Version must be included in the distrbution file names.  
      
      Classes built for JRE 1.4 are usually bytecode 1.2 compliant as opposed to 
      bytecode 1.1 for JRE 1.3. 
      
      Examples:
      * openmdx-1.3.1-core.jre-1.3.zip
      * openmdx-1.3.1-core.jre-1.3.tar.gz

      CR0002315
      Lightweight Container Package  
      
      The Lightweight Container and its closure must be moved to the 
      openmdx.kernel subtree.  
      
      The reason is, that the openMDX/Library openmdx-base.jar may be put into 
      the enterprise application archive and its content would therefore not 
      be available for deployment.  
   
            
2.1.  FIXED BUGS

      CR0002360
      endless loop when defining circular alias types
      
      circular alias type definitions are now detected and reported by means of a ServiceException
      
      CR0002304
      RefObject_1.refRemoveValue(): remove non-persistent objects with objMove.
      
      CR0002310, SF955864
      dateTime not supported as parameter type.
            
      CR0002284, SF955867
      RefObjectFactory_1.createStructure(): wrong ordering of structure fields.
      
      CR0002341
      Strict_1 does not recognize inherited operations. Strict_1 does not 
      recognize operations which are defined in supertypes of referenced type 
      and supertypes of subtypes of referenced type. 
      
      CR0002342
      RefStruct_1.refGetValue() throws ClassCast for non-String types.
      
      CR0002323
      Ui_1 plugin: ordering of operation definitions is ignored.
      
      CR0002319
      RefStruct_1.refGetValue() does not marshal single-valued object references.
      
      CR0002303
      JMI: RefObject_1.refRemoveValue(feature, object) must not delegate to 
      objRemove(). 
      
      CR0002275
      XMIParser should not crash if SAX locator is not set
      
      In case of some parsing failures (e.g. file not found), the XMIParser 
      throws a NullPointerException instead of a proper exception.
      
      CR0002271
      A ServiceException thrown by a Spice_2 Plugin is not converted in a 
      JmiServiceException 
      
      JmiAccessor throws a MarshalException in case that the plugin throws a 
      ServiceException.
      
      CR0001693
      Replace State_1.iterateModelForstatefulReferencePaths() by a more robust 
      algorithm.
      
      The algorithm has been changed to avoid endless looping.
      
      CR0002307
      Iteration continuation with states not supported for non stated objects.
      
      CR0002351 
      LightweightContainer_1 with more than one Database connection driver
      
      Logging the driver properties failed.
      
2.2.  DEPRECATED FEATURES
      none

2.3   REMOVED FEATURES
      none
      
==============================================================================
Version 1.3.0                                                       2004-05-06
==============================================================================

1.    NEW FEATURES

      CR0001270
      Project Tree
      
      Use the "ant install" command to install the distribution files
      into the original directory structure.

      CR0002250
      XmlImporter: cache schemas and type definitions.
      
      CR0001278
      JMI: org:w3c:duration. Map org:w3c:duration to
      org.openmdx.uses.javax.xml.datatype.Duration.
      
      CR0002081
      JMI: org:w3c:date. Map org:w3c:date to
      org.openmdx.uses.javax.xml.datatype.XMLGregorianCalendar. 
      
      CR0002227
      SparseArray classes 
      
      SparseArray classes belong to org.openmdx.base.collection.  


2.    CHANGES  
     
2.0.  CHANGED FEATURES

      CR0001980
      JMI: SortedMap get<feature>() should be only signature in case of 
      stereotype <sparsearray>.
      
      CR0001978
      JMI: add signature List get<feature>(RefFilterSubClass) in case of shared 
      and composite references.
      
      CR0001977
      JMI: remove signature remove<feature>(RefObjectSubClass) in case of shared 
      and composite associations. A remove must currently be implemented as 
      > container = (Container)object.get<feature>();
      > container.remove(element).
      
      CR0000916
      Should RefDelegatingObject_1.objGetValue() dispatches all features
      (derived, non-derived, attributes, references) to JMI methods.

      CR0002216
      view, context and role  
      
      Separate ViewCapable/"view" from ContextCapable and RoleCapable.  
      
      Diese Aenderung beinhaltet folgende Schritte:
      1. Wir lassen "view" wie es ist. 
         Es dient nur zur Unterstuetzung des Modells 
         org::openmdx::compatibility::audit1.
         Diese Pattern werden wir in openMDX 2 nur noch im Zusammenhang mit 
         Object_1_0/DataproviderObject unterstuetzen, das heisst, die 
         Anwendungen muessen auf org::openmdx::audit2 umsteigen, um die neuen 
         Infrastrukturkomponenten nutzen zu koennen. 
      2. Wir entkoppeln "ContextCapable" von "ViewCapable".
         "ContextCapable" dient zur Unterstuetzung der 
         Nichtkompatibilitaetsmodelle wie org::openmdx::lock1 und 
         org::openmdx::datastore1. 
         Im DataproviderObject werden ContextCapable-Features durch das Praefix 
         "context:" ausgezeichnet. 
      3. Wir entkoppeln RoleCapable von "view". 
         Im DataproviderObject werden RoleCapable-Features durch das Praefix 
         "role:" ausgezeichnet. 

      CR0002226
      Use Sun's backtrace format  

      Start each backtrace entry with "at ".
      
      This allows IDE's such as Eclipse to recognize backtrace entries. 

      CR0002227
      SparseArray classes 
      
      SparseArray classes belong to org.openmdx.base.collection.        
      They should be removed from org.opnemdx.compatibility.base.collection.

      CR0002239 
      JNDI implementation
      
      Add an own JNDI implementation.
      
      It should be complete yetlighweight in order ot be used with openMDX' 
      own container.  
      
      The packages are:
      * org.openmdx.kernel.naming.spi 
      * org.openmdx.base.naming.exception 
      * org.openmdx.base.naming.protocol.java 
      * org.openmdx.base.naming.protocol.openmdx 

      
2.1.  FIXED BUGS

      CR0001306
      JMI: Fully qualified class names in generated JMI methods.
      This avoids the necessity for such unqualified imports as java.math.* 
      leading to an "unused import" warning issued by some IDEs.
       
      CR0002222
      Poseidon XMI import crashes if a class has no features

2.2.  DEPRECATED FEATURES

      CR0002213
      UIDFactory  
      
      org.openmdx.base.net.UIDFactory, a subclass of
      org.openmdx.compatibilty.base.net.UIDFactory, has been left there for
      compatibility reasons.
      
      CR0002244      
      Service Lookup Unification
      
      The ServiceLocator_1_0 instances remain available in the 1.x releases 
      for compatibility reasons although using JNDI directly is the preferred 
      way to locate services.
      
      * Use SimpleServiceLocator to retrieve the SimpleServiceLocator_1 
        singleton which uses the Local JNDI tree only. 
      * Use StandardServiceLocator to retrieve the StandardServiceLocator_1 
        singleton which uses
        - the local JNDI tree if the registratioId does not contain a '/' 
        - a foreign JNDI tree accessed throught "new InitialContext()" if the 
          registrationId contains one or more '/'  


2.3   REMOVED FEATURES

      CR0002227
      SparseArray classes 
      
      SparseArray classes should be removed from 
      org.openmdx.compatibility.base.collection.  

      CR0002244      
      Service Lookup Unification
      
      Remove 
      org.openmdx.compatibility.kernel.application.cci.SimpleServiceLocator_1 
      as it is a duplicate of SimpleServiceLocator.  
   
      
==============================================================================
Version 1.2.1                                                       2004-04-10
==============================================================================

1.    NEW FEATURES
      
      CR0002201
      Reactivate support for Together.

      CR0002213
      UUID  
      
      Replace the proprietary UID format by an ISO/IEC 11578:1996 compliant 
      one.
      
      Resolution based on 
      http://java.sun.com/j2se/1.5.0/docs/api/java/util/UUID.html and
      http://www.ietf.org/internet-drafts/draft-mealling-uuid-urn-03.txt. 
      
      The following Plugins are available from 1.2.0+ on:
      * org.openmdx.kernel.id.plugin.TimeBasedUUIDGeneratorUsingRandomBasedNode 
      * org.openmdx.kernel.id.plugin.RandomBasedUUIDGenerator 
      Plugins such as the following ones can be developped on demand:
      * TimeBasedUUIDGeneratorUsingMACNode
      * TimeBasedUUIDGeneratorUsingTemplateBasedNode  

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002199
      XMI files should no longer be unpacked.  
      
      Replace
      1. unpacking to XMI JAR files to ${thirparty.model.dir} 
      2. adding $(thirparty.model.dir} to the JUnit classpath 
      by
      1. copying the XMI JAR files as they are to the $(thirparty.model.dir} 
      2. creating a file named ${root.model.jar.name} in the 
         $(thirparty.model.dir} and adding it the the JUnit classpath 
         
      CR0002213
      UIDFactory moved from org.openmdx.base.net to 
      openmdx.compatibility.base.net.
      
      CR0002040
      Substitute StringBuffer by a non-synchronized implementation
 
      StringBuilder moved to org.openmdx.uses.java.lang  
      
2.1.  FIXED BUGS
      none

2.2.  DEPRECATED FEATURES

      CR0002213
      UIDFactory  
      
      The UIDFactory has been deprecated in favour of UUIDGenerator instances.
      
==============================================================================
Version 1.2.0                                                       2004-04-04
==============================================================================

1.    NEW FEATURES

      CR0002008
      Port 'Java Pet Store Demo' to openMDX.
      
      CR0001687
      Extent support: InMemory_1.
      
      CR0000045
      URL protocol handlers for the lightweight container
      
      Addressing of files in nested archives supported:
      1. JAR 
      2. WAR or RAR 
      3. EAR 
      4. ZIP 
      
      E.g.:
      * zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/index.txt
      * ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/index.txt
      * war:ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/a.war;/index.txt
      * jar:war:ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/a.war;/WEB-INF/lib/a.jar!/index.txt
      * war:ear:zip:file:/etc/opt/openmdx/test/kernel/url/a.zip&/an.ear,/a.war;/WEB-INF/lib/a.jar      
      

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002173
      The XMIImporter_1 no longer creates isFrozen constraints when importing 
      into the MOF repository. RosePoseidonMagicDrawRepositoryDiff now reports
      zero differences between Rose (mdl/cat files), MagicDraw (XMI1.2/UML1.4) 
      and Poseidon (XMI1.2/UML1.4) imports.
      
      CR0002171
      Non-ASCII character in source code
        
      Non ASCII-Characters in the source code should be escaped. 
      
      Resolved as following:
      * The Java program text uses ASCII characters only 
      * Some comment will continue using non-ASCII Unicode characters and may 
        be misinterpreted if the editor or viewer is not aware of the 
        corresponding character encoding. 

2.1.  FIXED BUGS
      
      CR0002175
      Audit_1 plugin crashes in prolog.

      CR0002176
      Database_1: fehlender CAST NULL. 
      Replace statement.append(", NULL AS " + getColumnName(aj, 0)); by
      satement.append(", CAST(NULL AS CHARACTER) AS " + getColumnName(aj, 0));
      The 'NULL AS CHARACTER' expression can be configured with the option
      'nullAsCharacter'. Default value is NULL, a value for databases which
      require a type-safe cast is 'CAST(NULL AS CHARACTER)'.

      CR0002172
      RoseExporter: do not generate constraint element for constraint 
      'isFrozen'.

      CR0002177
      NOT_FOUND Exception bei Operation OBJECT_SETTING im prolog 
      
      Despite the fix it is strongly recommended to avoid the deprecated "set" 
      operations as they interfere with the optimizations introduced in the
      meanwhile.
      
      Set operations will be supported client-side only in the future because
      they interfere with the state tarnsitions as defined by JDO: 
      Only transitions of the form TRANSIENT -> PERSISTENT-NEW -> PERSISTENT 
      allow the appropriate instance callback methods to be invoked. 
      Server-side set operations on the other side would require a state like
      MAYBE-PERSISTENT-MAYBE-PERSISTENT-NEW, meaning for example that "maybe" 
      postLoad should be invoked.
      
      The XML importer is going to handle set operations itsef from openMDX 
      2.0 on, ledinbg to an additional roundtrip per object: 
      
        DataproviderObject o = null;
		boolean persisten;
		try {
			o = queryChannel.addGetRequest(accessPath)
			persistent = true;
		} catch (ServiceException exception) {
			persistent = false;
			if(exception.getExceptionCode != StackedException.NOT_FOUND) throw exception;
			o = new DataproviderObject(accessPath);
		}
		// populate o;
		if(persistent){
			unitOfWorkChannel.addRplaceRequest(o);
		} else {
			unitOfWorkChannel.addCreateRequest(o);
		}

     instead of the current implementation
     
		o = new DataproviderObject(accessPath);
		// populate o
		unitOfWorkChannel.addSetRequest(o);

      CR0002192
      DUPLICATE Handling  

      Evict during rollback fails for persistent containers of objects involved 
      in a BasicException.Code.DUPLICATE exception during commit.  
      
      All containers of objects involved in a BasicException.Code.DUPLICATE 
      exception during commit are cleared during rollback. 

            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES
      none


==============================================================================
Version 1.1.0                                                       2004-03-18
==============================================================================

1.    NEW FEATURES

      CR0002029
      datastore1: add operation describe(): string to class Database
      This operation describes the namespace. Database_1 returns the optimized
      type definitions for all classes found in the model. This information can
      be taken as input to generated slided tables.      

      CR0002161
      Add ear protocol handler
      
      The ear protocol handler allows direct access to archives embedded in an 
      EAR. The separator is ",/" as opposed to "!/" for the jar protocol.  
      
      The URL 
      "jar:ear:file:etc/resource/org/openmdx/test/kernel/url/an.ear,/a.jar!/index.txt" 
      for example refers to the file "index.txt" located in the JAR "a.jar" 
      which is itself located in the EAR 
      "etc/resource/org/openmdx/test/kernel/url/an.ear".  
      
      CR0002143
      Support for MagicDraw UML (No Magic, Inc.)
      
      It is now possible to import XMI 1.2 files (based on the UML metamodel)
      generated by MagicDraw UML into the MOF repository. In addition whenever
      a package is externalized, an XMI file is generated that can be imported 
      into MagicDraw UML to view the model. This allows the use of MagicDraw 
      UML as modeling tool for openMDX applications without any restrictions.
      
      CR0002062
      Support for Poseidon for UML (Gentleware AG)
      
      It is now possible to import XMI 1.2 files (based on the UML metamodel)
      generated by Poseidon for UML into the MOF repository. In addition whenever
      a package is externalized, an XMI file is generated that can be imported 
      into Poseidon for UML to view the model. This allows the use of Poseidon 
      for UML as modeling tool for openMDX applications without any restrictions.
      
      CR0002136
      Port openMDX to .NET.
      
      CR0002111
      JMI/Modeling: support stereotype <<map>> for attributes and 
      references-stored-as-attribute.
      
      CR0002121
      Fetch size overriding.

      CR0002139
      modification dates must be set from the server time only  
      
      createdAt and modifiedAt dates must be set depending on the time of server. 
      
      The UnitOfWork_1 EJB's default behaviour should be that the requestedAt 
      value is ignored for modification requests.  
   
       A "SECURITY/trustTransactionTime" configuration entry with default value 
       "false" has been added. 

      The UnitOfWork_1 EJB
      * sets the ServiceHeader's requestedAt value if it is null 
      * replaces it in case of a transactional unit of work if 
        "SECURITY/trustTransactionTime" is "false" 
      * keeps it if the unit of work is non-transactional or 
        "SECURITY/trustTransactionTime" is "true" 

2.    CHANGES  
     
2.0.  CHANGED FEATURES
      
      CR0002001
      refMofId should return id in new XRI format.
      
      CR0002027
      Modeling: get rid of ch:omex:generic:path.
      
      CR0002028
      Optimize model export.
      
      CR0000015
      Minimize use of singletons.      

2.1.  FIXED BUGS
      
      CR0002123
      RoseImporter_1 does not work on Unix.
      
      CR0002132
      runtime1 package name  

      Replace the incorrect org::openmdx::runtime1 model name by the correct 
      value org::openmdx::compatibility::runtime1  
      
      CR0002107
      Bad handling of derived attributes of ch:omex:State in State plugin
      object_invalidatedAt, underlyingState and statedObject are always provided

            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20020128
      objIsModified
      
      The objIsModified() method has been removed in favour of 
      thereRemainDirtyFeaturesAfterRemovingTheUnmodifiedOnes()

      CR0002160
      Remove resource protocol handler
      
      The "resource" protocol handler has been replaced by an "xri" protocol 
      handler for the "+resource" authority.
      
      E.g. "resource:org/openmdx/deployment1/xmi/deployment1_edit.xsd" has 
      been replaced by 
      "xri:+resource/org/openmdx/deployment1/xmi/deployment1_edit.xsd".  
      y::runtime1  
      
      CR0002107
      Bad handling of derived attributes of ch:omex:State in State plugin
      object_invalidatedAt, underlyingState and statedObject are always provided

            
2.2.  DEPRECATED FEATURES
      none
      
2.3.  REMOVED FEATURES

      CR20020128
      objIsModified
      
      The objIsModified() method has been removed in favour of 
      thereRemainDirtyFeaturesAfterRemovingTheUnmodifiedOnes()

      CR0002160
      Remove resource protocol handler
      
      The "resource" protocol handler has been replaced by an "xri" protocol 
      handler for the "+resource" authority.
      
      E.g. "resource:org/openmdx/deployment1/xmi/deployment1_edit.xsd" has 
      been replaced by 
      "xri:+resource/org/openmdx/deployment1/xmi/deployment1_edit.xsd".  
      