<?xml version="1.0" encoding="iso-8859-1"?>
<!--
=======================================================================
= Name:        $Id: build.xml,v 1.68 2011/11/02 14:26:07 wfro Exp $
= Description: openMDX/Test Core
= Revision:    $Revision: 1.68 $
= Date:        $Date: 2011/11/02 14:26:07 $
= Copyright:   (c) 2003-2010 OMEX AG
=======================================================================
 *
 * This software is published under the BSD license as listed below.
 * 
 * Copyright (c) 2004-2010, OMEX AG, Switzerland
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met:
 * 
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * 
 * * Neither the name of the openMDX team nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * This product includes software developed by other organizations as
 * listed in the NOTICE file.
-->
<project 
	name="openmdx-test.core" 
	default="-projecthelp"
	xmlns:openmdx="xri://(antlib:org.openmdx.tools.ant)"
	xmlns:antcontrib="antlib:net.sf.antcontrib"
>
	<description>Builds the openMDX/Test-Core component</description>
	<property name="project.specification.title" value="openMDX/Test-Core"/>

	<property name="model.transformation.class.path" value="project.lib.classpath"/>

	<!-- Slash separated platform list, the last entry being the default -->
	<property name="project.platform.list" value="jre-1.6"/>

	<!-- Included Ant Projects -->
	<import file="../ant/etc/ant/build-properties.xml"/>
	<import file="../ant/etc/ant/build-library.xml"/>

    
	<path id="project.lib.classpath">
		<path refid="openmdx.core.bin"/>
		<path refid="postgresql.jdbc.lib"/>
		<path refid="oracle.jdbc.lib"/>
		<pathelement location="${project.home}/osgi/${build.java.platform}/extension/lib/concurrent.jar"/>		
	</path>
	<path id="project.bin.classpath">
		<path refid="project.lib.classpath"/>
		<pathelement location="${basedir}/src/resource"/>
		<pathelement location="${build.dir}/bin"/>
		<pathelement location="${build.dir}/src/resource"/>
		<pathelement location="${build.dir}/model/${ant.project.name}.openmdx-xmi.zip"/>
	</path>
	<patternset id="project.junit.test.case">
		<include name="test/**/Test*.java"/>
		<exclude name="test/openmdx/base/*"/>
		<exclude name="test/openmdx/state2/**"/>
		<patternset refid="build.exclude"/>
	</patternset>

	<!-- ******************************************************************* -->
	<!-- * generate -->
	<!-- ******************************************************************* -->
	<target name="generate" description="Generate version, jt and model dependend files" depends="build-init">
		<ant dir="${openmdx.home}/core" inheritAll="false" target="deliverables">
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant> 
		<!-- There are no JT files at the moment
			<antcall target="-preprocess-jt-files-">
				<param name="preprocess-jt.target" value="java"/>
			</antcall>
		-->
		<antcall target="-preprocess-model-files-"/>
	</target>

	<!-- ******************************************************************* -->
	<!-- * deliverables -->
	<!-- ******************************************************************* -->
	<target 
		name="deliverables" 
		description="Populate the project's distribution directory" 
		depends="deliverables-init,build,source-archives"
	/>

	<!-- ******************************************************************* -->
	<!-- * distribution -->
	<!-- ******************************************************************* -->
	<target 
		name="distribution" 
		description="Creates a distribution" 
		depends="distribution-init,deliverables"
	>
		<openmdx:archive 
			destfile="${distribution.dir}/openmdx-${project.implementation.version}-test-core.${build.target.platform}."
			format="${distribution.format}"
			checksum="MD5"
		>
			<openmdx:archivefileset 
				dir="${basedir}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}"
			>
				<include name="*LICENSE"/>
				<include name="NOTICE"/>
				<include name="README"/>
				<include name="RELEASE-NOTES"/>
				<include name="build.xml"/>
				<include name="*.properties"/>
				<include name="*.xml"/>
				<include name=".cvsignore"/>
				<include name="etc/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}"
			>
				<include name="${build.target.platform}/test-core/**"/>
				<include name="source-archive/test-core/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}/${base.dir.name}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}/"
			>
				<include name=".classpath"/>
				<include name=".project"/>
			</openmdx:archivefileset>						
			<openmdx:archivefilterchain>
				<patternset>
					<include name="**/.project"/>
					<include name="**/.classpath"/>
				</patternset>
				<tokenfilter>
				    <replaceregex pattern="( \(.*\))? ~ " replace=" (${project.implementation.version}) ~ "/>
				</tokenfilter>
			</openmdx:archivefilterchain>			
		</openmdx:archive>
	</target>
		
</project>

