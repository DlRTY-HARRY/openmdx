/*
 * ====================================================================
 * Project:     openmdx, http://www.openmdx.org/
 * Name:        $Id: AbstractTestClock_1.jt,v 1.3 2007/06/04 13:05:49 hburger Exp $
 * Description: Class Loading Test
 * Revision:    $Revision: 1.3 $
 * Owner:       OMEX AG, Switzerland, http://www.omex.ch
 * Date:        $Date: 2007/06/04 13:05:49 $
 * ====================================================================
 *
 * This software is published under the BSD license as listed below.
 * 
 * Copyright (c) 2004-2007, OMEX AG, Switzerland
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 *  
 * * Neither the name of the openMDX team nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *  
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * ------------------
 * 
 * This product includes or is based on software developed by other 
 * organizations as listed in the NOTICE file.
 */
package org.openmdx.test.clock1.junit;

import javax.jmi.reflect.RefPackage;

import junit.framework.TestCase;

import org.openmdx.application.log.AppLog;
import org.openmdx.base.accessor.generic.view.Manager_1;
import org.openmdx.base.accessor.jmi.spi.RefRootPackage_1;
import org.openmdx.base.application.deploy.Deployment;
import org.openmdx.base.application.deploy.InProcessDeployment;
import org.openmdx.base.application.deploy.RemoteDeployment;
import org.openmdx.base.text.format.DateFormat;
import org.openmdx.compatibility.base.application.cci.Dataprovider_1Deployment;
import org.openmdx.compatibility.base.application.cci.Model_1Deployment;
import org.openmdx.compatibility.base.dataprovider.cci.RequestCollection;
import org.openmdx.compatibility.base.dataprovider.cci.ServiceHeader;
import org.openmdx.compatibility.base.dataprovider.transport.adapter.Provider_1;
import org.openmdx.compatibility.base.dataprovider.transport.cci.Dataprovider_1ConnectionFactory;
import org.openmdx.compatibility.base.dataprovider.transport.cci.Dataprovider_1_1Connection;
import org.openmdx.compatibility.base.dataprovider.transport.delegation.Connection_1;
import org.openmdx.compatibility.base.naming.Path;
import org.openmdx.kernel.application.deploy.cci.DeploymentProperties;
import org.openmdx.kernel.collection.ArraysExtension;

#if defined(BEFORE16)     
import org.openmdx.test.clock1.jmi.Clock1Package;
import org.openmdx.test.clock1.cci.Segment;
#else
import org.openmdx.test.clock1.jmi1.Clock1Package;
import org.openmdx.test.clock1.jmi1.Segment;
#endif

/**
 * Class Loading Test
 */
abstract class AbstractTestClock_1 extends TestCase {

	/**
	 * Constructor
	 * 
	 * @param name
	 */
	protected AbstractTestClock_1(
		String name
	){
		super(name);
	}  
  
	/**
	 * 
	 */
	protected synchronized void setUp(
	) throws Exception {  
        String message = ">>>> **** Start Test: " + this.getName();        
		Path segmentPath = new Path(PROVIDER_PATH).add("segment").add(this.getName());
		System.out.println(message);
		AppLog.info(message, segmentPath);
        this.dataproviderConnection = (
            "Remote".equals(getName()) ? TestClock_1.remoteConnectionfactory : TestClock_1.inProcessConnectionfactory
        ).createConnection();
	    RefPackage rootPkg = new RefRootPackage_1(
    		new Manager_1(
	            new Connection_1(
            		new Provider_1(
        				new RequestCollection(
    			            new ServiceHeader(),
    			            dataproviderConnection	
    			        ),
        	            false
            		),
	                false
	            )
    		),
            null, // impls
            null, // context
            "cci",
            false
        );
        Clock1Package clock1 = (Clock1Package)rootPkg.refPackage(
            "org:openmdx:test:clock1"
        );
	    this.segment = clock1.getSegment().getSegment(segmentPath); 
    }

	/* (non-Javadoc)
	 * @see junit.framework.TestCase#runTest()
	 */
	protected void runTest() throws Throwable {
		testClock();
	}
	
	/**
	 * 
	 */
	protected void tearDown(
	) {
		String message = "<<<< **** End Test: " + this.getName();        
		System.out.println(message);
		AppLog.info(message);
        this.dataproviderConnection.close();
	}

	/**
	 * 
	 * @throws Exception
	 */
	public void testClock(
	) throws Exception {
		System.out.println(
			DateFormat.getInstance().format(
				segment.getTime().getUtc()
			)
		);
	}
  
	/**
	 * 
	 */
	private Segment segment;
    
    /**
     * 
     */
    private Dataprovider_1_1Connection dataproviderConnection;
  
	/**
	 * 
	 */
	static private final String PROVIDER_PATH = "xri:@openmdx:org.openmdx.test.clock1/provider/Java";
	
	/**
	 * 
	 */
	static private final String APPLICATION_URL = "file:src/ear/test-classloading.ear";
	  
	/**
	 * 
	 */
	static private final String JNDI_NAME = "org/openmdx/test/supports/clock";
	
    /**
     * Define whether deployment details should logged to the console
     */
    final private static boolean LOG_DEPLOYMENT_DETAIL = false;
    
    private final static Deployment modelDeployment = new Model_1Deployment(
        new String[]{
            "org:openmdx:base",
            "org:w3c",
            "org:oasis-open",
            "org:openmdx:compatibility:view1",
            "org:openmdx:test:clock1"
        }
    );
    
    /**
     * 
     */
    protected final static Dataprovider_1ConnectionFactory inProcessConnectionfactory = new Dataprovider_1Deployment(
        new InProcessDeployment(
            null,
            APPLICATION_URL,
            LOG_DEPLOYMENT_DETAIL ? System.out : null,
            System.err
        ),
        modelDeployment, 
        JNDI_NAME  
    );

    
    /**
     * 
     */
    protected final static Dataprovider_1ConnectionFactory remoteConnectionfactory = new Dataprovider_1Deployment(
        new RemoteDeployment(
            ArraysExtension.asMap(
                new String[]{
                    DeploymentProperties.APPLICATION_URLS,
                    "build.java.platform",
                    "build.target.platform"
                },
                new String[]{
                    APPLICATION_URL,
                    System.getProperty("build.java.platform"),
                    System.getProperty("build.target.platform")
                }
            ),
            LOG_DEPLOYMENT_DETAIL ? System.out : null,
            System.err
        ),
        modelDeployment, 
        JNDI_NAME  
    );

}
