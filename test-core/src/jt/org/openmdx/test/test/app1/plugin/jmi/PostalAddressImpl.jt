/*
 * ====================================================================
 * Project:     openmdx, http://www.openmdx.org/
 * Name:        $Id: PostalAddressImpl.jt,v 1.3 2007/06/04 13:05:44 hburger Exp $
 * Description: class PostalAddressImpl
 * Revision:    $Revision: 1.3 $
 * Owner:       OMEX AG, Switzerland, http://www.omex.ch
 * Date:        $Date: 2007/06/04 13:05:44 $
 * ====================================================================
 *
 * This software is published under the BSD license as listed below.
 * 
 * Copyright (c) 2004-2007, OMEX AG, Switzerland
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * 
 * * Neither the name of the openMDX team nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * ------------------
 * 
 * This product includes or is based on software developed by other 
 * organizations as listed in the NOTICE file.
 */
package org.openmdx.test.test.app1.plugin.jmi;

import javax.jmi.reflect.RefException;

import org.openmdx.base.accessor.jmi.spi.RefException_1;
import org.openmdx.kernel.exception.BasicException;

#if defined(BEFORE16)
import org.openmdx.test.app1.jmi.App1Package;
import org.openmdx.base.jmi.BasePackage;
import org.openmdx.test.app1.cci.AddressFormatAsParams;
import org.openmdx.test.app1.cci.AddressFormatAsResult;
import org.openmdx.test.app1.cci.PostalAddress;
import org.openmdx.test.app1.cci.PostalAddressSendMessageParams;
#else
import org.openmdx.test.app1.jmi1.App1Package;
import org.openmdx.test.app1.jmi1.AddressFormatAsParams;
import org.openmdx.test.app1.jmi1.AddressFormatAsResult;
import org.openmdx.test.app1.jmi1.PostalAddress;
import org.openmdx.test.app1.jmi1.PostalAddressSendMessageParams;
#endif

/**
 * 
 */
public class PostalAddressImpl
  extends AddressImpl {

    /**
     * 
     */
	public PostalAddressImpl(
		PostalAddress delegate
	) {
		super(delegate);
		this.delegate = delegate;
	}
  
  	/**
     * 
  	 */
  	private final PostalAddress delegate;
  
    //-------------------------------------------------------------------------
  	// PostalAddress
  	//-------------------------------------------------------------------------

    /**
     * 
     */
    public AddressFormatAsResult formatAs(
        AddressFormatAsParams params    
    ) throws RefException {
    
    	App1Package pkg = (App1Package)this.delegate.refImmediatePackage(); 
    	AddressFormatAsResult result = null;
    
    	// format "Standard"
    	if("Standard".equals(params.getType())) {
    		StringBuffer formattedAddress = new StringBuffer();
    		formattedAddress.append(
    			this.delegate.getAddressLine(0) + "\n" +
    			this.delegate.getAddressLine(1) + "\n" +
    			this.delegate.getStreet() + " " + this.delegate.getHouseNumber() + "\n" +
    			this.delegate.getPostalCode() + " " + this.delegate.getCity() + "\n"
    		);
    		result = pkg.createAddressFormatAsResult(
    				formattedAddress.toString()
    		);
    	}  else {
    		// RefException is not a runtime exception and should be thrown here
    		// because an application-specific error is reported. RuntimeServiceExceptions
    		// should only be thrown in case of runtime failures
    		throw new RefException_1(
    			BasicException.Code.DEFAULT_DOMAIN,
    			BasicException.Code.ASSERTION_FAILURE, 
    			"name format not supported. Supported are [Standard]",
    			new BasicException.Parameter[]{
    				new BasicException.Parameter("format type", params.getType())
    			}
    		);
    	}
    	return result;
    }

#if defined(BEFORE16)
  	public org.openmdx.base.cci.Void sendMessage(
#else
    public void sendMessage(
#endif    
    	PostalAddressSendMessageParams params
    ) throws RefException  {
    	System.out.println("sending message " + params.getDocument());
#if defined(BEFORE16)
        return ((BasePackage)this.delegate.refOutermostPackage().refPackage("org:openmdx:base")).createVoid();
#endif    
  	}
    
}
