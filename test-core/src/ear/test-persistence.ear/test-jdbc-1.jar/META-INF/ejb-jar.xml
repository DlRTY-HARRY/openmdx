<?xml version="1.0"?>
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Harald Burger (private) -->
<!DOCTYPE ejb-jar PUBLIC '-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN' 'http://java.sun.com/dtd/ejb-jar_2_0.dtd'>
<ejb-jar>
	<enterprise-beans>
		<session>
			<ejb-name>generic</ejb-name>
			<local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
			<local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
			<ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
			<session-type>Stateless</session-type>
			<transaction-type>Container</transaction-type>
			<env-entry>
				<env-entry-name>KERNEL/exposedPath[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/Generic</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/namespaceId</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:w3c</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:oasis_open</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:compatibility:view1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/TYPE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.compatibility.base.dataprovider.layer.persistence.IgnoreNotFound_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/APPLICATION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.application.ProvidingUid_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/MODEL</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.compatibility.base.dataprovider.layer.persistence.IgnoreNotFound_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.jdbc.Database_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/allowsSqlSequenceFallback</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/batchSize</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>50</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/type[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/:*/segment/:*/cb/:*/slb/:*</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test_SLB_GENERIC</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>generic</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/columnNameFrom[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>administrative_description</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/columnNameTo[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>admin_descr</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/objectIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>_oid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>_rid</env-entry-value>
			</env-entry>
			<!-- path macros -->			
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroName[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test-sliced-s0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroValue[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/Sliced/segment/s0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroName[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test-generic-s0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroValue[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/Generic/segment/s0</env-entry-value>
			</env-entry>
			<resource-ref>
				<res-ref-name>jdbc/datasource[0]</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
			</resource-ref>
		</session>
		<session>
			<ejb-name>sliced</ejb-name>
			<local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
			<local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
			<ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
			<session-type>Stateless</session-type>
			<transaction-type>Container</transaction-type>
			<env-entry>
				<env-entry-name>KERNEL/exposedPath[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/Sliced</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/namespaceId</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/objectIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>_oid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>_rid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:w3c</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:oasis_open</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:compatibility:view1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/TYPE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.compatibility.base.dataprovider.layer.persistence.IgnoreNotFound_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/APPLICATION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.application.ProvidingUid_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/MODEL</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.test.compatibility.base.dataprovider.layer.persistence.IgnoreNotFound_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.jdbc.Database_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/allowsSqlSequenceFallback</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/batchSize</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>50</env-entry-value>
			</env-entry>
			<!-- SLB -->
			<env-entry>
				<env-entry-name>PERSISTENCE/type[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/:*/segment/:*/cb/:*/slb/:*</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test_SLB_SLICED</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[0]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>3</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.jdbc.SlicedDbObject</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value></env-entry-value>
			</env-entry>
			<!-- CB -->
			<env-entry>
				<env-entry-name>PERSISTENCE/type[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/:*/segment/:*/cb/:*</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObject[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test_CB_SLICED</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[1]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>sliced</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value></env-entry-value>
			</env-entry>
			<!-- column mappings -->
			<env-entry>
				<env-entry-name>PERSISTENCE/columnNameFrom[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>administrative_description</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/columnNameTo[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>admin_descr</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/QueryView[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>p1,p2,p3</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/QueryView[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>p1,p2</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/QueryView[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>p2,p3</env-entry-value>
			</env-entry>
			<!-- path macros -->			
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroName[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test-sliced-s0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroValue[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/Sliced/segment/s0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroName[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>test-generic-s0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/pathMacroValue[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>xri:@openmdx:org.openmdx.test/provider/Generic/segment/s0</env-entry-value>
			</env-entry>
			<!-- string macros -->
			<!-- 0 -->
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroColumn[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>object_class</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroName[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>CompoundBooking</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroValue[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:booking1:CompoundBooking</env-entry-value>
			</env-entry>
			<!-- 1 -->
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroColumn[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>object_class</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroName[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>SingleLegBooking</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroValue[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:booking1:SingleLegBooking</env-entry-value>
			</env-entry>
			<!-- 2 -->
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroColumn[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>advice_text</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroName[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>A99</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroValue[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</env-entry-value>
			</env-entry>
			<!-- 3 -->
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroColumn[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>advice_text</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroName[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>B99</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/stringMacroValue[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB</env-entry-value>
			</env-entry>			
			<resource-ref>
				<res-ref-name>jdbc/datasource[0]</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
			</resource-ref>
		</session>
	</enterprise-beans>
	<assembly-descriptor>
		<container-transaction>
			<method>
				<ejb-name>generic</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Mandatory</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>sliced</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Mandatory</trans-attribute>
		</container-transaction>
	</assembly-descriptor>
</ejb-jar>
