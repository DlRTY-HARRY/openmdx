<?xml version="1.0"?>
<!DOCTYPE ejb-jar PUBLIC '-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN' 'http://java.sun.com/dtd/ejb-jar_2_0.dtd'>
<ejb-jar>
	<enterprise-beans>
		<session>
			<ejb-name>Default</ejb-name>
			<local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
			<local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
			<ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
			<session-type>Stateless</session-type>
			<transaction-type>Container</transaction-type>			
			<env-entry>
				<env-entry-name>PERSISTENCE/objectIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>_oid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>_rid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/exposedPath[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Persistent/segment/Default</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/namespaceId</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>default</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:w3c</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:oasis-open</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:datatypes1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/TYPE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.type.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/APPLICATION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.application.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/MODEL</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.model.Datatypes_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.jdbc.Database_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>INTERCEPTION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>TYPE/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>APPLICATION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/allowsSqlSequenceFallback</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/batchSize</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>50</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdFormat</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>typeWithPathComponents</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/useNormalizedReferences</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<!-- Segment -->
			  <env-entry>
				<env-entry-name>PERSISTENCE/type[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Persistent/segment/($..)</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/typeName[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>extensionSegment</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>EXTENSION_SEGMENT</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[0]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>2</env-entry-value>
			   </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>sliced</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value/>
			  </env-entry>
			<!-- /Segment -->
			<!-- Extension -->
			  <env-entry>
				<env-entry-name>PERSISTENCE/type[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Persistent/segment/Default/($..)/($..)</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/typeName[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>extensionDefault</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObject[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>EXTENSION_Default</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[1]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>2</env-entry-value>
			   </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>sliced</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value/>
			  </env-entry>
			<!-- /Extension -->
			<resource-ref>
				<res-ref-name>jdbc/datasource[0]</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
			</resource-ref>
		</session>
		<session>
			<ejb-name>Numeric</ejb-name>
			<local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
			<local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
			<ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
			<session-type>Stateless</session-type>
			<transaction-type>Container</transaction-type>
			<env-entry>
				<env-entry-name>PERSISTENCE/objectIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>_oid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		    <env-entry-value>_rid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/exposedPath[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		         <env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Persistent/segment/Numeric</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/namespaceId</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>numeric</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:w3c</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:oasis-open</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:datatypes1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/TYPE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.type.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/APPLICATION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.application.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/MODEL</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.model.Datatypes_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.jdbc.Database_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>INTERCEPTION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>TYPE/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>APPLICATION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/allowsSqlSequenceFallback</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/batchSize</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>50</env-entry-value>
			</env-entry>
		  <env-entry>
				<env-entry-name>PERSISTENCE/referenceIdFormat</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>typeWithPathComponents</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/useNormalizedReferences</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
		<!-- Segment -->
			  <env-entry>
				<env-entry-name>PERSISTENCE/type[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Persistent/segment/($..)</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/typeName[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>extensionSegment</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>EXTENSION_SEGMENT</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[0]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>2</env-entry-value>
			   </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>sliced</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value/>
			  </env-entry>
			<!-- /Segment -->
			<!-- Extension -->
			  <env-entry>
				<env-entry-name>PERSISTENCE/type[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Persistent/segment/Numeric/($..)/($..)</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/typeName[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>extensionNumeric</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObject[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>EXTENSION_NUMERIC</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[1]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>2</env-entry-value>
			   </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>sliced</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value/>
			  </env-entry>
			<!-- /Extension -->
			<env-entry>
				<env-entry-name>MODEL/xmlDatatypes</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/xmlDatatypes</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/booleanType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>NUMERIC</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/booleanFalse</env-entry-name>
				<env-entry-type>java.lang.Byte</env-entry-type>
				<env-entry-value>0</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/booleanTrue</env-entry-name>
				<env-entry-type>java.lang.Byte</env-entry-type>
				<env-entry-value>1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/durationType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>NUMERIC</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dateTimeType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>NUMERIC</env-entry-value>
			</env-entry>
			<resource-ref>
				<res-ref-name>jdbc/datasource[0]</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
			</resource-ref>
		</session>
		<session>
			<ejb-name>Native</ejb-name>
			<local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
			<local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
			<ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
			<session-type>Stateless</session-type>
			<transaction-type>Container</transaction-type>
			<env-entry>
				<env-entry-name>PERSISTENCE/objectIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>_oid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>_rid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/exposedPath[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		         <env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Persistent/segment/Native</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/namespaceId</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>native</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:w3c</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:oasis-open</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:datatypes1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/TYPE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.type.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/APPLICATION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.application.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/MODEL</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.model.Datatypes_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.jdbc.Database_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>INTERCEPTION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>TYPE/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>APPLICATION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/allowsSqlSequenceFallback</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/batchSize</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>50</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdFormat</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>typeWithPathComponents</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/useNormalizedReferences</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<!-- Segment -->
			  <env-entry>
				<env-entry-name>PERSISTENCE/type[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>xri://@openmdx:org.openmdx.test.datatypes1/provider/Persistent/segment/($..)</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/typeName[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>extensionSegment</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObject[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>EXTENSION_SEGMENT</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[0]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>2</env-entry-value>
			   </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>sliced</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value/>
			  </env-entry>
			<!-- /Segment -->
			<!-- Extension -->
			  <env-entry>
				<env-entry-name>PERSISTENCE/type[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>xri://@openmdx:org.openmdx.test.datatypes1/provider/Persistent/segment/Native/($..)/($..)</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/typeName[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		        <env-entry-value>extensionNative</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObject[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>EXTENSION_NATIVE</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/pathNormalizeLevel[1]</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>2</env-entry-value>
			   </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectFormat[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>sliced</env-entry-value>
			  </env-entry>
			  <env-entry>
				<env-entry-name>PERSISTENCE/dbObjectForQuery[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value/>
			  </env-entry>
			<!-- /Extension -->
			<env-entry>
				<env-entry-name>MODEL/xmlDatatypes</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/xmlDatatypes</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/booleanType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>BOOLEAN</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/durationType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>INTERVAL</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dateType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>DATE</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/dateTimeType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>STANDARD</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/timeType</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>TIME</env-entry-value>
			</env-entry>
			<resource-ref>
				<res-ref-name>jdbc/datasource[0]</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
			</resource-ref>
		</session>
		<session>
			<ejb-name>Volatile</ejb-name>
			<local-home>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1LocalHome</local-home>
			<local>org.openmdx.compatibility.application.dataprovider.transport.ejb.cci.Dataprovider_1_0Local</local>
			<ejb-class>org.openmdx.compatibility.application.dataprovider.transport.ejb.server.Dataprovider_1Bean</ejb-class>
			<session-type>Stateless</session-type>
			<transaction-type>Container</transaction-type>
			<env-entry>
				<env-entry-name>PERSISTENCE/objectIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>_oid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/referenceIdAttributesSuffix</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
		       	<env-entry-value>_rid</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/exposedPath[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
 		          <env-entry-value>xri://@openmdx*org.openmdx.test.datatypes1/provider/Volatile</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/namespaceId</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>volatile</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[0]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:base</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[1]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:w3c</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[2]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:oasis-open</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/modelPackage[3]</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org:openmdx:test:datatypes1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/INTERCEPTION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.interception.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/TYPE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.type.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/APPLICATION</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.application.Standard_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/MODEL</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.model.Datatypes_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>KERNEL/PERSISTENCE</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.openmdx.compatibility.base.dataprovider.layer.persistence.none.InMemory_1</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>INTERCEPTION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>TYPE/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>APPLICATION/bypassedByLenientRequests</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/batchSize</env-entry-name>
				<env-entry-type>java.lang.Integer</env-entry-type>
				<env-entry-value>50</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>MODEL/xmlDatatypes</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
			<env-entry>
				<env-entry-name>PERSISTENCE/xmlDatatypes</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
			</env-entry>
		</session>
	</enterprise-beans>
	<assembly-descriptor>
		<container-transaction>
			<method>
				<ejb-name>Default</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Mandatory</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>Numeric</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Mandatory</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>Native</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Mandatory</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>Volatile</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Mandatory</trans-attribute>
		</container-transaction>
	</assembly-descriptor>
</ejb-jar>
